<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Mac OSX | 酒と泪とRubyとRailsと]]></title>
  <link href="http://morizyun.github.io/blog/categories/mac-osx/atom.xml" rel="self"/>
  <link href="http://morizyun.github.io/"/>
  <updated>2016-01-31T22:29:22+09:00</updated>
  <id>http://morizyun.github.io/</id>
  <author>
    <name><![CDATA[morizyun]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Mac Yosemite Rails 最新環境 詳解 構築手順 [Homebrew][rbenv][Ruby]]]></title>
    <link href="http://morizyun.github.io/blog/yosemite-mac-rails-setup-rbenv-ruby/"/>
    <updated>2015-03-08T15:40:00+09:00</updated>
    <id>http://morizyun.github.io/blog/yosemite-mac-rails-setup-rbenv-ruby</id>
    <content type="html"><![CDATA[<p><a href="http://www.amazon.co.jp/gp/product/4800710685/ref=as_li_qf_sp_asin_il?ie=UTF8&camp=247&creative=1211&creativeASIN=4800710685&linkCode=as2&tag=morizyun00-22"><img border="0" src="http://ws.assoc-amazon.jp/widgets/q?_encoding=UTF8&ASIN=4800710685&Format=_SL160_&ID=AsinImage&MarketPlace=JP&ServiceVersion=20070822&WS=1&tag=morizyun00-22" width="150" style="float: left; margin: 0 20px 20px 0;" ></a><img src="http://www.assoc-amazon.jp/e/ir?t=morizyun00-22&l=as2&o=9&a=4800710685" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" />
遅まきながら、Mac YosemiteにRailsのモダンな開発環境を構築するまでの一連の手順をまとめました。
開発環境には好みがあると思いますが、Macを新しく買ったり、OSを再インストールした時などは良かったら使ってください！</p>

<!-- more -->


<br style="clear:both;"/>


<p><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- square -->
<ins class="adsbygoogle" style="display:inline-block;width:336px;height:280px" data-ad-client="ca-pub-4186413323075068" data-ad-slot="5059873392"></ins>
<script>
    (adsbygoogle = window.adsbygoogle || []).push({});
</script></p>

<h2>XCodeのインストール</h2>

<p><strong><a href="https://developer.apple.com/jp/technologies/tools/">XCode</a></strong><br/>
Mac App StoreからXCodeをインストール。</p>

<p>必須ではないかもですが、コマンドラインからのライセンスの同意。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo xcodebuild -license
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h2>Homebrewのインストール</h2>

<p><strong><a href="http://mxcl.github.com/homebrew/">Homebrew</a></strong><br/>
ターミナルに次のコマンドを入力してインストール。途中で聞かれる、XcodeのCommand Line Toolもインストール。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>ruby -e <span class="s2">&quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&quot;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h2>Oh-my-zshのインストール</h2>

<p>次にzshを適度にカスタマイズしてくれる<strong><a href="https://github.com/robbyrussell/oh-my-zsh">robbyrussell/oh-my-zsh</a></strong>
をインストールします。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>curl -L https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh | sh
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h2>gitのインストール</h2>

<p>ソースコードのバージョン管理の仕組みである『<strong><a href="http://git-scm.com/">Git</a></strong>』の初期設定のコマンドを実行。このユーザー名と、メールアドレスはgit内で使われるだけなので自由に設定してください。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>brew install git
</span><span class='line'>git config --global user.name <span class="s2">&quot;ユーザー名&quot;</span>
</span><span class='line'>git config --global user.email email@example.com
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Gitソースコードの管理から共通して除外したいファイルを指定するための
設定を記述する<code>.gitignore</code>を作成&amp;登録します。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;gitignore自動生成をしてくれるツール&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;brew install gibo&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;JetBrainsとMacの不要なファイルを登録&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;gibo JetBrains OSX &gt; .gitignore&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;gitに登録&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;git config --global --add core.excludesfile <span class="s2">&quot;$HOME/.gitignore&quot;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>これで<code>~/.gitignore</code>に常にコミットしないファイルが登録されました。</p>

<p>github用のパスワードを予め登録。<code>vi ~/.netrc</code>で以下を追記。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>machine github.com
</span><span class='line'>login USERNAME
</span><span class='line'>password PASSWORD
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h2>autojumpのインストール</h2>

<p>次のautojumpをインストール。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>brew install autojump
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p><code>vim ~/.zshrc</code>で以下の内容を追加。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;alias&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;alias <span class="nv">ls</span><span class="o">=</span><span class="s2">&quot;ls -la&quot;</span>&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;autojump&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;<span class="o">[[</span> -s &lt;code&gt;brew --prefix&lt;/code&gt;/etc/autojump.sh <span class="o">]]</span> &amp;amp;&amp;amp; . &lt;code&gt;brew --prefix&lt;/code&gt;/etc/autojump.sh
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>で設定を反映。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">source</span> ~/.zshrc
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h2>アプリのインストール</h2>

<h3><a href="http://www.iterm2.com/#/section/home">iTerm2 - Mac OS Terminal Replacement</a></h3>

<p><a href="http://www.iterm2.com/#/section/home" title="iTerm2"><img src="http://farm6.staticflickr.com/5469/9656599733_2a426ddd97.jpg" width="500" height="168" alt="iTerm2"></a></p>

<p>標準のターミナルに比べて多機能。ただし、β版はカナリ冒険しているので安定板を使うことをお勧めします。</p>

<h3><a href="https://atom.io">Atom</a></h3>

<p>GitHubが出しているハックできるエディタです。着実に使いやすくなってきています！</p>

<h3><a href="http://www.google.co.jp/intl/ja/chrome/browser/">Chrome</a></h3>

<p>言わずと知れたGoogle謹製のブラウザー。Dev Toolがないと生きていけない。</p>

<h3><a href="http://www.google.co.jp/ime/">Google 日本語入力</a></h3>

<p>同じく、Google製の日本語入力ツール。無料では間違いなく最強だと思います。</p>

<h3><a href="https://evernote.com/intl/jp/">Evernote</a></h3>

<p>クラウドでいつでもどこでも最新のノートが見れるアプリ。容量の大きなデータを保存しなければ、無料で十分使えます。</p>

<h3><a href="https://www.dropbox.com/home">Dropbox</a></h3>

<p>クラウドでいつでもどこでもファイルを保存・閲覧できるアプリ。<br/>ローカルフォルダ感覚でほとんど意識せずに使えるのは本当に素晴らしいです！</p>

<h3><a href="https://www.jetbrains.com/ruby/">RubyMine</a></h3>

<p>Ruby on Rails用のIDE(統合開発管理ツール)です。個人利用版は$99(約12,000円)ですが、体験版は1ヶ月無料(機能制限なし)なので良かったら試してみてください。</p>

<h3><a href="http://stereopsis.com/flux/">f.lux</a></h3>

<p>ディスプレイの色温度を昼/夜で調節してくれるアプリ。個人的にJIN PCメガネをずっと買おうと思ってたので助かる！</p>

<h3><a href="https://itunes.apple.com/jp/app/dash-docs-snippets/id458034879">Dash</a></h3>

<p>ほぼ有料ソフト($20)ですが、インストールする価値は十分にあります。
主要なライブラリ、フレームワークの API リファレンスをまとめて検索・閲覧できます。</p>

<h3><a href="http://blog.boastr.net/">BetterTouchTool</a></h3>

<p>Macでキーボードでのウィンドウ操作をしたいときに便利なツール。使いはじめると手放せなくなります！</p>

<h3><a href="http://www.sourcetreeapp.com/">SourceTree</a></h3>

<p>gitなどのバージョン管理の仕組みをGUIで表示してくれるツール。手放せなくなっています。</p>

<h3><a href="http://mattpatenaude.com/">COLORS</a></h3>

<p>Macのネイティブのカラーピッカー、画面上の色を抽出してくれます。最近の必須アイテムです。</p>

<h2>gemインストールの設定</h2>

<p><code>gem install</code>で不要なドキュメントをインストールしないように<code>vim .gemrc</code>
として以下を記入。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>install: --no-document
</span><span class='line'>update: --no-document
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h2>rbenvのインストール</h2>

<p><code>rbenv</code>と<code>ruby-build</code>をインストール。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;rbenv / ruby-build / rbenv-gem-rehash をインストール&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;brew install rbenv ruby-build rbenv-gem-rehash&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;rbenvを使うときにデフォルトでgemを追加してくれるツールを追加&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;git clone https://github.com/sstephenson/rbenv-default-gems.git ~/.rbenv/plugins/rbenv-default-gems&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;デフォルトでインストールするgemを追記&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;echo <span class="s1">&#39;bundler\nrails&#39;</span> ~/.rbenv/default-gems
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>次コマンドを実行して、vimで<code>~/.zshrc</code>を開きます。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>vim ~/.zshrc
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>ファイルを開いたら次の内容を追加。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="k">if </span>which rbenv &gt; /dev/null; <span class="k">then </span><span class="nb">eval</span> <span class="s2">&quot;$(rbenv init -)&quot;</span>; <span class="k">fi</span>&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;function gem<span class="o">(){</span>
</span><span class='line'>  <span class="nv">$HOME</span>/.rbenv/shims/gem <span class="nv">$*</span>
</span><span class='line'>  <span class="k">if</span> <span class="o">[</span> <span class="s2">&quot;$1&quot;</span> <span class="o">=</span> <span class="s2">&quot;install&quot;</span> <span class="o">]</span> <span class="o">||</span> <span class="o">[</span> <span class="s2">&quot;$1&quot;</span> <span class="o">=</span> <span class="s2">&quot;i&quot;</span> <span class="o">]</span> <span class="o">||</span> <span class="o">[</span> <span class="s2">&quot;$1&quot;</span> <span class="o">=</span> <span class="s2">&quot;uninstall&quot;</span> <span class="o">]</span> <span class="o">||</span> <span class="o">[</span> <span class="s2">&quot;$1&quot;</span> <span class="o">=</span> <span class="s2">&quot;uni&quot;</span> <span class="o">]</span>
</span><span class='line'>  <span class="k">then</span>&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;pre&gt;&lt;code&gt;rbenv rehash
</span><span class='line'>&lt;/code&gt;&lt;/pre&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;  <span class="k">fi</span>
</span><span class='line'><span class="o">}</span>&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;function bundle<span class="o">(){</span>
</span><span class='line'>  <span class="nv">$HOME</span>/.rbenv/shims/bundle <span class="nv">$*</span>
</span><span class='line'>  <span class="k">if</span> <span class="o">[</span> <span class="s2">&quot;$1&quot;</span> <span class="o">=</span> <span class="s2">&quot;install&quot;</span> <span class="o">]</span> <span class="o">||</span> <span class="o">[</span> <span class="s2">&quot;$1&quot;</span> <span class="o">=</span> <span class="s2">&quot;update&quot;</span> <span class="o">]</span>
</span><span class='line'>  <span class="k">then</span>&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;pre&gt;&lt;code&gt;rbenv rehash
</span><span class='line'>&lt;/code&gt;&lt;/pre&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;  <span class="k">fi</span>
</span><span class='line'><span class="o">}</span>&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;export <span class="nv">PATH</span><span class="o">=</span><span class="s2">&quot;$HOME/.rbenv/shims:$PATH&quot;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>編集が完了したらターミナルで次のコマンドを実行。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">source</span> ~/.zshrc
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>次にインストール可能なRubyのバージョンをチェック。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>rbenv install -l
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>最新のRuby(2.2.0など)をインストール。(xxx-dev, xxx-rc1などは開発版などのため除外)</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;一番最新のRuby<span class="o">(</span>ここでは2.2.0<span class="o">)</span>をインストール&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;rbenv install 2.2.0&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;globalで使うRubyのバージョン<span class="o">(</span>2.2.0<span class="o">)</span>を指定&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;rbenv global 2.2.0
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h2>PostgreSQLのインストール</h2>

<p>拙著、<strong><a href="/blog/postgresql-mac-centos-rails/">Mac MountainLion/CentOS 6.4へのPostgreSQL 9.2の導入手順</a></strong>がオススメです！</p>

<h2>Railsのインストール</h2>

<p>ここまで本当にお疲れ様でした。ということで本題のRailsのインストールをします。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>gem install rails
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>コマンドの完了後に、<code>rails -v</code>を実行してエラーが出なければ成功です。</p>

<p><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- square -->
<ins class="adsbygoogle" style="display:inline-block;width:336px;height:280px" data-ad-client="ca-pub-4186413323075068" data-ad-slot="5059873392"></ins>
<script>
    (adsbygoogle = window.adsbygoogle || []).push({});
</script></p>

<h2>Tips集</h2>

<h3>Rictyのインストール</h3>

<p><strong><a href="/blog/ricty-font-homebrew-mac/">プログラムに最適なフォント『Ricty』を超簡単にインストール</a></strong><br/>
プログラミングに最適なFont Rictyをインストール。</p>

<h3>Macの基本設定</h3>

<p>コンピュータ名をを変更。</p>

<pre>
アプリケーション　>システム環境設定　>共有　>コンピュタ名　>(変更)
</pre>


<h2>Special Thanks</h2>

<p><strong><a href="http://www.1x1.jp/blog/2014/04/how-to-setup-application-on-osx.html">Mac OSX をクリーンインストールしてからの環境構築メモ</a></strong><br/></p>

<p><strong><a href="http://qiita.com/syui/items/73a822970742b317aede">MacBookAirで使っている便利ツール</a></strong></p>

<h2>変更来歴</h2>

<p>(2015/02/26 21:45) 新規作成
(2015-03-08 15:40) .gemrcの追記</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mac Marvericks Rails 最新環境 詳解 構築手順 [Homebrew][MySQL][rbenv][Ruby]]]></title>
    <link href="http://morizyun.github.io/blog/marvericks-rails-setup-ruby-rvm-msyql/"/>
    <updated>2014-12-22T21:10:00+09:00</updated>
    <id>http://morizyun.github.io/blog/marvericks-rails-setup-ruby-rvm-msyql</id>
    <content type="html"><![CDATA[<p><a href="http://www.amazon.co.jp/gp/product/4800710340/ref=as_li_qf_sp_asin_il?ie=UTF8&camp=247&creative=1211&creativeASIN=4800710340&linkCode=as2&tag=morizyun00-22"><img border="0" src="http://ws.assoc-amazon.jp/widgets/q?_encoding=UTF8&ASIN=4800710340&Format=_SL160_&ID=AsinImage&MarketPlace=JP&ServiceVersion=20070822&WS=1&tag=morizyun00-22" width="150" style="float: left; margin: 0 20px 20px 0;" ></a><img src="http://www.assoc-amazon.jp/e/ir?t=morizyun00-22&l=as2&o=9&a=4800710340" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" />
MarvericksにRailsのモダンな開発環境を構築するまでの一連の手順をまとめました。(あとは統計解析の勉強中なのでRやRStudio関係もインストールされますw)開発環境には好みがあると思いますが、Macを新しく買ったり、OSを再インストールした時などは良かったら使ってください！</p>

<!-- more -->


<br style="clear:both;"/>


<p><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- square -->
<ins class="adsbygoogle" style="display:inline-block;width:336px;height:280px" data-ad-client="ca-pub-4186413323075068" data-ad-slot="5059873392"></ins>
<script>
    (adsbygoogle = window.adsbygoogle || []).push({});
</script></p>

<h2>オススメ記事</h2>

<p><strong><a href="http://www.1x1.jp/blog/2014/04/how-to-setup-application-on-osx.html">Mac OSX をクリーンインストールしてからの環境構築メモ</a></strong><br/>
手順の書き方がよりわかりやすく、抜け漏れが少ないのがいい。</p>

<p><strong><a href="http://qiita.com/syui/items/73a822970742b317aede">MacBookAirで使っている便利ツール</a></strong><br/>
網羅的にまとめられている記事。素晴らしい。</p>

<h2>XCodeのインストール</h2>

<p><strong><a href="https://developer.apple.com/jp/technologies/tools/">XCode</a></strong><br/>
Mac App StoreからXCodeをインストール。(Marvericksでは必須ではないかも)</p>

<p>同じく必須ではないかもですが、コマンドラインからのライセンスの同意。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo xcodebuild -license
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h2>Homebrewのインストール</h2>

<p><strong><a href="http://mxcl.github.com/homebrew/">Homebrew</a></strong><br/>
ターミナルに次のコマンドを入力してインストール。途中で聞かれる、XcodeのCommand Line Toolもインストール。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>ruby -e <span class="s2">&quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&quot;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h2>gitのインストール</h2>

<p>ソースコードのバージョン管理の仕組みである『<strong><a href="http://git-scm.com/">Git</a></strong>』の初期設定のコマンドを実行。このユーザー名と、メールアドレスはgit内で使われるだけなので自由に設定してください。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>brew install git
</span><span class='line'>git config --global user.name <span class="s2">&quot;ユーザー名&quot;</span>
</span><span class='line'>git config --global user.email email@example.com
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Gitソースコードの管理から除外するファイル<code>.gitignore</code>を作成します。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>git config --global --add core.excludesfile <span class="s2">&quot;$HOME/.gitignore&quot;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>これで<code>~/.gitignore</code>に常にコミットしないファイルを登録できるようになりました。</p>

<p>例えばJetBrains系のアプリを使っている場合は開発フォルダに<code>/.idea/*</code>といったファイルが自動生成されます。そのような場合は、まずvimで<code>~/.gitignore</code>を開きます。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>vim ~/.gitignore
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>ファイルを開いたら、<code>/.idea/*</code>を追加します。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>/.idea/*
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>github用のパスワードを予め登録。<code>vi ~/.netrc</code>で以下を追記。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>machine github.com
</span><span class='line'>login USERNAME
</span><span class='line'>password PASSWORD
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h2>Zshの設定</h2>

<p>GitHubで盛り上がっている<strong><a href="https://github.com/skwp/dotfiles">skwp/dotfiles</a></strong>を手順に従ってインストール。</p>

<p>次のautojumpをインストール。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>brew install autojump
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p><code>vim ~/.zshrc</code>で以下の内容を追加。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;alias&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;alias <span class="nv">ls</span><span class="o">=</span><span class="s2">&quot;ls -la&quot;</span>&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;autojump&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;<span class="o">[[</span> -s &lt;code&gt;brew --prefix&lt;/code&gt;/etc/autojump.sh <span class="o">]]</span> &amp;amp;&amp;amp; . &lt;code&gt;brew --prefix&lt;/code&gt;/etc/autojump.sh
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>で設定を反映。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">source</span> ~/.zshrc
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>この<code>dotfiles</code>は頻繁に変更されているようなので次のコマンドで定期的にアップデートすると捗ります！</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">cd</span> ~/.yadr
</span><span class='line'>git pull --rebase
</span><span class='line'>rake update
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>もしcolorschemaを変更したい場合は以下のファイルの<code>colorschema</code>の部分をいじってください。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>vim ~/.yadr/vim/settings/yadr-appearance.vim
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h2>Homebrew Caskでインストール</h2>

<p><strong><a href="http://caskroom.io/">Homebrew Cask</a></strong><br/>
コマンドラインからアプリをインストールできるツール。今回は僕の普段インストールしているBrewfileをGitHubにあげておきました。 => <strong><a href="https://github.com/morizyun/homebrew-cask-brewfile">morizyun/homebrew-cask-brewfile</a></strong></p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>git clone https://github.com/morizyun/homebrew-cask-brewfile.git
</span><span class='line'><span class="nb">cd </span>homebrew-cask-brewfile
</span><span class='line'>brew bundle
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h2>iTerm2の設定</h2>

<p><strong><a href="http://qiita.com/muniere/items/e6c5c48a541401ee5af3">Mac - iTerm2上で256色のvimを使う</a></strong><br/>
iTerm2でvimの256色表示をできるようにする。</p>

<h2>Sublime Text2のパッケージ追加</h2>

<p><strong><a href="https://sublime.wbond.net/installation">Package Control</a></strong><br/>
<code>View > Show Console</code>からコピペしたコードを実行。Sublime Text2に簡単にパッケージを追加できるようにするためのツール。</p>

<p><strong><a href="https://github.com/ttscoff/MarkdownEditing">MarkdownEditing</a></strong><br/>
<code>CMD+SHIFT+P > install package > MarkdownEditing</code>マークダウン用のパッケージ。これがないと生きていけないw</p>

<h2>Google 日本語入力のインストール</h2>

<p><strong><a href="http://www.google.co.jp/ime/">Google 日本語入力</a></strong><br/>
僕の環境では、Homebrew Caskからだとうまくデフォルトになってくれなかったです。
もし同様の場合はパッケージを手作業でインストールしなおしてみてください。</p>

<h2>MySQLの設定</h2>

<p>ここからは日本のWebサイトでよく使われているオープンソースのデータベース『<strong><a href="http://www-jp.mysql.com/">MySQL</a></strong>』の設定手順。(Homebrew Caskでインストール済)</p>

<p>インストールが完了したら次のようなコメントがでます。<br/>
(バージョンによって多少変わる可能性あり。自分の環境での表示を優先)</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>brew info mysql&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;一部抜粋&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;To have launchd start mysql at login:&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;ln -sfv /usr/local/opt/mysql/*.plist ~/Library/LaunchAgents&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;Then to load mysql now:&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;launchctl load ~/Library/LaunchAgents/homebrew.mxcl.mysql.plist&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;Or, <span class="k">if </span>you don<span class="err">&#39;</span>t want/need launchctl, you can just run:&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;mysql.server start&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>次にMySQLを起動時に自動でSTARTさせるための設定をします。<br/>
まず、以下のコマンドを実行して自動起動用plistをコピー。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>ln -sfv /usr/local/opt/mysql/*.plist ~/Library/LaunchAgents
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>次にコピーしたplistは常に起動するように設定されているので、stopで終了できるように修正します。
まずは以下のコマンドでファイルをvimで開きます。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>vim ~/Library/LaunchAgents/homebrew.mxcl.mysql.plist
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>ファイルを開いたら<code><true/></code>となっている部分を<code><false/></code>に変更します。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>  &lt;key&gt;KeepAlive&lt;/key&gt;
</span><span class='line'>  &lt;<span class="nb">false</span>/&gt;
</span><span class='line'>  &lt;key&gt;Program&lt;/key&gt;
</span><span class='line'>  &lt;string&gt;/usr/local/bin/mysqld_safe&lt;/string&gt;
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>次に、自動起動の設定をします。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>launchctl load -w ~/Library/LaunchAgents/homebrew.mxcl.mysql.plist
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>もしplistを修正して再読み込みさせたい場合は以下のコマンドを実行してください。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>launchctl unload -w ~/Library/LaunchAgents/homebrew.mxcl.mysql.plist
</span><span class='line'>launchctl load -w ~/Library/LaunchAgents/homebrew.mxcl.mysql.plist
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>次にmysqlのroot(管理者)のパスワードとTestDBの削除等を対話形式で行います。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>mysql_secure_installation
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>以下は僕の設定です。</p>

<pre>
Set root password?(rootパスワード設定) => N
Remove anonymous users?(匿名ユーザー削除) => Y
Disallow root login remotely?(remote connectは許可しない) => Y
Remove test database and access to it?(テストDB削除) => Y
Reload privilege tables now?(権限リロード) => Y
</pre>


<p>ちなみに、HerokuのデフォルトDBである『<strong>PostgreSQL</strong>』を試してみたい場合は拙著『<strong><a href="http://morizyun.github.io/blog/postgresql-mac-centos-rails/">Mac MountainLionへのPostgreSQLの導入手順</a></strong>』を見ながらインストールしてみてください。(時間ができたらMabericksで動作確認してタイトル直しますw)</p>

<h2>rbenvの設定</h2>

<p>まずは、「<strong><a href="https://github.com/sstephenson/rbenv-default-gems">sstephenson/rbenv-default-gems</a></strong>」をインストール。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>git clone https://github.com/sstephenson/rbenv-default-gems.git ~/.rbenv/plugins/rbenv-default-gems
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>あとは、デフォルトでインストールするgemを追記。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>bundler
</span><span class='line'>rails
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>次コマンドを実行して、vimで<code>~/.zshrc</code>を開きます。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>vim ~/.zshrc
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>ファイルを開いたら次の内容を追加。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="k">if </span>which rbenv &gt; /dev/null; <span class="k">then </span><span class="nb">eval</span> <span class="s2">&quot;$(rbenv init -)&quot;</span>; <span class="k">fi</span>&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;function gem<span class="o">(){</span>
</span><span class='line'>  <span class="nv">$HOME</span>/.rbenv/shims/gem <span class="nv">$*</span>
</span><span class='line'>  <span class="k">if</span> <span class="o">[</span> <span class="s2">&quot;$1&quot;</span> <span class="o">=</span> <span class="s2">&quot;install&quot;</span> <span class="o">]</span> <span class="o">||</span> <span class="o">[</span> <span class="s2">&quot;$1&quot;</span> <span class="o">=</span> <span class="s2">&quot;i&quot;</span> <span class="o">]</span> <span class="o">||</span> <span class="o">[</span> <span class="s2">&quot;$1&quot;</span> <span class="o">=</span> <span class="s2">&quot;uninstall&quot;</span> <span class="o">]</span> <span class="o">||</span> <span class="o">[</span> <span class="s2">&quot;$1&quot;</span> <span class="o">=</span> <span class="s2">&quot;uni&quot;</span> <span class="o">]</span>
</span><span class='line'>  <span class="k">then</span>&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;pre&gt;&lt;code&gt;rbenv rehash
</span><span class='line'>&lt;/code&gt;&lt;/pre&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;  <span class="k">fi</span>
</span><span class='line'><span class="o">}</span>&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;function bundle<span class="o">(){</span>
</span><span class='line'>  <span class="nv">$HOME</span>/.rbenv/shims/bundle <span class="nv">$*</span>
</span><span class='line'>  <span class="k">if</span> <span class="o">[</span> <span class="s2">&quot;$1&quot;</span> <span class="o">=</span> <span class="s2">&quot;install&quot;</span> <span class="o">]</span> <span class="o">||</span> <span class="o">[</span> <span class="s2">&quot;$1&quot;</span> <span class="o">=</span> <span class="s2">&quot;update&quot;</span> <span class="o">]</span>
</span><span class='line'>  <span class="k">then</span>&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;pre&gt;&lt;code&gt;rbenv rehash
</span><span class='line'>&lt;/code&gt;&lt;/pre&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;  <span class="k">fi</span>
</span><span class='line'><span class="o">}</span>&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;export <span class="nv">PATH</span><span class="o">=</span><span class="s2">&quot;$HOME/.rbenv/shims:$PATH&quot;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>編集が完了したらターミナルで次のコマンドを実行。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">source</span> ~/.zshrc
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>次にインストール可能なRubyのバージョンをチェック。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>rbenv install -l
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>最新のRuby(2.1.0など)をインストール。(xxx-dev, xxx-rc1などは開発版などのため除外)</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>rbenv install 2.1.0
</span><span class='line'>rbenv rehash
</span><span class='line'>rbenv global 2.1.0
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>上記のコマンドの完了後、<code>ruby -v</code>を実行して<code>2.1.0</code>などの結果が帰ってくれば成功。</p>

<p>さらに<code>bundle exec</code>を省略するために『<strong><a href="https://github.com/ianheggie/rbenv-binstubs">rbenv-binstubs</a></strong>』をインストール。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>mkdir ~/.rbenv/plugins
</span><span class='line'><span class="nb">cd</span> ~/.rbenv/plugins
</span><span class='line'>git clone git://github.com/ianheggie/rbenv-binstubs.git
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>次に以下のコードを実行。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>mkdir ~/.bundle
</span><span class='line'>vim ~/.bundle/config&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;↓ を追加&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;BUNDLE_BIN: bin
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>これで設定は完了です。一点注意点としては、今後は新しいプロジェクトを作成したら次のコマンドを実行する必要があります。ついつい忘れがちになるので注意が必要かも。<br/>
(<code>path/to/project</code>はプロジェクトのフォルダを表しています)</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">cd </span>path/to/project
</span><span class='line'>bundle install --binstubs<span class="o">=</span>bundle_bin
</span><span class='line'>rbenv rehash
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h2>Railsのインストール</h2>

<p>ここまで本当にお疲れ様でした。ということで本題のRailsのインストールをします。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>gem install rails
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>コマンドの完了後に、<code>rails -v</code>を実行してエラーが出なければ成功です。</p>

<p>この先、HerokuにPushするようなアプリを作ってみたい場合は</p>

<p>初心者な方向けには、『<strong><a href="/blog/beginner-rails-heroku-tutorial">Rails x Heroku 完全初心者向け チュートリアル</a></strong>』がおすすめです。</p>

<p>Railsを触ったことがある人には、拙著『<strong><a href="/blog/heroku-rails4-postgresql-introduction/">Rails4でheroku Pushまでの最短手順</a></strong>』を試してみて頂ければ幸いです。</p>

<p><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- square -->
<ins class="adsbygoogle" style="display:inline-block;width:336px;height:280px" data-ad-client="ca-pub-4186413323075068" data-ad-slot="5059873392"></ins>
<script>
    (adsbygoogle = window.adsbygoogle || []).push({});
</script></p>

<h2>Tips集</h2>

<h3>Rictyのインストール</h3>

<p><strong><a href="/blog/ricty-font-homebrew-mac/">プログラムに最適なフォント『Ricty』を超簡単にインストール</a></strong><br/>
プログラミングに最適なFont Rictyをインストール。</p>

<h3>Macの基本設定</h3>

<p>コンピュータ名をを変更。</p>

<pre>
アプリケーション　>システム環境設定　>共有　>コンピュタ名　>(変更)
</pre>


<h3>Pythonのインストール</h3>

<p><strong><a href="/blog/python-pyenv-rehash-mac-development/">Python開発環境構築 徹底解説</a></strong><br/>
凄くシンプルなインストール手順ですが良かったらぜひ！</p>

<h2>Mountain Lion => Marvericksへのアップグレード</h2>

<p>Homebrew周りでアップグレードした時のメモ。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>xcodebuild -license
</span><span class='line'>xcode-select --install&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;warningがなくなるまで対応&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;brew doctor&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;brew側formulaのアップデート&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;brew update&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;インストールアプリのアップデート&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;brew upgrade&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;それでもダメなら再インストール&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;brew uninstall &lt;dependency-name&gt; &amp;amp;&amp;amp; brew install &lt;dependency-name&gt;
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h2>ImageMagick/Rmagickのインストール</h2>

<p>ImageMagick/Rmagick周りでハマったのでメモ。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>brew uninstall pkgconfig &amp;amp;&amp;amp; brew install pkgconfig
</span><span class='line'>brew uninstall libtool &amp;amp;&amp;amp; brew install libtool
</span><span class='line'>brew uninstall libpng &amp;amp;&amp;amp; brew install libpng
</span><span class='line'>brew uninstall libjpg &amp;amp;&amp;amp; brew install libjpg
</span><span class='line'>brew uninstall imagemagick &amp;amp;&amp;amp; brew install imagemagick --build-from-source
</span><span class='line'><span class="nv">PKG_CONFIG_PATH</span><span class="o">=</span>/usr/local/Cellar/imagemagick/6.8.8-9/lib/pkgconfig/ bundle install
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h2>Special Thanks</h2>

<p><strong><a href="http://mizchi.hatenablog.com/entry/2014/03/02/090517">エンジニア Mac アプリ 環境 おすすめ - mizchi's blog</a></strong></p>

<p><strong><a href="http://jameshalsall.co.uk/posts/upgrading-homebrew-packages-on-osx-mavericks">James Halsall</a></strong></p>

<p><strong><a href="https://gist.github.com/imaz/4036786">rbenv に変更した後 bundle install できない件</a></strong></p>

<p><strong><a href="http://kazuph.hateblo.jp/entry/2012/09/20/002332">githubにpushするときのパスワード入力を省略する - 僕の車輪の再発明</a></strong></p>

<p><strong><a href="http://efcl.info/2013/1215/res3542/">Mac OSXでR言語(+RStudio)をhomebrewでインストール</a></strong></p>

<p><strong><a href="http://qiita.com/hal_sk/items/dec2b142926af0ef2464">OSX - Mountain Lion にアップグレードしたら homebrew が動かなくなった場合の対処 - Qiita</a></strong></p>

<h2>変更来歴</h2>

<p>(03/28 07:40) RStudioに関するスクリプトを追加<br/>
(09/27 14:55) rbenv-default-gemsの記述を追加<br/>
(12/22 21:10) Homebrewのインストールコマンドを修正<br/></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mountain Lion Rails 最新環境 詳解 構築手順 [Homebrew][MySQL][rbenv][Ruby]]]></title>
    <link href="http://morizyun.github.io/blog/mountain-lion-rails-setup-ruby-rvm-msyql/"/>
    <updated>2014-03-02T09:40:00+09:00</updated>
    <id>http://morizyun.github.io/blog/mountain-lion-rails-setup-ruby-rvm-msyql</id>
    <content type="html"><![CDATA[<p><a href="http://www.amazon.co.jp/gp/product/4839946280/ref=as_li_qf_sp_asin_il?ie=UTF8&camp=247&creative=1211&creativeASIN=4839946280&linkCode=as2&tag=morizyun00-22"><img border="0" src="http://ws.assoc-amazon.jp/widgets/q?_encoding=UTF8&ASIN=4839946280&Format=_SL160_&ID=AsinImage&MarketPlace=JP&ServiceVersion=20070822&WS=1&tag=morizyun00-22" width="150" style="float: left; margin: 0 20px 20px 0;" ></a><img src="http://www.assoc-amazon.jp/e/ir?t=morizyun00-22&l=as2&o=9&a=4839946280" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" />Mac Mountain LionにRailsのモダンな開発環境を構築するまでの一連の手順をまとめました。開発環境には好みがあると思うので、Macを新しく買ったり、OSを再インストールした時などは良かったら使ってください！</p>

<!-- more -->


<br style="clear:both;"/>


<p><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- square -->
<ins class="adsbygoogle" style="display:inline-block;width:336px;height:280px" data-ad-client="ca-pub-4186413323075068" data-ad-slot="5059873392"></ins>
<script>
    (adsbygoogle = window.adsbygoogle || []).push({});
</script></p>

<h2>目次</h2>

<p>(1) <a href="#1">基本ソフトウエアのインストール</a><br/>
(2) <a href="#2">Xcodeの初期設定</a><br/>
(3) <a href="#3">Homebrewのインストール</a><br/>
(4) <a href="#4">Gitのインストール</a><br/>
(5) <a href="#5">MySQLのインストール</a><br/>
(6) <a href="#6">rbenvのインストール</a><br/>
(7) <a href="#7">Railsのインストール</a><br/>
(8) <a href="#8">Tips集</a><br/></p>

<p><a name="1"></a></p>

<h2>(1)基本ソフトウエアのインストール</h2>

<p>Macのアプリをインストールします。(<strong><a href="http://mizchi.hatenablog.com/entry/2014/03/02/090517">Brew Caskで自動インストールにトライしてもありかも</a></strong>)</p>

<h3>Mac App Storeからインストール</h3>

<h4><a href="https://developer.apple.com/jp/technologies/tools/">XCode</a> - 必須</h4>

<p>Homebrewでコンパイルするときに必要</p>

<p>XCodeをインストールしたら、XCodeを起動してCommand Line Toolをインストール。</p>

<p><img src="http://farm9.staticflickr.com/8341/8265513409_ef05417ce5.jpg" width="500" height="438" alt="fpu_tmp_1355294056.3931_945c27"></p>

<p><img src="http://farm9.staticflickr.com/8495/8265511525_666058f54b.jpg" width="500" height="355" alt="fpu_tmp_1355293979.2283_d1e743"></p>

<h4><a href="https://itunes.apple.com/jp/app/dash-docs-snippets/id458034879?mt=12">Mac App Store - Dash (Docs &amp; Snippets)</a> - 好み</h4>

<p>スニベットツール(よく使うコードを登録して、短縮キーワードで呼び出す)、無料でも使えるが、かなりの割合で購入(850円)を勧めるアラートがでます。
もし、テキストエディタ(VimやSublime Textなど)でスニベットツールを使っていないのであれば是非。</p>

<h3>Webからダウンロード</h3>

<h4><a href="http://www.iterm2.com/#/section/home">iTerm2 - Mac OS Terminal Replacement</a> - オススメ</h4>

<p><a href="http://www.iterm2.com/#/section/home" title="iTerm2"><img src="http://farm6.staticflickr.com/5469/9656599733_2a426ddd97.jpg" width="500" height="168" alt="iTerm2"></a></p>

<p>標準のターミナルに比べて多機能。ただし、β版はカナリ冒険しているので安定板を使うことをお勧めします。</p>

<p>でインストールしたら、<strong><a href="http://qiita.com/muniere/items/e6c5c48a541401ee5af3">Mac - iTerm2上で256色のvimを使う</a></strong>を参考に256色設定にすること。</p>

<h4><a href="http://www.sublimetext.com/">Sublime Text2</a> - オススメ</h4>

<p>超有名なテキストエディタアプリ。無料でも製品版($59)と同じ機能で使えます。無料版の場合は、たまに購入しませんか？ってアラートがでます。</p>

<p>このテキストエディタにはマークダウン用のパッケージ、<strong><a href="https://github.com/ttscoff/MarkdownEditing">MarkdownEditing</a></strong>もとっても使いやすいのでオススメです。</p>

<h4><a href="http://www.google.co.jp/intl/ja/chrome/browser/">Chrome</a> - オススメ</h4>

<p>言わずと知れたGoogle謹製のブラウザー。Dev Toolがないと生きていけない。</p>

<h4><a href="http://www.google.co.jp/ime/">Google 日本語入力</a> - オススメ</h4>

<p>同じく、Google製の日本語入力ツール。無料では最強だと思います。</p>

<h4><a href="https://evernote.com/intl/jp/">Evernote</a> - オススメ</h4>

<p>クラウドでいつでもどこでも最新のノートが見れるアプリ。容量の大きなデータを保存しなければ、無料で十分使えます。</p>

<h4><a href="https://www.dropbox.com/home">Dropbox</a> - オススメ</h4>

<p>クラウドでいつでもどこでもファイルを保存・閲覧できるアプリ。<br/>ローカルフォルダ感覚でほとんど意識せずに使えるのは本当に素晴らしいです！</p>

<h4><a href="http://www.jetbrains.com/ruby/">RubyMine</a> - 好み</h4>

<p>Ruby on Rails用のIDE(統合開発管理ツール)です。個人利用版は$69(約6,000円)ですが、体験版は1ヶ月無料(機能制限なし)なので良かったら試してみてください。</p>

<h4><a href="http://stereopsis.com/flux/">f.lux</a> - 好み</h4>

<p>ディスプレイの色温度を昼/夜で調節してくれるアプリ。個人的にJIN PCメガネをずっと買おうと思ってたので助かる！</p>

<h4><a href="http://mattpatenaude.com/">COLORS</a> - 好み</h4>

<p>Macのネイティブのカラーピッカー、画面上の色を抽出してくれます。最近の必須アイテムです。</p>

<h4><a href="http://www.sourcetreeapp.com/">SourceTree</a> - 好み</h4>

<p>gitなどのバージョン管理の仕組みをGUIで表示してくれるツール。手放せなくなっています。</p>

<p><a name="2"></a></p>

<h2>(2) Xcodeの初期設定</h2>

<p>ターミナル(コンソール)を開いて以下を順に実行します。</p>

<p>Command Line Toolの初期設定。次のコマンドを実行して、<code>agree</code>(同意)を選択。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo xcodebuild -license
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p><a name="3"></a></p>

<h2>(3) Homebrewのインストール</h2>

<p>続いてMacでコマンドラインツールを簡単にインストールしてくれるツール『<strong><a href="http://mxcl.github.com/homebrew/">Homebrew</a></strong>』をインストール。以下のコマンドを実行。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>ruby -e <span class="s2">&quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&quot;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>コマンドが完了したら、<code>brew -v</code>で確認。バージョン情報が出ればOK。</p>

<p><a name="4"></a></p>

<h2>(4) gitのインストール</h2>

<p>続いてソースコードのバージョン管理の仕組みである『<strong><a href="http://git-scm.com/">Git</a></strong>』のインストールと初期設定のコマンドを実行。このユーザー名と、メールアドレスはgit内で使われるだけなので自由に設定してください。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>brew install git
</span><span class='line'>git config --global user.name <span class="s2">&quot;ユーザー名&quot;</span>
</span><span class='line'>git config --global user.email email@example.com
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Gitソースコードの管理から除外するファイル<code>.gitignore</code>を作成します。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>git config --global --add core.excludesfile <span class="s2">&quot;$HOME/.gitignore&quot;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>これで<code>~/.gitignore</code>に常にコミットしないファイルを登録できるようになりました。</p>

<p>例えばJetBrains系のアプリを使っている場合は開発フォルダに<code>/.idea/*</code>といったファイルが自動生成されます。そのような場合は、まずvimで<code>~/.gitignore</code>を開きます。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>vim ~/.gitignore
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>ファイルを開いたら、<code>/.idea/*</code>を追加します。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>/.idea/*
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p><a name="5"></a></p>

<h2>(5)MySQLのインストール</h2>

<p>ここからは日本のWebサイトでよく使われているオープンソースのデータベース『<strong><a href="http://www-jp.mysql.com/">MySQL</a></strong>』のインストール手順です。</p>

<p>まずMySQLをHomebrewを使ってインストール。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>brew update
</span><span class='line'>brew install mysql
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>インストールが完了したら次のようなコメントがでます。<br/>
(バージョンによって多少変わる可能性あり。自分の環境での表示を優先)</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>brew install <span class="nv">mysql</span>
</span><span class='line'><span class="o">==</span>&gt; Downloading https://downloads.sf.net/project/machomebrew/Bottles/mysql-5.6.10.mountain_lion.bottl&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h6&gt;################################################################## 100.0%&lt;/h6&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;<span class="o">==</span>&gt; Pouring mysql-5.6.10.mountain_lion.bottle.tar.gz
</span><span class='line'><span class="o">==</span>&gt; /usr/local/Cellar/mysql/5.6.10/bin/mysql_install_db --verbose --user<span class="o">=</span>komji --basedir<span class="o">=</span>/usr/local/C
</span><span class='line'><span class="o">==</span>&gt; Caveats
</span><span class='line'>A <span class="s2">&quot;/etc/my.cnf&quot;</span> from another install may interfere with a Homebrew-built
</span><span class='line'>server starting up correctly.&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;To connect:&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;pre&gt;&lt;code&gt;mysql -uroot
</span><span class='line'>&lt;/code&gt;&lt;/pre&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;To have launchd start mysql at login:&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;pre&gt;&lt;code&gt;ln -sfv /usr/local/opt/mysql/*.plist ~/Library/LaunchAgents
</span><span class='line'>&lt;/code&gt;&lt;/pre&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;Then to load mysql now:&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;pre&gt;&lt;code&gt;launchctl load ~/Library/LaunchAgents/homebrew.mxcl.mysql.plist
</span><span class='line'>&lt;/code&gt;&lt;/pre&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;Or, <span class="k">if </span>you don<span class="err">&#39;</span>t want/need launchctl, you can just run:&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;pre&gt;&lt;code&gt;mysql.server start
</span><span class='line'>&lt;/code&gt;&lt;/pre&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;<span class="o">==</span>&gt; Summary
</span><span class='line'>🍺  /usr/local/Cellar/mysql/5.6.10: 9245 files, 351M
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>次にMySQLを起動時に自動でSTARTさせるための設定をします。<br/>
まず、以下のコマンドを実行して自動起動用plistをコピー。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>ln -sfv /usr/local/opt/mysql/*.plist ~/Library/LaunchAgents
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>次にコピーしたplistは常に起動するように設定されているので、stopで終了できるように修正します。
まずは以下のコマンドでファイルをvimで開きます。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>vim ~/Library/LaunchAgents/homebrew.mxcl.mysql.plist
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>ファイルを開いたら<code><true/></code>となっている部分を<code><false/></code>に変更します。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>  &lt;key&gt;KeepAlive&lt;/key&gt;
</span><span class='line'>  &lt;<span class="nb">false</span>/&gt;
</span><span class='line'>  &lt;key&gt;Program&lt;/key&gt;
</span><span class='line'>  &lt;string&gt;/usr/local/bin/mysqld_safe&lt;/string&gt;
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>次に、自動起動の設定をします。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>launchctl load -w ~/Library/LaunchAgents/homebrew.mxcl.mysql.plist
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>もしplistを修正して再読み込みさせたい場合は以下のコマンドを実行してください。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>launchctl unload -w ~/Library/LaunchAgents/homebrew.mxcl.mysql.plist
</span><span class='line'>launchctl load -w ~/Library/LaunchAgents/homebrew.mxcl.mysql.plist
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>次にmysqlのroot(管理者)のパスワードとTestDBの削除等を対話形式で行います。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>mysql_secure_installation
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>以下は僕の設定です。</p>

<pre>
Set root password?(rootパスワード設定) => N
Remove anonymous users?(匿名ユーザー削除) => Y
Disallow root login remotely?(remote connectは許可しない) => Y
Remove test database and access to it?(テストDB削除) => Y
Reload privilege tables now?(権限リロード) => Y
</pre>


<p>ちなみに、HerokuのデフォルトDBである『<strong>PostgreSQL</strong>』を試してみたい場合は拙著『<strong><a href="http://morizyun.github.io/blog/postgresql-mac-centos-rails/">Mac MountainLionへのPostgreSQLの導入手順</a></strong>』を見ながらインストールしてみてください。</p>

<p><a name="6"></a></p>

<h2>(6)rbenvのインストール</h2>

<p>Rubyのバージョン管理を行なってくれる『<strong><a href="https://github.com/sstephenson/rbenv">rbenv</a></strong>』をインストールします。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>brew install rbenv
</span><span class='line'>brew install ruby-build
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>インストールが完了したら、次のコマンドを実行して、vimで<code>~/.bashrc</code>を開きます。
(zshを使っている場合は<code>~/.zshrc</code>と読み替えてください)</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>vim ~/.bashrc
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>ファイルを開いたら次の内容を追加。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="k">if </span>which rbenv &gt; /dev/null; <span class="k">then </span><span class="nb">eval</span> <span class="s2">&quot;$(rbenv init -)&quot;</span>; <span class="k">fi</span>&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;function gem<span class="o">(){</span>
</span><span class='line'>  <span class="nv">$HOME</span>/.rbenv/shims/gem <span class="nv">$*</span>
</span><span class='line'>  <span class="k">if</span> <span class="o">[</span> <span class="s2">&quot;$1&quot;</span> <span class="o">=</span> <span class="s2">&quot;install&quot;</span> <span class="o">]</span> <span class="o">||</span> <span class="o">[</span> <span class="s2">&quot;$1&quot;</span> <span class="o">=</span> <span class="s2">&quot;i&quot;</span> <span class="o">]</span> <span class="o">||</span> <span class="o">[</span> <span class="s2">&quot;$1&quot;</span> <span class="o">=</span> <span class="s2">&quot;uninstall&quot;</span> <span class="o">]</span> <span class="o">||</span> <span class="o">[</span> <span class="s2">&quot;$1&quot;</span> <span class="o">=</span> <span class="s2">&quot;uni&quot;</span> <span class="o">]</span>
</span><span class='line'>  <span class="k">then</span>&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;pre&gt;&lt;code&gt;rbenv rehash
</span><span class='line'>&lt;/code&gt;&lt;/pre&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;  <span class="k">fi</span>
</span><span class='line'><span class="o">}</span>&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;function bundle<span class="o">(){</span>
</span><span class='line'>  <span class="nv">$HOME</span>/.rbenv/shims/bundle <span class="nv">$*</span>
</span><span class='line'>  <span class="k">if</span> <span class="o">[</span> <span class="s2">&quot;$1&quot;</span> <span class="o">=</span> <span class="s2">&quot;install&quot;</span> <span class="o">]</span> <span class="o">||</span> <span class="o">[</span> <span class="s2">&quot;$1&quot;</span> <span class="o">=</span> <span class="s2">&quot;update&quot;</span> <span class="o">]</span>
</span><span class='line'>  <span class="k">then</span>&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;pre&gt;&lt;code&gt;rbenv rehash
</span><span class='line'>&lt;/code&gt;&lt;/pre&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;  <span class="k">fi</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>編集が完了したらターミナルで次のコマンドを実行。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">source</span> ~/.bashrc
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>次にインストール可能なRubyのバージョンをチェック。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>rbenv install -l
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>最新のRuby(2.1.0など)をインストール。(xxx-dev, xxx-rc1などは開発版などのため除外)</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>rbenv install 2.1.0
</span><span class='line'>rbenv rehash
</span><span class='line'>rbenv global 2.1.0
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>上記のコマンドの完了後、<code>ruby -v</code>を実行して<code>2.1.0</code>などの結果が帰ってくれば成功。</p>

<p>さらに<code>bundle exec</code>を省略するために『<strong><a href="https://github.com/ianheggie/rbenv-binstubs">rbenv-binstubs</a></strong>』をインストール。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>mkdir ~/.rbenv/plugins
</span><span class='line'><span class="nb">cd</span> ~/.rbenv/plugins
</span><span class='line'>git clone git://github.com/ianheggie/rbenv-binstubs.git
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>次に以下のコードを実行。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>mkdir ~/.bundle
</span><span class='line'>vim ~/.bundle/config&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;↓ を追加&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;BUNDLE_BIN: bin
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>これで設定は完了です。一点注意点としては、今後は新しいプロジェクトを作成したら次のコマンドを実行する必要があります。ついつい忘れがちになるので注意が必要かも。<br/>
(<code>path/to/project</code>はプロジェクトのフォルダを表しています)</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">cd </span>path/to/project
</span><span class='line'>bundle install --binstubs<span class="o">=</span>bundle_bin
</span><span class='line'>rbenv rehash
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p><a name="7"></a></p>

<h2>(7) Railsのインストール</h2>

<p>ここまで本当にお疲れ様でした。ということで本題のRailsのインストールをします。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>gem install rails
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>コマンドの完了後に、<code>rails -v</code>を実行してエラーが出なければ成功です。</p>

<p>この先、HerokuにPushするようなアプリを作ってみたい場合は</p>

<p>初心者な方向けには、『<strong><a href="/blog/2014-02-12-beginner-rails-heroku-tutorial">Rails x Heroku 完全初心者向け チュートリアル</a></strong>』がおすすめです。</p>

<p>Railsを触ったことがある人には、拙著『<strong><a href="/blog/heroku-rails4-postgresql-introduction/">Rails4でheroku Pushまでの最短手順</a></strong>』を試してみて頂ければ幸いです。</p>

<p><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- square -->
<ins class="adsbygoogle" style="display:inline-block;width:336px;height:280px" data-ad-client="ca-pub-4186413323075068" data-ad-slot="5059873392"></ins>
<script>
    (adsbygoogle = window.adsbygoogle || []).push({});
</script></p>

<p><a name="8"></a></p>

<h2>(8) Tips集</h2>

<p>以下は必須ではないですが僕がやった設定です。</p>

<h3>Sublime Text2の設定</h3>

<p>Sublime Text2をコマンドラインから呼び出せるようにする</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>ln -s /Applications/Sublime<span class="se">\ </span>Text<span class="se">\ </span>2.app/Contents/SharedSupport/bin/subl /usr/local/bin/subl
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h3>Macの基本設定</h3>

<p>コンピュータ名をを変更。</p>

<pre>
アプリケーション　>システム環境設定　>共有　>コンピュタ名　>(変更)
</pre>


<p>アプリのインストールでエラーが出る場合は以下を変更</p>

<pre>
アプリケーション　>システム環境設定　>セキュリティとプライバシー　>一般　>ダウンロードしたアプリの実行許可> すべてのアプリケーションを許可に変更
</pre>


<h3>Zshの設定</h3>

<p>GitHubで盛り上がっている<strong><a href="https://github.com/skwp/dotfiles">skwp/dotfiles</a></strong>を手順に従ってインストール。</p>

<p>次のautojumpをインストール。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>brew install autojump
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p><code>vim ~/.zshrc</code>で以下の内容を追加。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;alias&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;alias <span class="nv">ls</span><span class="o">=</span><span class="s2">&quot;ls -la&quot;</span>&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;autojump&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;<span class="o">[[</span> -s &lt;code&gt;brew --prefix&lt;/code&gt;/etc/autojump.sh <span class="o">]]</span> &amp;amp;&amp;amp; . &lt;code&gt;brew --prefix&lt;/code&gt;/etc/autojump.sh
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>で設定を反映。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">source</span> ~/.zshrc
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>この<code>dotfiles</code>は頻繁に変更されているようなので次のコマンドで定期的にアップデートすると捗ります！</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">cd</span> ~/.yadr
</span><span class='line'>git pull --rebase
</span><span class='line'>rake update
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h3>SSH認証鍵の設定</h3>

<p>もし、GitHubやBitbucketと連携する際にSSH認証を行いたい場合は以下の記事にまとめています。</p>

<p><strong><a href="/blog/ssh-key-bitbucket-github">SSH認証キーをBitbucket/GitHubに設定しよう！</a></strong></p>

<h2>Special Thanks</h2>

<p><a href="http://tukaikta.blog135.fc2.com/blog-entry-197.html">HomebrewでMySQLをインストールする時に知っておきたいこと</a></p>

<p><a href="http://pplog.org/?p=2155">【初心者向け】Mac OSX10.8(Mountain Lion)で Ruby on Railsを動かすための5ステップ</a></p>

<p><a href="http://d.hatena.ne.jp/ke-16/20121127">2012-11-27 Mountain Lion に Ruby 1.9.3 &amp; Rails 3.2.8 をインストールした  </a></p>

<p><a href="http://stackoverflow.com/questions/1381725/how-to-make-no-ri-no-rdoc-the-default-for-gem-install">ruby - How to make --no-ri --no-rdoc the default for gem install? - Stack Overflow</a></p>

<p><a href="http://d.hatena.ne.jp/soikw/20120629/1340977004">コマンドラインからSublime Textを使えるようにする</a></p>

<p><a href="http://tukaikta.blog135.fc2.com/blog-entry-208.html">Homebrewを快適に使うために設定してる4つのこと</a></p>

<p><a href="http://qiita.com/skinoshita/items/2cf0c27a6ff4f0602568">Ruby - Mountain Lion環境への「rbenv」のインストール手順 + 設定方法 - Qiita [キータ]</a></p>

<p><a href="http://blog.yabasoft.biz/archives/4898">cohakim's blog » rails4でbundle execしないでコマンドを実行する（rbenv+rails4+binstubs）</a></p>

<p><a href="http://tech-kazuhisa.hatenablog.com/entry/20121118/1353246067">rbenv rehashを行わなくて良い方法 - tech-kazuhisa's blog</a></p>

<h2>変更来歴</h2>

<p>12/12/12 21:33 Growlをアプリ説明から削除<br/>
12/12/13 11:00 タイトルを変更、目次系の間違いを修正<br/>
12/12/18 20:35 RVMでのオススメのRubyバージョンを1.9.3-head => 1.9.3に変更<br/>
12/12/23 23:45 .gitignore/.rvmrcへの設定についての記述を追加<br/>
13/04/17 09:50 最新の状態に記事をアップデート<br/>
13/04/18 23:00 Pryの記事を追加<br/>
13/04/24 11:43 RVMのbundle exec hookを追加<br/>
13/05/20 17:25 MySQLのチューニング設定を追加<br/>
13/05/21 23:10 MySQLのインストール手順の記述順序を修正<br/>
13/09/03 23:10 ソフトウェアを追加、記述ミス修正<br/>
13/12/02 22:00 .gitignoreの設定追加<br/>
13/12/06 21:00 MacアプリのCOLORSを追加<br/>
13/12/23 09:25 現状に合わせていくつかバージョンを調整<br/>
13/12/30 08:10 dotfilesの設定を追加<br/>
14/01/25 14:20 ヒアリングを元にわかりにくい部分を書き直し<br/>
14/01/25 19:45 rvm => rbenvに変更<br/>
14/02/12 22:40 ヒアリングを元にわかりにくい部分を書き直し その2<br/>
14/03/02 09:40 Brew caskを追加<br/></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mountain Lion Rails 最新環境 詳解 構築手順 [Homebrew][MySQL][rvm][Pow][Ruby]]]></title>
    <link href="http://morizyun.github.io/blog/mountain-lion-rails-setup-ruby-rvm-msyql/"/>
    <updated>2012-12-12T19:00:00+09:00</updated>
    <id>http://morizyun.github.io/blog/mountain-lion-rails-setup-ruby-rvm-msyql</id>
    <content type="html"><![CDATA[<p>Included file 'custom/google_ads_text.html' not found in _includes directory
<a href="blog/categories/mac-osx/atom.xml" title="by morizyun, on Flickr"><img src="http://farm9.staticflickr.com/8338/8241799166_0992ebfd14_m.jpg" width="200" alt="Where?" style="float: left; margin: 0 20px 20px 0;"></a></p>

<p>Mountain LionにRailsのモダンな開発環境を構築するまでの一連の手順をまとめました。
Macを新しく買ったり、OSを再インストールした時などは良かったら使ってください！</p>

<!-- more -->


<br style="clear:both;"/>


<h2>目次</h2>

<p>(1) <a href="#1">基本ソフトウエアのインストール</a><br/>
(2) <a href="#2">Homebrew/Gitのインストールなど</a><br/>
(3) <a href="#3">MySQLのインストール</a><br/>
(4) <a href="#4">rvmのインストール</a><br/>
(5) <a href="#5">Railsのモダン開発環境構築</a><br/>
(6) <a href="#6">メモ：Tips集</a><br/></p>

<p><a name="1"></a></p>

<h2>(1)基本ソフトウエアのインストール</h2>

<p>Macのアプリをインストールします。</p>

<h3>Mac App Storeからインストール</h3>

<h4><a href="https://developer.apple.com/jp/technologies/tools/">XCode</a> - 必須</h4>

<p>Homebrewでコンパイルするときに必要</p>

<p>XCodeをインストールしたら、XCodeを起動してCommand Line Toolをインストール。</p>

<p><img src="http://farm9.staticflickr.com/8341/8265513409_ef05417ce5.jpg" width="500" height="438" alt="fpu_tmp_1355294056.3931_945c27"></p>

<p><img src="http://farm9.staticflickr.com/8495/8265511525_666058f54b.jpg" width="500" height="355" alt="fpu_tmp_1355293979.2283_d1e743"></p>

<h4><a href="https://itunes.apple.com/jp/app/dash-docs-snippets/id458034879?mt=12">Mac App Store - Dash (Docs &amp; Snippets)</a> - 任意</h4>

<p>スニベットツール(よく使うコードを登録して、短縮キーワードで呼び出す)、無料でも使えるが、かなりの割合で購入(850円)を勧めるアラートがでます。
もし、テキストエディタ(VimやSublime Textなど)でスニベットツールを使っていないのであれば是非。</p>

<h4><a href="https://itunes.apple.com/jp/app/stuffit-expander/id405580712?mt=12">StuffIt Expander</a> - 任意</h4>

<p>無料の解凍アプリ。標準の解凍アプリより安定しているのでおすすめ。</p>

<h3>Webからダウンロード</h3>

<h4><a href="http://www.jetbrains.com/ruby/">RubyMine</a> - 任意</h4>

<p>Ruby on Rails用のIDE(統合開発管理ツール)です。個人利用版は$69(約6,000円)ですが、体験版は1ヶ月無料(機能制限なし)なので良かったら試してみてください。</p>

<h4><a href="http://www.iterm2.com/#/section/home">iTerm2 - Mac OS Terminal Replacement</a> - 任意</h4>

<p>標準のターミナルに比べて多機能。ただし、β版はカナリ冒険しているので安定板を使うことをお勧めします。</p>

<h4><a href="http://www.sublimetext.com/">Sublime Text2</a> - 任意</h4>

<p>超有名なテキストエディタアプリ。無料でも製品版($59)と同じ機能で使える。無料版の場合は、たまに購入しませんか？ってアラートがでます。</p>

<p>このテキストエディタにはマークダウン用のパッケージ、<strong><a href="https://github.com/ttscoff/MarkdownEditing">MarkdownEditing</a></strong>もとっても使いやすいのでオススメです。</p>

<h4><a href="http://stereopsis.com/flux/">f.lux</a> - 任意</h4>

<p>ディスプレイの色温度を昼/夜で調節してくれるアプリ。個人的にJIN PCメガネをずっと買おうと思ってたので助かる！</p>

<h4><a href="http://www.google.co.jp/intl/ja/chrome/browser/">Chrome</a> - 任意</h4>

<p>言わずと知れたGoogle謹製のブラウザー。Dev Toolがないと生きていけない。</p>

<h4><a href="http://www.google.co.jp/ime/">Google 日本語入力</a> - 任意</h4>

<p>同じく、Google製の日本語入力ツール。無料では最強だと思います。</p>

<h4><a href="https://evernote.com/intl/jp/">Evernote</a> - 任意</h4>

<p>クラウドでいつでもどこでも最新のノートが見れるアプリ。容量の大きなデータを保存しなければ、無料で十分使えます。</p>

<h4><a href="https://www.dropbox.com/home">Dropbox</a> - 任意</h4>

<p>クラウドでいつでもどこでもファイルを保存・閲覧できるアプリ。<br/>ローカルフォルダ感覚でほとんど意識せずに使えるのは本当に素晴らしいです！</p>

<p><a name="2"></a></p>

<h2>(2)Homebrew/Gitのインストールなど</h2>

<p>ターミナルを開いて以下を順に実行します。</p>

<p>Command Line Toolの初期設定。下のコマンドを実行して、<code>agree</code>(同意)を選択。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo xcodebuild -license
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p><a href="http://mxcl.github.com/homebrew/">Homebrew</a>のインストールするためのコマンドを実行。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>ruby -e <span class="s2">&quot;$(curl -fsSL https://raw.github.com/mxcl/homebrew/go)&quot;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>コマンドが終了したら、<code>brew -v</code>で確認。バージョン情報が出ればOK。</p>

<p>GitをインストールとGitの初期設定。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>brew install git
</span><span class='line'>git config --global user.name <span class="s2">&quot;ユーザー名&quot;</span>
</span><span class='line'>git config --global user.email email@example.com
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Git共通の.gitignoreファイルを<a href="/blog/git-gitignore-github/">GitHubの.gitignoreテンプレート(多数のフレームワークに対応)</a>を参考に作成します。</p>

<p><code>.bashrc, .bash_profile</code>の設定は、以下のリンクを参照。</p>

<p><strong><a href="http://morizyun.github.com/blog/bashrc-mac-lion-tips/">Mac Bashの設定</a></strong></p>

<p><a name="3"></a></p>

<h2>(3)MySQLのインストール</h2>

<p>コマンドラインから以下を実行。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>brew update
</span><span class='line'>brew install mysql
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>インストールが完了したら次のようなコメントがでます。<br/>
(バージョンによって多少変わる可能性あり。自分の環境での表示を優先)</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>コンソール  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>brew install <span class="nv">mysql</span>
</span><span class='line'><span class="o">==</span>&gt; Downloading https://downloads.sf.net/project/machomebrew/Bottles/mysql-5.6.10.mountain_lion.bottl&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h6&gt;################################################################## 100.0%&lt;/h6&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;<span class="o">==</span>&gt; Pouring mysql-5.6.10.mountain_lion.bottle.tar.gz
</span><span class='line'><span class="o">==</span>&gt; /usr/local/Cellar/mysql/5.6.10/bin/mysql_install_db --verbose --user<span class="o">=</span>komji --basedir<span class="o">=</span>/usr/local/C
</span><span class='line'><span class="o">==</span>&gt; Caveats
</span><span class='line'>A <span class="s2">&quot;/etc/my.cnf&quot;</span> from another install may interfere with a Homebrew-built
</span><span class='line'>server starting up correctly.&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;To connect:&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;pre&gt;&lt;code&gt;mysql -uroot
</span><span class='line'>&lt;/code&gt;&lt;/pre&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;To have launchd start mysql at login:&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;pre&gt;&lt;code&gt;ln -sfv /usr/local/opt/mysql/*.plist ~/Library/LaunchAgents
</span><span class='line'>&lt;/code&gt;&lt;/pre&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;Then to load mysql now:&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;pre&gt;&lt;code&gt;launchctl load ~/Library/LaunchAgents/homebrew.mxcl.mysql.plist
</span><span class='line'>&lt;/code&gt;&lt;/pre&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;Or, <span class="k">if </span>you don<span class="err">&#39;</span>t want/need launchctl, you can just run:&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;pre&gt;&lt;code&gt;mysql.server start
</span><span class='line'>&lt;/code&gt;&lt;/pre&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;<span class="o">==</span>&gt; Summary
</span><span class='line'>🍺  /usr/local/Cellar/mysql/5.6.10: 9245 files, 351M
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>次にMySQLを起動時に自動でSTARTさせるための設定をします。<br/>
まず、以下のコマンドを実行して自動起動用plistをコピー。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>ln -sfv /usr/local/opt/mysql/*.plist ~/Library/LaunchAgents
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>次にコピーしたplistは常に起動するように設定されているので、stopで終了できるように修正します。またバージョンアップに対応しやすいように、パスを修正します。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>vim ~/Library/LaunchAgents/homebrew.mxcl.mysql.plist&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;↓ の部分を修正&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;  &lt;key&gt;KeepAlive&lt;/key&gt;
</span><span class='line'>  &lt;<span class="nb">false</span>/&gt;
</span><span class='line'>  &lt;key&gt;Program&lt;/key&gt;
</span><span class='line'>  &lt;string&gt;/usr/local/bin/mysqld_safe&lt;/string&gt;
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>修正が完了したら、mysqlの簡単なチューニングを行います。<br/> <br/>
<code>vim /usr/local/Cellar/mysql/x.x.xx/my.cnf</code>の中の以下の設定を変更します。<br/>
(x.x.xxはバージョン、環境によって適宜変更して下さい)</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">innodb_buffer_pool_size</span> <span class="o">=</span> <span class="c"># サーバのメモリ70〜80%</span>
</span><span class='line'><span class="nv">innodb_log_file_size</span> <span class="o">=</span> <span class="c"># 100-500MB程度</span>
</span><span class='line'><span class="nv">innodb_flush_log_at_trx_commit</span> <span class="o">=</span> 2
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>次に、自動起動の設定をします。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>launchctl load -w ~/Library/LaunchAgents/homebrew.mxcl.mysql.plist
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>もし修正して再読み込みさせたい場合は以下のコマンドを実行してください。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>launchctl unload -w ~/Library/LaunchAgents/homebrew.mxcl.mysql.plist
</span><span class='line'>launchctl load -w ~/Library/LaunchAgents/homebrew.mxcl.mysql.plist
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>次にmysqlのroot(管理者)のパスワードとTestDBの削除等を対話形式で行います。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>mysql_secure_installation
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>以下は僕の設定です。</p>

<pre>
Set root password?(rootパスワード設定) => N
Remove anonymous users?(匿名ユーザー削除) => Y
Disallow root login remotely?(remote connectは許可しない) => Y
Remove test database and access to it?(テストDB削除) => Y
Reload privilege tables now?(権限リロード) => Y
</pre>


<p><a name="4"></a></p>

<h2>(4)RVMのインストール</h2>

<p>Rubyのバージョン管理を行なってくれるRVM(Ruby Version Management)をインストールします。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>curl -L https://get.rvm.io | bash -s stable
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>RVMのインストールが完了したら設定を読み込むために、コンソールで以下を実行。<br/>
(<font color="red">user_name</font>は自分のユーザー名にしてください)</p>

<pre>
source /Users/<font color="red">user_name</font>/.rvm/scripts/rvm
</pre>


<p>続いてRVMの初期設定を確認します。下のコマンドを実行するとインストールが必要なものが列挙されますので、Homebrewでインストールしてください。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>rvm requirements
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>僕の環境では以下のコマンドを実行。<br/></p>

<pre>
brew update
brew tap homebrew/dupes
brew install autoconf automake apple-gcc42
rvm autolibs enable
</pre>


<p>Rubyをインストールします。まず、インストールするバージョンを確認。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>rvm list known
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>一覧が出るので、インストールしたいRubyのバージョンを指定します。<br/>
(もし、特に指定がなければ1.9.3がおすすめです。 2012/12月時点)</p>

<p>インストールは以下のコマンドを実行。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>rvm install 1.9.3
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>完了したら、Ruby がインストールされているか確認。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>rvm list
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p><code>ruby-1.9.3-xxxx [ x86_64 ]</code>など指定したバージョンが出れば成功。</p>

<p>続いてデフォルトのrubyのバージョンを設定。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>rvm --default 1.9.3
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>デフォルトでgemインストール時にドキュメント生成しないようにします。
<code>~/.gemrc</code>を開いて以下の内容を追加。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>gem: --no-ri --no-rdoc
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>ちなみに、各プロジェクトのフォルダ毎にRubyのバージョンを指定したい場合は、<code>.ruby-version</code>をフォルダ直下に作成して、次の内容を記述。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>ruby-1.9.3-p392
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>また、bundle execを毎回実行するのは面倒なので、hookを有効にします。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>chmod +x ~/.rvm/hooks/after_cd_bundler
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p><a name="5"></a></p>

<h2>(5)Railsのモダン開発環境構築</h2>

<p>ここからは以下の4つの記事を参考にしてください。<br/>
(この4つの記事はお互いが連携してしまっているので、少しわかりにくいかもしれません。
もし何かつまるようなことがあったり、記述が間違っていたらぜひコメントください)</p>

<h4>Powのインストール</h4>

<p>Mac限定ですが、設定が不要で開発に最適なサーバPowのインストール手順を以下の記事にまとめています。よかったら参考にしてください。</p>

<p><strong><a href="/blog/pow-guard-rails">開発サーバをThinからPowに切り替えて開発効率アップ！ (Mac限定)</a></strong></p>

<h4>Railsでプロジェクトを構築</h4>

<p>もし、Railsのプロジェクトを作成するなら以下の記事がオススメです。
(あると捗るメジャーなGemも含んでいます)</p>

<p><strong><a href="/blog/rails-mysql-bootstrap">Rails 3.2.9/Bootstrap/Haml プロジェクト新規作成 最短ガイドだよ！</a></strong></p>

<h4>モダンなTDD環境の構築</h4>

<p>Railsをする上でおすすめのテスト駆動開発(TDD)環境の構築手順を以下にまとめています。
よかったら参考にしてください。</p>

<p><strong><a href="/blog/guard-spork-rspec-tdd">RSpec/Spork/Guard/Growl/Rails 3.2.9で作る - プリチーなTDD環境！</a></strong></p>

<h4>最強のRubyデバッグツールPryを最大権活用するための設定</h4>

<p>PryはRubyの開発で必須といっても過言ではないほどの素晴らしいツールです。このPryの活用方法を以下にまとめています。</p>

<p><strong><a href="/blog/pry-tips-rails-ruby/">Pryの秘めた力を最大限引き出す4つの拡張機能[Rails]</a></strong></p>

<h4>SSH認証鍵の設定</h4>

<p>もし、GitHubやBitbucketと連携する際にSSH認証を行いたい場合は以下の記事にまとめています。</p>

<p><strong><a href="/blog/ssh-key-bitbucket-github">SSH認証キーをBitbucket/GitHubに設定しよう！</a></strong></p>

<p><a name="6"></a></p>

<h2>(6)メモ：Tips集</h2>

<p>以下は必須ではないですが僕がやった設定です。</p>

<p>Sublime Text2をコマンドラインから呼び出せるようにする</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>ln -s /Applications/Sublime<span class="se">\ </span>Text<span class="se">\ </span>2.app/Contents/SharedSupport/bin/subl /usr/local/bin/subl
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>コンピュータ名をを変更。</p>

<pre>
アプリケーション　>システム環境設定　>共有　>コンピュタ名　>(変更) 
</pre>


<p>トラックパッドの下スクロールを変更。</p>

<pre>
アプリケーション　>システム環境設定　>共有　>コンピュタ名　>(変更) 
</pre>


<p>アプリのインストールでエラーが出る場合は以下を変更</p>

<pre>
アプリケーション　>システム環境設定　>セキュリティとプライバシー　>一般　>ダウンロードしたアプリの実行許可> すべてのアプリケーションを許可に変更 
</pre>


<p>Xcodeで自動生成されるソース内の個人名/会社名を変更(Mountain Lionは違うかも...)</p>

<pre>
(1)連絡先を開く
(2)自分のカードを表示する。(メニュー：カード＞自分のカードを表示)
(3)編集モードにする。(メニュー：編集＞カードを編集)
(4)会社名を入力する。(会社が入力した文字列に置き換わります)
</pre>


<h2>補足:RVMを再インストール</h2>

<p>何かの理由でRVMを再インストールする場合の削除コマンドは次の通り。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>rvm implode
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h2>補足: Library not loaded: libssl.1.0.0.dylib</h2>

<p>rvm側のライブラリが足りない場合にこの系のエラーが出るようです。</p>

<pre>
dlopen(/crownd/project/ruby/cron.watch.rankhub.net/shared/bundle/ruby/1.9.1/gems/mysql2-0.3.11/lib/mysql2/mysql2.bundle, 9): Library not loaded: /Users/user_name/.rvm/usr/lib/libssl.1.0.0.dylib
</pre>


<p>この場合は、<code>rvm autolibs enable</code>としたら解決しました。</p>

<h2>Special Thanks</h2>

<p><a href="http://tukaikta.blog135.fc2.com/blog-entry-220.html">OS X 10.8 Mountain LionにLAMP環境とWordpressを構築したときのメモ</a></p>

<p><a href="http://tukaikta.blog135.fc2.com/blog-entry-197.html">HomebrewでMySQLをインストールする時に知っておきたいこと</a></p>

<p><a href="http://pplog.org/?p=2155">【初心者向け】Mac OSX10.8(Mountain Lion)で Ruby on Railsを動かすための5ステップ</a></p>

<p><a href="http://d.hatena.ne.jp/ke-16/20121127">2012-11-27 Mountain Lion に Ruby 1.9.3 &amp; Rails 3.2.8 をインストールした  </a></p>

<p><a href="http://saikyoline.jp/weblog/2012/08/29/003429.html">素のMountain LionにRVMを</a></p>

<p><a href="http://stackoverflow.com/questions/1381725/how-to-make-no-ri-no-rdoc-the-default-for-gem-install">ruby - How to make --no-ri --no-rdoc the default for gem install? - Stack Overflow</a></p>

<p><a href="http://d.hatena.ne.jp/soikw/20120629/1340977004">コマンドラインからSublime Textを使えるようにする</a></p>

<p><a href="http://design1.chu.jp/setucocms-pjt/?p=747">初心者Git日記その六～PCでGit初期設定とGitHubへのpush～</a></p>

<p><a href="http://tukaikta.blog135.fc2.com/blog-entry-208.html">Homebrewを快適に使うために設定してる4つのこと</a></p>

<p><a href="http://rochefort.hatenablog.com/entry/2013/04/03/232717">ruby-versionを使う</a></p>

<p><a href="http://qiita.com/items/a1fbac19686a8fcd2e34">bundle execを使わずにすむ方法 #Rails - Qiita [キータ]</a></p>

<h2>変更来歴</h2>

<p>12/12 21:33 Growlをアプリ説明から削除<br/>
12/13 11:00 タイトルを変更、目次系の間違いを修正<br/>
12/18 20:35 RVMでのオススメのRubyバージョンを1.9.3-head => 1.9.3に変更<br/>
12/23 23:45 .gitignore/.rvmrcへの設定についての記述を追加<br/>
04/17 09:50 最新の状態に記事をアップデート<br/>
04/18 23:00 Pryの記事を追加<br/>
04/24 11:43 RVMのbundle exec hookを追加<br/>
05/20 17:25 MySQLのチューニング設定を追加<br/>
05/21 23:10 MySQLのインストール手順の記述順序を修正<br/></p>
]]></content>
  </entry>
  
</feed>
