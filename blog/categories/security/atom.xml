<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: security | 酒と泪とRubyとRailsと]]></title>
  <link href="http://morizyun.github.io/blog/categories/security/atom.xml" rel="self"/>
  <link href="http://morizyun.github.io/"/>
  <updated>2016-01-31T22:10:43+09:00</updated>
  <id>http://morizyun.github.io/</id>
  <author>
    <name><![CDATA[morizyun]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Rails セキュリティフィックス 4.2.5.1, 4.1.14.1, 5.0.0.beta1.1 のメモ]]></title>
    <link href="http://morizyun.github.io/blog/security-fix-rails-4.2.5.1/"/>
    <updated>2016-01-28T22:35:00+09:00</updated>
    <id>http://morizyun.github.io/blog/security-fix-rails-4.2.5.1</id>
    <content type="html"><![CDATA[<p><a href="http://www.amazon.co.jp/gp/product/4797380357/ref=as_li_qf_sp_asin_il?ie=UTF8&camp=247&creative=1211&creativeASIN=4797380357&linkCode=as2&tag=morizyun00-22"><img border="0" src="http://ws.assoc-amazon.jp/widgets/q?_encoding=UTF8&ASIN=4797380357&Format=_SL160_&ID=AsinImage&MarketPlace=JP&ServiceVersion=20070822&WS=1&tag=morizyun00-22" width="150" style="float: left; margin: 0 20px 20px 0;" ></a><img src="http://www.assoc-amazon.jp/e/ir?t=morizyun00-22&l=as2&o=9&a=4797380357" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" />
1/26(火)にRails 4.2.5.1, 4.1.14.1, 5.0.0.beta1.1等のセキュリティフィックスが出たのでそのメモ。</p>

<p><strong><a href="http://weblog.rubyonrails.org/2016/1/25/Rails-5-0-0-beta1-1-4-2-5-1-4-1-14-1-3-2-22-1-and-rails-html-sanitizer-1-0-3-have-been-released/">Riding Rails: Rails 5.0.0.beta1.1, 4.2.5.1, 4.1.14.1, 3.2.22.1, and rails-html-sanitizer 1.0.3 have been released!</a></strong></p>

<!-- more -->


<br style="clear:both;"/>


<h2>ベーシック認証の文字列比較の応答時間での推測を防ぐ</h2>

<p><strong><a href="https://groups.google.com/forum/#!msg/rubyonrails-security/ANv0HDHEC3k/mt7wNGxbFQAJ">[CVE-2015-7576] Timing attack vulnerability in basic authentication in Action Controller</a></strong></p>

<p>ベーシック認証の文字列比較をした時の応答時間で、処理時間が推測されるのを防ぐ。</p>

<p>```ruby</p>

<h2>こっちは直ぐ違うとわかる</h2>

<p>  "foo" == "bar"</p>

<h2>上よりは時間がかかる</h2>

<p>  "foo" == "fo1"
```</p>

<h2>DoS(Denial of Service)攻撃でmine-typeを大量に送ったらサーバが落ちてしまう問題の対応</h2>

<p><strong><a href="https://groups.google.com/d/msg/rubyonrails-security/9oLY_FCzvoc/w9oI9XxbFQAJ">CVE-2016-0751 Possible Object Leak and Denial of Service attack in Action Pack</a></strong></p>

<p>mime-typeをglobal cacheしていたため、大量な不正アクセスでメモリを圧迫してサービス停止しないようにするための対策。</p>

<p>ちなみに「mime-type」とはデータの種類を表すコードのことで、画像の <code>image/jpeg</code> やHTMLの <code>text/html</code> などがある。</p>

<h2>allow_destroy: false が効かないバグの修正</h2>

<p><strong><a href="https://groups.google.com/forum/#!msg/rubyonrails-security/cawsWcQ6c8g/tegZtYdbFQAJ">[CVE-2015-7577] Nested attributes rejection proc bypass in Active Record</a></strong></p>

<p><code>accepts_nested_attributes_for</code> をつけて親子クラスを一括で登録、更新する際に <code>allow_destroy: false</code>(削除を許可しない)を設定したにもかかわらず、
proc の <code>:reject_if</code> が優先されて削除される不具合があったのを修正。</p>

<h2>renderにパラメータを渡した場合にアプリ外のファイルが参照できる不具合の対応</h2>

<p><strong><a href="https://groups.google.com/forum/#!msg/rubyonrails-security/335P1DcLG00/OfB9_LhbFQAJ">[CVE-2016-0752] Possible Information Leak Vulnerability in Action View</a></strong></p>

<p><code>ruby
def index
  render params[:id]
end
</code></p>

<p>上記の様にパラメータを渡した場合に、アプリ外のファイルが参照できてしまう不具合があったので対策。この修正は難しい...追い切れない....orz...</p>

<h2>Strong Parameterを使わないモデルへのデータの受け渡しでValidationを通すようにする</h2>

<p><strong><a href="https://groups.google.com/forum/#!msg/rubyonrails-security/6jQVC1geukQ/8oYETcxbFQAJ">[CVE-2016-0753] Possible Input Validation Circumvention in Active Model</a></strong></p>

<p>Strong Parameterを使わずに、ActiveRecord等を使う場合に、</p>

<p><code>ruby
SomeModel.new(unverified_user_input)
</code></p>

<p>により、Validationを通さずに値が保存できてしまうバグの対応。</p>

<h2>routesに :controller があるとメモリリークするバグの回避</h2>

<p><strong><a href="https://groups.google.com/forum/#!msg/rubyonrails-security/dthJ5wL69JE/YzPnFelbFQAJ">CVE-2015-7581 Object leak vulnerability for wildcard controller routes in Action Pack</a></strong></p>

<p>めっちゃ勉強になります</p>

<h2>rails-html-sanitizerの重要なセキュリティフィックス</h2>

<p>rails-html-sanitizerの重要なセキュリティフィックスが発生しました。</p>

<ul>
<li><strong><a href="https://groups.google.com/d/msg/rubyonrails-security/uh--W4TDwmI/JbvSRpdbFQAJ">CVE-2015-7578 Possible XSS vulnerability in rails-html-sanitizer</a></strong></li>
<li><strong><a href="https://groups.google.com/d/msg/rubyonrails-security/OU9ugTZcbjc/PjEP46pbFQAJ">CVE-2015-7579 XSS vulnerability in rails-html-sanitizer</a></strong></li>
<li><strong><a href="https://groups.google.com/d/msg/rubyonrails-security/uh--W4TDwmI/m_CVZtdbFQAJ">CVE-2015-7580 Possible XSS vulnerability in rails-html-sanitizer</a></strong></li>
</ul>


<p><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- square -->
<ins class="adsbygoogle" style="display:inline-block;width:336px;height:280px" data-ad-client="ca-pub-4186413323075068" data-ad-slot="5059873392"></ins>
<script>
    (adsbygoogle = window.adsbygoogle || []).push({});
</script>
<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- square -->
<ins class="adsbygoogle" style="display:inline-block;width:336px;height:280px" data-ad-client="ca-pub-4186413323075068" data-ad-slot="5059873392"></ins>
<script>
    (adsbygoogle = window.adsbygoogle || []).push({});
</script></p>

<h2>rails-html-sanitizer 1.0.2 => 1.0.3の差分</h2>

<p>rails-html-sanitizer 1.0.2 => 1.0.3にバージョンアップされた差分はこちら。</p>

<ul>
<li><strong><a href="https://github.com/rails/rails-html-sanitizer/compare/v1.0.2...v1.0.3">Comparing v1.0.2...v1.0.3 · rails/rails-html-sanitizer</a></strong></li>
</ul>


<p>これにより、<code>rails-html-sanitizer</code> のフィルターがより厳格化される。</p>

<h2>rails 4.2.5.0 => 4.2.5.1 の差分</h2>

<ul>
<li><strong><a href="https://github.com/rails/rails/compare/v4.2.5...v4.2.5.1">Comparing v4.2.5...v4.2.5.1 · rails/rails</a></strong></li>
</ul>


<h2>4.2.5.1 で RSpec のパフォーマンスが悪くなる？</h2>

<ul>
<li><strong><a href="https://github.com/rspec/rspec-rails/issues/1532">Undefined Method <code>cache</code> in Tests for Rails 4.2.5.1 · Issue #1532 · rspec/rspec-rails - GitHub</a></strong></li>
</ul>


<p>4.2.5.1にした場合、RSpecで上記のエラーがでるようになったそうですが、こちらは対応/Closeされました。
その結果として、RSpecのパフォーマンスが落ちている(処理が遅くなった)人が出ているようです。</p>

<ul>
<li><strong><a href="https://github.com/rspec/rspec-rails/issues/1537">Performance Regression in 3.4.1 · Issue #1537 · rspec/rspec-rails</a></strong></li>
</ul>


<p>本番への適用はもう少しだけ様子を見たほうが良さそうです。</p>

<h2>あとがき</h2>

<p>y_yagiさんのブログ「<strong><a href="http://y-yagi.hatenablog.com/">なるようになるブログ</a></strong>」めっちゃ勉強になる。</p>

<h2>Special Thanks</h2>

<ul>
<li><strong><a href="http://y-yagi.hatenablog.com/entry/2016/01/27/063153">rails commit log流し読み(2016/01/26) - なるようになるブログ</a></strong></li>
<li><strong><a href="http://qiita.com/hmuronaka/items/818c421dc632e3efb7a6">Rails4 - 複数の子レコードを作成・更新する. accepts_nested_attributes_for - Qiita</a></strong></li>
<li><strong><a href="http://qiita.com/umanoda/items/3ceff00aae2309e4f9ba">RubyのGCと仲良くしたい〜WeakRefオブジェクトを削除するぞ編〜 - Qiita</a></strong></li>
<li><strong><a href="http://www.softantenna.com/wp/software/rails-4-2-5-1-released/">「Rails 5.0.0.beta1.1 / 4.2.5.1 / 4.1.14.1 / 3.2.22.1」がリリース – 重要なセキュリティ修正を含む</a></strong></li>
</ul>

]]></content>
  </entry>
  
</feed>
