<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Server | 酒と泪とRubyとRailsと]]></title>
  <link href="http://morizyun.github.io/blog/categories/server/atom.xml" rel="self"/>
  <link href="http://morizyun.github.io/"/>
  <updated>2016-01-25T00:12:45+09:00</updated>
  <id>http://morizyun.github.io/</id>
  <author>
    <name><![CDATA[morizyun]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[VULTR 日本リージョン/MEM 768MB/SSD 15GB VPS $5/月！ Rails鯖のためのAnsibleコードあり]]></title>
    <link href="http://morizyun.github.io/blog/VULTR-server-ssd-vps-easy-to-use/"/>
    <updated>2014-12-06T15:50:00+09:00</updated>
    <id>http://morizyun.github.io/blog/VULTR-server-ssd-vps-easy-to-use</id>
    <content type="html"><![CDATA[<p><a href="http://www.amazon.co.jp/gp/product/B00M3OEPEI/ref=as_li_qf_sp_asin_il?ie=UTF8&camp=247&creative=1211&creativeASIN=B00M3OEPEI&linkCode=as2&tag=morizyun00-22"><img border="0" src="http://ws.assoc-amazon.jp/widgets/q?_encoding=UTF8&ASIN=B00M3OEPEI&Format=_SL160_&ID=AsinImage&MarketPlace=JP&ServiceVersion=20070822&WS=1&tag=morizyun00-22" width="150" style="float: left; margin: 0 20px 20px 0;" ></a><img src="http://www.assoc-amazon.jp/e/ir?t=morizyun00-22&l=as2&o=9&a=B00M3OEPEI" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" />
開発をやっている中で、ネットワークに寄っては独自ドメインを使いたい！となります。そんな時に時間単位で借りれてカジュアルに使える
『<strong><a href="http://www.vultr.com/?ref=6808408">VPS VULTR</a></strong>』を今回はじめて借りてみました！</p>

<!-- more -->


<br style="clear:both;"/>


<p><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- square -->
<ins class="adsbygoogle" style="display:inline-block;width:336px;height:280px" data-ad-client="ca-pub-4186413323075068" data-ad-slot="5059873392"></ins>
<script>
    (adsbygoogle = window.adsbygoogle || []).push({});
</script></p>

<h2>まずはVULTRの「いいところ」</h2>

<p>AWSはELBやRDSなどは本番には欠かせないサービスですが、開発・ステージングや画像鯖など適材適所でVPSなどを活用するのも個人開発には大切だと思います！</p>

<p>最近の海外発の話題ドコロでは、Degital Ocean、Linode、AWS micro、<strong><a href="http://www.vultr.com/?ref=6808408">VPS VULTR</a></strong> などがあります。
今回は、日本リージョンがあって、時間単位で借りれて、一番コスパが良さそうにみえるVULTRを紹介したいと思います！</p>

<p>正直ベンチを取る時間はなかったので、他の方の記事をどうぞ！</p>

<p><strong><a href="http://qiita.com/kaiinui/items/da47c9850dc09b3cf091">AWSのインスタンス高過ぎワロタ。探せば安くて美味いところはあります。 - Qiita</a></strong></p>

<p><strong><a href="http://lowendtalk.com/discussion/25777/tiny-benchmarks-to-compare-linode-digital-ocean-vultr-and-wable">Tiny Benchmarks to Compare Linode, Digital Ocean, Vultr and Wable</a></strong></p>

<h2>VULTRユーザー登録</h2>

<p>では、実際に『<strong><a href="http://www.vultr.com/?ref=6808408">VPS VULTR</a></strong>』のユーザー登録をしていきます。</p>

<p>ここは欲望に忠実にアフィリエイト付きのコードを貼っておきます。ここからユーザー登録して使ってくれると、有料会員一人獲得につき$10が僕のデポジットに貯まるらしいです！</p>

<p><strong><a href="http://www.vultr.com/?ref=6808408">SSD VPS Servers - VULTR.com</a></strong></p>

<p>しかも今なら初回登録したデポジットが$100までは2倍になるキャンペーンを実施中だそうです！</p>

<h2>初回起動スクリプトの登録</h2>

<p>次にインスタンスを立ち上げる前に、初回起動スクリプトの登録を行います。</p>

<p><a href="http://www.vultr.com/?ref=6808408"><img src="https://farm4.staticflickr.com/3897/14826062685_f3225d609d_z.jpg" width="640" height="411" alt="スクリーンショット_2014-08-04_19_02_13"></a></p>

<p>ここではさっき作ったユーザー作成〜SSHログインの設定をひと通りやってくれるスクリプトを貼っておきます。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;!/bin/sh&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;<span class="o">=============</span>&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;Create User&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;<span class="o">=============</span>&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;user_name は適宜変更&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;useradd user_name -G wheel&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;passw0rd は適宜変更&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;echo <span class="s1">&#39;user_name:passw0rd&#39;</span> &gt; /home/user_name/tmp_pass
</span><span class='line'>chpasswd &amp;lt; /home/user_name/tmp_pass&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;<span class="o">=============</span>&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;Settings SSH Key&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;<span class="o">=============</span>&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;mkdir -p /home/user_name/.ssh&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;xxxにsshの公開鍵を貼り付け&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;echo ssh-rsa xxxx admin@example.com &gt; /home/user_name/.ssh/authorized_keys
</span><span class='line'>chmod 700 /home/user_name/.ssh/authorized_keys
</span><span class='line'>chmod 700 /home/user_name/.ssh
</span><span class='line'>chown user_name.user_name -R /home/user_name/.ssh&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;<span class="o">=============</span>&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;SSH Support&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;<span class="o">=============</span>&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;echo <span class="s1">&#39;SU_WHEEL_ONLY yes&#39;</span> &gt;&gt; /etc/login.defs
</span><span class='line'><span class="nb">echo</span> <span class="s1">&#39;%wheel ALL=(ALL) ALL&#39;</span> &gt;&gt; /etc/sudoers
</span><span class='line'><span class="nb">echo</span> <span class="s1">&#39;PermitRootLogin no&#39;</span> &gt;&gt; /etc/ssh/sshd_config
</span><span class='line'><span class="nb">echo</span> <span class="s1">&#39;PasswordAuthentication no&#39;</span> &gt;&gt; /etc/ssh/sshd_config
</span><span class='line'>/etc/init.d/sshd restart
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>シェル・スクリプトは殆どやったこと無いので、もっといい方法知ってる人がいれば是非コメント下さい！</p>

<h2>インスタンスの作成</h2>

<p>次にインスタンスを作成します。インスタンスは、ダッシュボードからボタンを2-3個押すだけで作成されます。
下の方で、先ほどの初回起動スクリプトを選択するようにしてください。</p>

<p><img src="https://farm3.staticflickr.com/2904/14826042635_46505125ea_z.jpg" width="640" height="555" alt="スクリーンショット 2014-08-04 18.59.08"></p>

<p>あとは1-2分位待つだけで、日本リージョン/MEM 768MB/SSD 15GB VPSのサーバが使えるようになります！</p>

<h2>Ansible で Railsサーバを立ち上げる</h2>

<p>拙著『<strong><a href="/blog/ansible-rails-rvm-nginx-mysql-postgresql-centos/">AWS/VULTR + AnsibleでベーシックなRailsサーバを簡単構築</a></strong>』
の解説と、リポジトリ「<strong><a href="https://github.com/morizyun/centos_ansible_rails">morizyun/centos_ansible_rails - GitHub</a></strong>」を使うと簡単にRails鯖も立ち上げられます。
ほんの数コマンド実行するだけで、モダンなRails鯖が立ち上がります！</p>

<p>もし立ち上げ方がわかりにくい場合はコメント頂ければ詳細な解説を書きマス！</p>

<p><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- square -->
<ins class="adsbygoogle" style="display:inline-block;width:336px;height:280px" data-ad-client="ca-pub-4186413323075068" data-ad-slot="5059873392"></ins>
<script>
    (adsbygoogle = window.adsbygoogle || []).push({});
</script></p>

<h2>Special Thanks</h2>

<p><strong><a href="http://akiniwa.hatenablog.jp/entry/2013/09/09/080718">Linuxのssh設定 ~ centos ~ - 忘れないようにメモっとく</a></strong></p>

<h2>変更来歴</h2>

<p>(11/02 15:50) 記述微調整<br/>
(12/06 14:50) アフィリエイトタグを各所に追記<br/></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[さくらVPS/entOS 6.4 Passengerのインストール手順 [Apache][Railsサーバへの道]]]></title>
    <link href="http://morizyun.github.io/blog/passenger-install-apache-ruby-rails/"/>
    <updated>2013-09-24T07:20:00+09:00</updated>
    <id>http://morizyun.github.io/blog/passenger-install-apache-ruby-rails</id>
    <content type="html"><![CDATA[<p><a href="http://www.amazon.co.jp/gp/product/4798126136/ref=as_li_qf_sp_asin_il?ie=UTF8&camp=247&creative=1211&creativeASIN=4798126136&linkCode=as2&tag=morizyun00-22"><img border="0" src="http://ws.assoc-amazon.jp/widgets/q?_encoding=UTF8&ASIN=4798126136&Format=_SL160_&ID=AsinImage&MarketPlace=JP&ServiceVersion=20070822&WS=1&tag=morizyun00-22" width="150" style="float: left; margin: 0 20px 20px 0;" ></a><img src="http://www.assoc-amazon.jp/e/ir?t=morizyun00-22&l=as2&o=9&a=4798126136" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" />
さくらVPS 2GB SSDのCentOS 6.4をセットアップしてイケてるRailsサーバに仕上げるまでのシリーズです。第8回はPassengerの導入です。PassengerとはRailsのアプリケーションサーバの１つで、Apacheと組合せて使う方式はそれなりの時間が立って、熟れているのでネットでの情報も豊富です！</p>

<!-- more -->


<br style="clear:both;"/>


<p><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- square -->
<ins class="adsbygoogle" style="display:inline-block;width:336px;height:280px" data-ad-client="ca-pub-4186413323075068" data-ad-slot="5059873392"></ins>
<script>
    (adsbygoogle = window.adsbygoogle || []).push({});
</script></p>

<h2>Passengerのインストール手順</h2>

<p>gem install時にドキュメント生成を行わないようにする。<br/>
<code>vim ~/.gemrc</code>に以下の項目を追加。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>gem: --no-rdoc --no-ri
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>RVM環境の場合はpassengerのインストール前にgemsetをgrobalにする。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>rvm gemset use global
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>gem passengerをインストール。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>gem install passenger
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>passengerのapacheモジュールのインストール。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>passenger-install-apache2-module
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>インストールが完了したら、以下のコマンドを実行。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>passenger-install-apache2-module --snippet
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h1>Passengerの設定</h1>

<p>以下のコマンドを実行すると、</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>passenger-install-apache2-module --snippet
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>apacheとの連携に必要な設定が次のように出力されます。</p>

<pre>
# 環境によって設定値が異なりますので以下の3行はそのまま転記しないでください。
LoadModule passenger_module /usr/local/rvm/gems/ruby-2.0.0-p247@global/gems/passenger-4.0.18/buildout/apache2/mod_passenger.so
PassengerRoot /usr/local/rvm/gems/ruby-2.0.0-p247@global/gems/passenger-4.0.18
PassengerDefaultRuby /usr/local/rvm/wrappers/ruby-2.0.0-p247@global/ruby
</pre>


<p><code>sudo vim /etc/httpd/conf.d/passnger.conf</code>で以下の内容を追加。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;Passengerの基本設定&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;LoadModule passenger_module /usr/local/rvm/gems/ruby-2.0.0-p247@global/gems/passenger-4.0.18/buildout/apache2/mod_passenger.so
</span><span class='line'>PassengerRoot /usr/local/rvm/gems/ruby-2.0.0-p247@global/gems/passenger-4.0.18
</span><span class='line'>PassengerDefaultRuby /usr/local/rvm/wrappers/ruby-2.0.0-p247@global/ruby&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;Passengerが追加するHTTPヘッダを削除するための設定&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;Header always <span class="nb">unset</span> <span class="s2">&quot;X-Powered-By&quot;</span>
</span><span class='line'>Header always <span class="nb">unset</span> <span class="s2">&quot;X-Rack-Cache&quot;</span>
</span><span class='line'>Header always <span class="nb">unset</span> <span class="s2">&quot;X-Content-Digest&quot;</span>
</span><span class='line'>Header always <span class="nb">unset</span> <span class="s2">&quot;X-Runtime&quot;</span>&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;必要に応じてPassengerのチューニングのための設定を追加&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;PassengerMaxPoolSize 20
</span><span class='line'>PassengerMaxInstancesPerApp 4
</span><span class='line'>PassengerPoolIdleTime 3600
</span><span class='line'>PassengerHighPerformance on
</span><span class='line'>PassengerStatThrottleRate 10
</span><span class='line'>RailsSpawnMethod smart
</span><span class='line'>RailsAppSpawnerIdleTime 86400
</span><span class='line'>PassengerMaxPreloaderIdleTime 0
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Apacheの文法チェックです。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>apachectl configtest&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;blockquote&gt;&lt;p&gt;sintax ok &amp;lt;<span class="o">=</span> と出れば成功。
</span></code></pre></td></tr></table></div></figure></notextile></div></p></blockquote>

<p>以下でApacheを再起動してブラウザで表示確認。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo /etc/rc.d/init.d/httpd restart
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>もし本番環境の場合は、<code>vim ~/.bashrc</code>で以下を追加。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">RAILS_ENV</span><span class="o">=</span>production
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p><code>source ~/.bashrc</code>を実行して設定を反映。</p>

<h2>補足：Passengerの実行ユーザー</h2>

<p>Passengerの実行ユーザーは各プロジェクトのconfig/environment.rb ファイルのオーナーだそうです。理由は、共有サーバーでPassengerを利用した場合に、他の利用者のファイルをRailsアプリからアクセス出来ないようにする為らしいです。</p>

<h2>補足 : Apacheのバーチャルホスト セットアップ手順</h2>

<p>Apacheのバーチャルホストの設定ファイル(<code>sudo vim /etc/http/conf.d/vhost.conf</code>など)を<strong><a href="/blog/apache-virtualhost-conf-passenger/">Apache VirtualHostの設定</a></strong>を参考に編集。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>コンソール  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>apachectl -t&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;blockquote&gt;&lt;p&gt;Syntax OK
</span><span class='line'>touch tmp/restart.txt
</span></code></pre></td></tr></table></div></figure></notextile></div></p></blockquote>

<h2>Special Thanks</h2>

<p><a href="http://d.hatena.ne.jp/aiueo88/20090901/1251787696">CentOS 5.3にApache をインストール</a></p>

<p><a href="https://rvm.io/integration/passenger/">RVM: Ruby Version Manager - Passenger - Come on, ride the train, hey, ride it, woo woo...</a></p>

<p><a href="http://seeku.hateblo.jp/entry/2013/05/30/081325">CentOSにRedmineをインストール</a></p>

<h2>変更来歴</h2>

<p>12/14 22:15 タイトルを変更、全体の構成をシリーズものに合わせて編集<br/>
09/24 07:20 Ruby2.0.0対応 &amp; CentOS 6.4対応、記述ミス修正<br/></p>

<h2>検証環境</h2>

<p>今回の記事の検証環境は以下の通りです。</p>

<pre>
Local/Server:
  Ruby: 2.0.0
  Rails: 4.0.0

Local:
  OS: Mac Mountain Mountain Lion(OS X 10.8.4)

Server(さくらVPS 2G SSD):
    CentOS release 6.4 (Final)
</pre>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[さくらVPS/CentOS 6.4へのRVMのインストール手順 [Ruby 2.0.0][Railsサーバへの道]]]></title>
    <link href="http://morizyun.github.io/blog/rvm-install-centos-ruby-rails/"/>
    <updated>2013-09-24T06:45:00+09:00</updated>
    <id>http://morizyun.github.io/blog/rvm-install-centos-ruby-rails</id>
    <content type="html"><![CDATA[<p><a href="http://www.amazon.co.jp/gp/product/482223472X/ref=as_li_qf_sp_asin_il?ie=UTF8&camp=247&creative=1211&creativeASIN=482223472X&linkCode=as2&tag=morizyun00-22"><img border="0" src="http://ws.assoc-amazon.jp/widgets/q?_encoding=UTF8&ASIN=482223472X&Format=_SL160_&ID=AsinImage&MarketPlace=JP&ServiceVersion=20070822&WS=1&tag=morizyun00-22" width="150" style="float: left; margin: 0 20px 20px 0;" ></a><img src="http://www.assoc-amazon.jp/e/ir?t=morizyun00-22&l=as2&o=9&a=482223472X" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" />
さくらVPS 2GB SSDのCentOS 6.4をセットアップしてイケてるRailsサーバに仕上げるまでのシリーズです。第7回はRVM(Ruby Version Management)をインストールする手順です。RVMはRubyのバージョンを管理してくれる仕組みで一つのサーバで複数のバージョンのRubyを使う可能性がある場合に使うとオススメなツールです。</p>

<!-- more -->


<br style="clear:both;"/>


<p><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- square -->
<ins class="adsbygoogle" style="display:inline-block;width:336px;height:280px" data-ad-client="ca-pub-4186413323075068" data-ad-slot="5059873392"></ins>
<script>
    (adsbygoogle = window.adsbygoogle || []).push({});
</script></p>

<h2>パッケージのインストール</h2>

<p>もしまだならEPELリポジトリを追加。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo rpm -ivh http://download.fedora.redhat.com/pub/epel/5/x86_64/epel-release-5-4.noarch.rpm
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>必要なパッケージをインストール。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo yum -y install curl curl-devel gcc gcc-c++ git openssl-devel httpd-devel readline-devel tk-devel make zlib-devel libffi-devel
</span><span class='line'>sudo yum --enablerepo<span class="o">=</span>epel -y install libyaml-devel
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h2>RVMのインストール手順</h2>

<p>rvmをインストール。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo bash -s stable &amp;lt; &amp;lt;<span class="o">(</span>curl -s https://raw.github.com/wayneeseguin/rvm/master/binscripts/rvm-installer <span class="o">)</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
* sudoをつけるとマルチユーザーにインストール(/usr/local/rvm)
* sudoを外すと使っているユーザーにインストール(~/.rvm/)</p>

<p>rvmグループを作成してrootを追加する。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo usermod -a -G rvm root
</span><span class='line'>sudo gpasswd -a USER_NAME rvm
</span><span class='line'>sudo gpasswd -a apache rvm
</span></code></pre></td></tr></table></div></figure></notextile></div>
* <code>USER_NAME</code>にはrvmを使うユーザー(ログインユーザー)を追加。</p>

<p>ここでOSの再起動をして下さい。そして、rvmの読込とrvmを最新バージョンに更新。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">source</span> /etc/profile.d/rvm.sh
</span><span class='line'>rvm get head
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p><code>rvm requirements</code></p>

<p>を実行して、rvmで必要なパッケージをインストール。</p>

<p>OSを再起動。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo reboot
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Ruby 2.0.0のインストール。<br/></p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>rvm install 2.0.0
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Ruby 2.0.0 をデフォルトに設定。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>rvm use 2.0.0 --default
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>RVMの設定確認。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>rvm <span class="nv">list</span>
</span><span class='line'><span class="o">=</span>* ruby-2.0.0-p247 <span class="o">[</span> x86_64 <span class="o">]</span> <span class="c"># &amp;lt;= となっていれば成功</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>今後<code>.rvmrc</code>が設置されたフォルダでは設定を自動で許可するようにする。
<code>vim /etc/rvmrc</code>に以下の内容を追加。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">rvm_trust_rvmrcs_flag</span><span class="o">=</span>1
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>bundlerをインストールして動作確認。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>gem install bundler --no-ri --no-rdoc&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;blockquote&gt;&lt;p&gt;Successfully installed bundler-1.2.3
</span><span class='line'>1 gem installed &amp;lt;<span class="o">=</span> で成功
</span></code></pre></td></tr></table></div></figure></notextile></div></p></blockquote>

<h2>エラー対策1: mkdir: ディレクトリ `/usr/local/rvm' を作成できません</h2>

<p>もし<code>mkdir: ディレクトリ `/usr/local/rvm' を作成できません: 許可がありません</code>か<code>Permission denied in /usr/local/rvm</code>というエラーが発生する場合は、以下のコマンドを実行。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo rm -rf /usr/local/rvm
</span><span class='line'>sudo rm -rf /etc/rvmrc.
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>でOSを再起動したほうがよさそう。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo reboot
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h2>エラー対策2: No space left on device</h2>

<p>もし、<code>No space left on device</code>というエラーはディスクに書き込める容量がないことを表しています。</p>

<p>ディレクトリ単位での使用量上位20位までを探す場合のコマンドは次の通り。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>du -k / | sort -n | tail -20
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>100MB以上のファイルを探す場合のコマンドは以下のとおりです。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>find / -size 100000K -ls
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h2>メモ: RVMを再インストール</h2>

<p>何かの理由でRVMを再インストールする場合の削除コマンドは次の通り。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>rvm implode
</span><span class='line'>sudo rm -rf /etc/rvmrc
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>OSを再起動したほうがよさそう。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo reboot
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h2>メモ: ユーザーの所属しているグループを調べる</h2>

<p>id コマンドでユーザーの所属しているグループが調べられる</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>id root&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;blockquote&gt;&lt;p&gt;uid<span class="o">=</span>0<span class="o">(</span>root<span class="o">)</span> <span class="nv">gid</span><span class="o">=</span>0<span class="o">(</span>root<span class="o">)</span> 所属グループ<span class="o">=</span>0<span class="o">(</span>root<span class="o">)</span>,501<span class="o">(</span>rvm<span class="o">)</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p></blockquote>

<h2>Special Thanks</h2>

<p><a href="http://tmaeda.s45.xrea.com/hiki/?(ruby">tmaeda hiki - Passenger と RVM で複数 gemset でのアプリケーション運用</a>PassengerWithRvm)</p>

<p><a href="http://www.pistolfly.jp/weblog/2012/01/centosrvm.html">CentOSにRVMをマルチユーザ用にインストール</a></p>

<p><a href="http://www.rabblemedia.net/blog/installing-rvm-ruby-rails-and-passenger-centos-6.html/">Installing RVM, Ruby on Rails, and Passenger on Centos 6</a></p>

<p><a href="http://fnya.cocolog-nifty.com/blog/2012/04/centos-62-rvmru.html">CentOS 6.2 に RVM、Ruby、Ruby on Rails をインストール</a></p>

<p><a href="http://ayabulu.seesaa.net/category/8520121-1.html">開発環境: 仮想CentOSでRuby開発めも</a></p>

<p><a href="http://unix.wixion.cc/paragraph_352.htm">グループにメンバーを追加する gpasswd -a user group - ok</a></p>

<p><a href="http://www.atmarkit.co.jp/flinux/rensai/linuxtips/095uidgid.html">ユーザーのユーザーIDやグループIDを調べるには</a></p>

<p><a href="http://codezine.jp/unixdic/w/usermod/">usermod ユーザのアカウントを変更する - UNIXコマンド辞典：CodeZine（コードジン）</a></p>

<p><a href="http://q.hatena.ne.jp/1194317312">LINUXで、ディスクの空き領域がなくなってきているのですが、サイズの大きいファイルやフォルダを探したいと考えています。</a></p>

<h2>変更来歴</h2>

<p>12/14 20:25 タイトルを変更、全体の構成をシリーズものに合わせて編集<br/>
12/14 22:10 エラー対策、本文を修正(何度がテストして一番いい方法を採用)<br/>
12/15 14:30 計5回くらいインストールと削除を繰返してやっと設定の流れを理解/修正<br/>
09/24 06:45 Ruby2.0.0対応 &amp; CentOS 6.4対応、記述ミス修正<br/></p>

<h2>検証環境</h2>

<p>今回の記事の検証環境は以下の通りです。</p>

<pre>
Local/Server:
  Ruby: 2.0.0
  Rails: 4.0.0

Local:
  OS: Mac Mountain Mountain Lion(OS X 10.8.4)

Server(さくらVPS 2G SSD):
    CentOS release 6.4 (Final)
</pre>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[YSlowはWebサイトの速度改善を提案するアドオン☆Rails 3.2アプリで試してみた！]]></title>
    <link href="http://morizyun.github.io/blog/yslow-speed-up-rails-server-centos/"/>
    <updated>2012-12-23T11:30:00+09:00</updated>
    <id>http://morizyun.github.io/blog/yslow-speed-up-rails-server-centos</id>
    <content type="html"><![CDATA[<p><a href="blog/categories/server/atom.xml" title="by morizyun, on Flickr"><img src="http://farm9.staticflickr.com/8494/8297892171_a60d77a761_q.jpg" width="150" alt="Where?" style="float: left; margin: 0 20px 20px 0;"></a>今話題の「<a href="http://www.slideshare.net/SumiKoichiro/1-15709348?utm_medium=twitter&amp;amp;utm_source=dlvr.it">スタートアップ向け！1人日でできるサービスの高速化方法と成果</a>」に乗っていたアプリのスピード改善を提案してくれる「<a href="http://developer.yahoo.com/yslow/">YSlow</a>」を試してみました！ちなみにこのアドオンはアメリカのYahooが無料で提供しています。</p>

<!-- more -->


<br style="clear:both;"/>


<p><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- square -->
<ins class="adsbygoogle" style="display:inline-block;width:336px;height:280px" data-ad-client="ca-pub-4186413323075068" data-ad-slot="5059873392"></ins>
<script>
    (adsbygoogle = window.adsbygoogle || []).push({});
</script></p>

<h2>Addonをインストール</h2>

<p><a href="http://developer.yahoo.com/yslow/">YSlow</a>でアドオンをダウンロード。</p>

<p><a href="http://developer.yahoo.com/yslow/" title="YSlow"><img src="http://farm9.staticflickr.com/8494/8297892171_a60d77a761.jpg" width="500" height="349" alt="YSlow Addon"></a></p>

<h2>YSlowのアドオンを実行</h2>

<p>分析したいWebアプリのページに進んで、YFlowのアドオンをクリック。</p>

<p><img src="http://farm9.staticflickr.com/8082/8298989838_29d74894a0_c.jpg" width="800" height="501" alt="どうぶつの森 QRコードまとめ"></p>

<h2>分析開始</h2>

<p>新しいタブが開いて、Run Testを実行すると分析が始まります。</p>

<p><img src="http://farm9.staticflickr.com/8220/8299031750_fe79769be9_c.jpg" width="800" height="182" alt="YSlow addon start screen"></p>

<p>結果は個別で23項目出てきました。</p>

<p><img src="http://farm9.staticflickr.com/8072/8297979443_58d0cc1f19_c.jpg" width="800" height="418" alt="YSlow 評価結果"></p>

<h2>いよいよ速度を改善</h2>

<p>今回の速度を改善する対象のRailsアプリ「どうぶつの森 QRコードまとめ」の前提条件として、</p>

<pre>
Railsアプリなので、CSS/JSの圧縮はやってくれている(assets:precompile)
Twitpicなどの公開されているサムネイルを使っているので画像系はノータッチ
VPSから送る重いデータはないのでCDNにはタッチしない
</pre>


<p>としました。それを考慮して今回のアプリでは次の点について改善を行なってみます。</p>

<pre>
Faviconの設置(今までなかったのでエラーになっていたため)
Apache Expire Headerの設定(ブラウザがhtml/jsなどをキャッシュする期間を伸ばす)
ETagsの設定(トラフィックを抑えるように設定する)
</pre>


<h2>Faviconの設置</h2>

<p>デザインセンスないので30分くらいデザインを考えて、諦めてとりあえず設置してみました！</p>

<p><img src="http://farm9.staticflickr.com/8354/8299122462_0ee061250f_m.jpg" width="120" height="88" alt="スクリーンショット 2012-12-23 11.30.53"></p>

<p>作成・設置方法はよかったら<a href="/blog/art-text2-mac-app-design">Art Text2はエンジニアのためのボタン・ファビコン作成ツールだ！</a>を参考にしてみてください。</p>

<h2>Apache Expire Headerの設定</h2>

<p>サーバーの<code>http.conf(CentOSなら:/etc/httpd/conf/http.conf)</code>に以下の設定を追加。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;これは既に設定済の可能性があるので確認&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;LoadModule expires_module     modules/mod_expires.so&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;以下を新規で追加&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;Apache Expire Header&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;ExpiresActive On
</span><span class='line'>ExpiresByType application/javascript <span class="s2">&quot;access plus 1 days&quot;</span>
</span><span class='line'>ExpiresByType application/x-javascript <span class="s2">&quot;access plus 1 days&quot;</span>
</span><span class='line'>ExpiresByType text/javascript <span class="s2">&quot;access plus 1 days&quot;</span>
</span><span class='line'>ExpiresByType text/css <span class="s2">&quot;access plus 1 days&quot;</span>
</span><span class='line'>ExpiresByType image/jpeg <span class="s2">&quot;access plus 3 days&quot;</span>
</span><span class='line'>ExpiresByType image/png <span class="s2">&quot;access plus 3 days&quot;</span>
</span><span class='line'>ExpiresByType image/gif <span class="s2">&quot;access plus 3 days&quot;</span>
</span><span class='line'>ExpiresByType image/x-icon <span class="s2">&quot;access plus 3 days&quot;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h2>ETagsの設定</h2>

<p>サーバーの<code>http.conf(CentOSなら:/etc/httpd/conf/http.conf)</code>に以下の設定を追加。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;ETags&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;FileETag MTime Size
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- square -->
<ins class="adsbygoogle" style="display:inline-block;width:336px;height:280px" data-ad-client="ca-pub-4186413323075068" data-ad-slot="5059873392"></ins>
<script>
    (adsbygoogle = window.adsbygoogle || []).push({});
</script></p>

<h2>ということで</h2>

<p>まだ設定して時間が立っていないので、速度がどのくらい改善したかはかけません。ですが、レスポンスの向上でユーザーの満足度も向上すると思います！更に詳しい説明は以下のリンクがオススメです。</p>

<p><a href="http://freesoft.tvbok.com/freesoft/web/yslow.html">サイトパフォーマンス計測ツールYSlowの評価項目まとめ</a></p>

<p><a href="http://news.mynavi.jp/articles/2008/01/29/yslow/002.html">【ハウツー】YSlowでWebページを高速化 - リッチさと速さを同時に実現するUIを! (3) YSlowの評価内容 | 開発・SE | マイナビニュース</a></p>

<p><a href="http://cloudrop.jp/cloud/apache_setting">クラウド環境でのApacheの設定 | cloudrop</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[開発サーバをThinからPowに切り替えて開発効率アップ！ (Mac限定)]]></title>
    <link href="http://morizyun.github.io/blog/pow-guard-rails/"/>
    <updated>2012-11-28T16:40:00+09:00</updated>
    <id>http://morizyun.github.io/blog/pow-guard-rails</id>
    <content type="html"><![CDATA[<p><a href="blog/categories/server/atom.xml" title="by morizyun, on Flickr"><img src="http://farm9.staticflickr.com/8209/8225589647_c2f4413b3b.jpg" width="200" alt="Eye Catch Image" style="float: left; margin: 0 20px 20px 0;"></a></p>

<p>「小さなチーム、大きな仕事」でおなじみの <a href="http://37signals.com/">37 signails</a>が開発した「設定が不要なRails &amp; Rackサーバ Pow」を使いはじめました！
このPowを使うメリットは、</p>

<pre>
* コマンド一つでPowサーバにRailsアプリへのリンクを作れる
* LAN内にあるスマホ/タブレットから開発中のURLにアクセスできる
</pre>


<p>ちなみにこちらはMac限定です。</p>

<!-- more -->


<br style="clear:both;"/>


<h2>Pow インストール</h2>

<p>Powのインストールは以下のコマンドのみ。もし、万一エラーが出るようなら<a href="https://github.com/37signals/pow">37signals/pow GitHub</a>を確認してみてください。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>コンソール  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>curl get.pow.cx | sh
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h2>Powderのインストール</h2>

<p>Powのコマンド入力支援してくれる<a href="https://github.com/Rodreegez/powder">Powder</a>をインストール。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>コンソール  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>gem install powder
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h2>Powへのリンクの作成</h2>

<p>Rails/Rackアプリのフォルダで以下を入力するとpowへのリンクを作成できます。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>コンソール  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>powder link&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;blockquote&gt;&lt;p&gt;Your application is now available at http://app_folder_name.dev/
</span></code></pre></td></tr></table></div></figure></notextile></div></p></blockquote>

<p>ブラウザで<code>http://app_folder_name.dev/</code>にアクセスするか、<code>powder open</code>と入力するとアプリが表示されます。その他のpowderのコマンドについては、下にまとめています。</p>

<h2>LAN内のスマホ/タブレットからアプリにアクセス</h2>

<p>pow + xip.ioによって、LAN内のスマホ/タブレットからアプリに簡単にアクセスすることができます。
まず、Mac側のローカルIPを確認。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>コンソール  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>ifconfig
</span><span class='line'>...&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;pre&gt;&lt;code&gt;    inet 192.168.24.99
</span><span class='line'>&lt;/code&gt;&lt;/pre&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;...
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>次にスマホ/タブレットのブラウザから、<code>http://app_folder_name.192.168.24.99.xip.io/</code>にアクセスするとアプリを表示することができます。</p>

<p><img src="http://farm9.staticflickr.com/8209/8248634603_c789a905f0.jpg" width="334" height="500" alt="fpu_tmp_1354787673.3801_44e45e"></p>

<h2>Guard::Powのインストール</h2>

<p>Railsには、config/environment.rbなど再起動しないと反映されないファイルが幾つかあります。
これをGem Guardで監視して変更があった場合には、自動でPowが再起動されるようにします。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>コンソール  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>gem install guard-pow
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h2>Guardファイルの設定</h2>

<p>Guardはファイル変更を監視して、サーバの再起動やテストの実行などを行なってくれるGemです。詳細は「<a href="/blog/guard-spork-rspec-tdd">RSpec/Spork/Guard/Growl/Rails 3.2.9で作る - プリチーなTDD環境！</a>」をご覧ください。</p>

<p>ここからはGuardとの連携方法について説明します。</p>

<p>まず、Guardfileを生成/更新します。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>コンソール  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>guard init pow
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>このコマンドを実行すると以下のようにプロジェクト直下のGuardfileが更新されます。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>Guardfile  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">guard</span> <span class="s1">&#39;pow&#39;</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">watch</span><span class="p">(</span><span class="s1">&#39;.powrc&#39;</span><span class="p">)</span>
</span><span class='line'>  <span class="n">watch</span><span class="p">(</span><span class="s1">&#39;.powenv&#39;</span><span class="p">)</span>
</span><span class='line'>  <span class="n">watch</span><span class="p">(</span><span class="s1">&#39;.rvmrc&#39;</span><span class="p">)</span>
</span><span class='line'>  <span class="n">watch</span><span class="p">(</span><span class="s1">&#39;Gemfile&#39;</span><span class="p">)</span>
</span><span class='line'>  <span class="n">watch</span><span class="p">(</span><span class="s1">&#39;Gemfile.lock&#39;</span><span class="p">)</span>
</span><span class='line'>  <span class="n">watch</span><span class="p">(</span><span class="s1">&#39;config/application.rb&#39;</span><span class="p">)</span>
</span><span class='line'>  <span class="n">watch</span><span class="p">(</span><span class="s1">&#39;config/environment.rb&#39;</span><span class="p">)</span>
</span><span class='line'>  <span class="n">watch</span><span class="p">(</span><span class="sr">%r{&lt;sup&gt;config/environments/.*.rb$}</span><span class="p">)</span><span class="o">&lt;</span><span class="sr">/sup&gt;</span>
</span><span class='line'><span class="sr">  watch(%r{&lt;sup&gt;config/ini</span><span class="n">tializers</span><span class="o">/.</span><span class="n">*</span><span class="o">.</span><span class="n">rb</span><span class="err">$</span><span class="p">})</span><span class="o">&lt;</span><span class="sr">/sup&gt;</span>
</span><span class='line'><span class="sr">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>これでGuardがファイルを監視して、変更があった場合には Powを自動で更新してくれます。</p>

<h2>補足: localhostでアクセスするリンク先の設定</h2>

<p><code>localhost</code>でアクセスするリンク先は以下のコマンドで設定できます。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>ln -s /app/path/to/ ~/.pow/default
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h2>補足: Pow-RVMの連携 Rubyのバージョンを指定する</h2>

<p>もし、Powでリンクを張ったプロジェクトのRVMのバージョンを指定したい場合は、まずプロジェクトの直下に<code>.rvmrc</code>を作成して以下を登録。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>rvm 1.9.3
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>次に同じくプロジェクトの直下に<code>.powrc</code>を作成して以下を追加。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="k">if</span> <span class="o">[</span> -f <span class="s2">&quot;$rvm_path/scripts/rvm&quot;</span> <span class="o">]</span> &amp;amp;&amp;amp; <span class="o">[</span> -f <span class="s2">&quot;.rvmrc&quot;</span> <span class="o">]</span>; <span class="k">then</span>
</span><span class='line'><span class="k">  </span><span class="nb">source</span> <span class="s2">&quot;$rvm_path/scripts/rvm&quot;</span>
</span><span class='line'>  <span class="nb">source</span> <span class="s2">&quot;.rvmrc&quot;</span>
</span><span class='line'><span class="k">fi</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>RVM関連の設定詳細は<a href="http://pow.cx/manual.html#section_2.3.2">公式ページの2.3.2 Specifying Ruby Versions with RVM</a>を参照。</p>

<h2>補足: Powを使っていて Error starting application(Error: Response was not received)が発生する場合</h2>

<p>Mac/homebrew/Powの環境で、<code>Error starting application(Error: Response was not received)</code>がある一定の確率で出る場合は、Nokogiriのインストール方法に問題がある可能性があります。</p>

<p>Nokogiriを削除して、<a href="http://nokogiri.org/tutorials/installing_nokogiri.html">Nokogiri公式のインストール方法</a>で再イントールしてください。</p>

<p>参考ソース(タイトルからはわかりにくいですがPowについてのトラブルっぽいです):
<a href="http://stackoverflow.com/questions/7106707/rails-local-server-shutdown-problem">nginx - Rails (local) server shutdown problem - Stack Overflow</a></p>

<h2>補足: Powderのコマンド一覧</h2>

<p>使いそうなコマンドをピックアップしました。詳細は<a href="https://github.com/Rodreegez/powder">Rodreegez / powder | GitHub</a>にあります。</p>

<pre>
powder link

=> current_dirのシンボリックリンクを作成
</pre>




<pre>
powder link [bacon]

=> ファイル名指定のシンボリックリンクを作成
</pre>




<pre>
powder remove

=> シンボリックリンクを削除
</pre>




<pre>
powder open

=> ブラウザでcurrent_dirのアプリを表示
</pre>




<pre>
powder list

=> ~/.powのシンボリックリンク一覧を出す
</pre>




<pre>
powder applog

=> アプリのログを tail -f で出力
</pre>




<pre>
powder restart

=> サーバ Pow の再起動
</pre>




<pre>
powder cleanup

=> アクセス出来ないアプリへのリンクを削除
</pre>




<pre>
powder update

=> Pow のアップデート
</pre>


<h2>補足: Powのアンインストール</h2>

<p>もし何らかの事情でPowをアンインストールしたくなった場合は以下のコマンドを実行。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>curl get.pow.cx/uninstall.sh | sh
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>アンインストールの詳細は<a href="http://pow.cx/manual.html#section_1.2">公式ページの1.2 Uninstalling Pow</a>を参照。</p>

<h2>関連記事</h2>

<p><strong> <a href="/blog/rails-mysql-bootstrap">Rails 3.2.9/Bootstrap/Haml プロジェクト新規作成 最短ガイドだよ！</a> </strong> にてGuardの設定/ブラウザのオートリロードの方法などを載せています。</p>

<h2>Special Thanks</h2>

<ul>
<li><p><a href="https://github.com/37signals/pow">37signals / pow | GitHub</a></p></li>
<li><p><a href="https://github.com/Rodreegez/powder">Rodreegez / powder | GitHub</a></p></li>
<li><p><a href="http://marutanm.hatenablog.com/entry/20110607/p1">Pow使うならPowder入れておくだァーッ！</a></p></li>
<li><p><a href="http://higelog.brassworks.jp/?p=1847">Guard::PowでPowを更に快適に使う</a></p></li>
<li><p><a href="http://naoty.hatenablog.com/entry/2012/08/08/101448">Rails開発環境 2012夏</a></p></li>
</ul>


<h2>変更来歴</h2>

<p>12/06 pow + xip.ioの説明を追加。コマンド一覧の位置を変更。別途説明を追加。<br/>
12/16 11:30 pow + xip.ioのアドレスがまちがっていたので修正<br/>
12/18 19:00 補足: Powを使っていて Error starting application(Error: Response was not received)が発生する場合を追加<br/>
12/18 20:40 補足: Powのアンインストールを追加<br/>
12/18 20:45 補足: Pow-RVMの連携 Rubyのバージョンを指定するを追加<br/>
01/15 20:50 補足: localhostでアクセスするリンク先の設定を追加<br/></p>

<h2>テスト環境</h2>

<p>テスト環境は以下の通りです。</p>

<pre>
OS : Mac Lion(OS X 10.7)
Ruby : 1.9.3
Rails : 3.2.9
haml : 3.1.7
coffee-script : 3.2.1
Rspec : 2.12.0
</pre>

]]></content>
  </entry>
  
</feed>
