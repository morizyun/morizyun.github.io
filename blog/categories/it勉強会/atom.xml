<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: IT勉強会 | 酒と泪とRubyとRailsと]]></title>
  <link href="http://morizyun.github.io/blog/categories/it勉強会/atom.xml" rel="self"/>
  <link href="http://morizyun.github.io/"/>
  <updated>2016-01-30T10:22:13+09:00</updated>
  <id>http://morizyun.github.io/</id>
  <author>
    <name><![CDATA[morizyun]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[IT勉強会を探しやすくするWebアプリ『俺の勉カレ』をリニュアールしました]]></title>
    <link href="http://morizyun.github.io/blog/renewal-meeting.blue-study-meeting-collection/"/>
    <updated>2014-11-03T16:25:00+09:00</updated>
    <id>http://morizyun.github.io/blog/renewal-meeting.blue-study-meeting-collection</id>
    <content type="html"><![CDATA[<p><a href="http://www.amazon.co.jp/gp/product/4532319552/ref=as_li_qf_sp_asin_il?ie=UTF8&camp=247&creative=1211&creativeASIN=4532319552&linkCode=as2&tag=morizyun00-22"><img border="0" src="http://ws.assoc-amazon.jp/widgets/q?_encoding=UTF8&ASIN=4532319552&Format=_SL160_&ID=AsinImage&MarketPlace=JP&ServiceVersion=20070822&WS=1&tag=morizyun00-22" width="150" style="float: left; margin: 0 20px 20px 0;" ></a><img src="http://www.assoc-amazon.jp/e/ir?t=morizyun00-22&l=as2&o=9&a=4532319552" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" />
2013-2014年の年末年始の連休を利用して開発したIT勉強会を網羅したアプリ『<strong><a href="http://workshop.morizyun.com/">俺の勉カレ</a></strong>』を全面リニュアールしました！
見た目はちょこっとしか変わってないように見えますが、実は裏側はほぼすべて作りなおしましたw
今回はリニュアールの目的と、リニュアールでどんな技術を使ったのかを中心に紹介していきます。</p>

<!-- more -->


<br style="clear:both;"/>


<p><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- square -->
<ins class="adsbygoogle" style="display:inline-block;width:336px;height:280px" data-ad-client="ca-pub-4186413323075068" data-ad-slot="5059873392"></ins>
<script>
    (adsbygoogle = window.adsbygoogle || []).push({});
</script></p>

<h2>リニュアールの目的</h2>

<p><a href="http://workshop.morizyun.com/" target="_blank" class="_"><img src="https://farm4.staticflickr.com/3942/15511213577_e5c7a57333_z.jpg" width="640" height="524"></a></p>

<p>初期構築したアプリでは、Microservicesのまね事みたいなことを夢想していて単機能ごとに6個のアプリで構成されていました。
しかもかなりの運用工数がかかるような謎設計で、昔の自分の頭のなかがいかにお花畑だったかを思い知らされます。</p>

<p>こういった失敗を踏まえて、</p>

<pre>
* できるだけ運用が楽な仕組みにする
* 運用工数を最小化できるような構成にする
* 自分が興味のある勉強会を見つけやすくする
</pre>


<p>を基本コンセプトに、裏側をほぼすべて書き直しました。</p>

<h2>使った技術</h2>

<h3>インフラ:VULTR</h3>

<p><strong><a href="http://morizyun.github.io/blog/VULTR-server-ssd-vps-easy-to-use/">VULTR 日本リージョン/MEM 768MB/SSD 15GB VPS $5/月！ Rails鯖のためのAnsibleコードあり</a></strong></p>

<p>インフラはVULTRで月に$5運用です。日本リージョン + SSDで、時間単位の課金なのでめっちゃオススメです！
ちなみに『<strong><a href="https://www.google.co.jp/webhp?sourceid=chrome-instant&amp;ion=1&amp;espv=2&amp;es_th=1&amp;ie=UTF-8#q=vultr+coupon">グーグル先生</a></strong>』
にお伺いをたてると、しばらく無料になってしまうようなクーポンコードを教えて頂けたりします。</p>

<h3>インフラ構築コード: Ansible</h3>

<p><strong><a href="/blog/ansible-rails-rvm-nginx-mysql-postgresql-centos/">AWS/VULTR + AnsibleでベーシックなRailsサーバを簡単構築</a></strong></p>

<p>Railsサーバの構築部分についてはAnsibleのコードを使いました。GitHubにも公開していますので、
是非使って、PRをいただけると助かります！</p>

<h3>アプリ: Rails</h3>

<p>アプリの構成はベーシックなRailsアプリです。</p>

<pre>
* Rails 4.1.7
* Ruby 2.1.4
* PostgreSQL
</pre>


<p>Railsは基本的なMVCフレームワークとrakeタスクの管理として使っています。
AntdやConnpass、Doorkeeper、ZusaarなどのAPIから勉強会の一覧を取得してくる部分については、
Gem『<strong><a href="https://rubygems.org/gems/events_jp">events_jp | RubyGems.org</a></strong>』にしました。
このGemについては後で別に記事を書く予定ですが、こういう共通部分を外出しにしていくことで、
これからアウトプットを強化したり、OSSに貢献していきたいと思っています！</p>

<h3>アプリのデプロイ: Capistrano</h3>

<p><strong><a href="/blog/capistrano3-rails-deploy-multi-rbenv/">Capistrano 3系でRails4.1のデプロイ</a></strong></p>

<p>デプロイツールのCapistranoさんには大変お世話になっています。自分でサーバを持ってアプリをデプロイ
するときには無くてはならないアプリです。</p>

<h3>Cron管理: Whenever</h3>

<p><strong><a href="/blog/whenever-gem-rails-ruby-capistrano/">Wheneverは導入が超簡単なcrontab管理ライブラリGemです！</a></strong></p>

<p>CronをRailsのソースコード内で管理できて、デプロイ時に自動で最新の状態にアップデートしてくれる
Wheneverさんにも大変お世話になっています！Cronの管理めっちゃ楽！</p>

<h3>エラー監視: Errbit</h3>

<p><strong><a href="/blog/errbit-heroku-rails-error-ruby/">Errbit - Railsアプリの本番エラーをherokuで管理、メール通知する【無料枠】</a></strong></p>

<p>エラー監視としてErrbitを使っています。このErrbitを使うと<code>Airbrake.notify(e, parameters: { hoge: 'fuga' })</code>
といったようにエラーの原因調査に必要な情報を一緒に送付してくれることでエラー管理と対策がかなりやりやすくなる点です。
特に個人プロジェクトでWebアプリを運用していく時には欠かせないツールだと思います！</p>

<h3>あとがき</h3>

<p>このプロジェクトは最初は1日で終わるぜヤッホイと思っていましたが、結局デザインで行ったり来たり
してしまったせいで1ヶ月近くかかってしまいました。(最終的にデザインのリニュアールは諦めましたorz...)</p>

<p>デザインを一人で乗り切るだけの実力は無いので、『<strong><a href="http://getbootstrap.com/">Bootstrap</a></strong>』や
『<strong><a href="https://www.polymer-project.org/">polymer</a></strong>』をうまく使いこなせるようになりたい！</p>

<p><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- square -->
<ins class="adsbygoogle" style="display:inline-block;width:336px;height:280px" data-ad-client="ca-pub-4186413323075068" data-ad-slot="5059873392"></ins>
<script>
    (adsbygoogle = window.adsbygoogle || []).push({});
</script></p>
]]></content>
  </entry>
  
</feed>
