<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Hackathon | 酒と泪とRubyとRailsと]]></title>
  <link href="http://morizyun.github.io/blog/categories/hackathon/atom.xml" rel="self"/>
  <link href="http://morizyun.github.io/"/>
  <updated>2016-02-02T11:11:14+09:00</updated>
  <id>http://morizyun.github.io/</id>
  <author>
    <name><![CDATA[morizyun]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[jbuilder/rabl/ActiveModel Seriarizer Rails4 のjsonライブラリについて in Ginza.rb]]></title>
    <link href="http://morizyun.github.io/blog/json-builder-rabl-active-model-seriarizer/"/>
    <updated>2013-11-14T23:55:00+09:00</updated>
    <id>http://morizyun.github.io/blog/json-builder-rabl-active-model-seriarizer</id>
    <content type="html"><![CDATA[<p><a href="http://www.amazon.co.jp/gp/product/4774159905/ref=as_li_qf_sp_asin_il?ie=UTF8&camp=247&creative=1211&creativeASIN=4774159905&linkCode=as2&tag=morizyun00-22"><img border="0" src="http://ws.assoc-amazon.jp/widgets/q?_encoding=UTF8&ASIN=4774159905&Format=_SL160_&ID=AsinImage&MarketPlace=JP&ServiceVersion=20070822&WS=1&tag=morizyun00-22" width="150" style="float: left; margin: 0 20px 20px 0;" ></a><img src="http://www.assoc-amazon.jp/e/ir?t=morizyun00-22&l=as2&o=9&a=4774159905" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" />
10/26に開催されたginza.rb「<strong><a href="http://ginzarb.doorkeeper.jp/events/6459">Ginza.rb 第4回 Rails 4.0時代の json ライブラリ頂上決定戦！！</a></strong>」のレポート記事です。</p>

<p>今回は、Rails 4で有名どころのjsonライブラリ、jbuilder、rabl、Activemodel Seriarizerを比較してその特徴を考えていくのがテーマでした。参加して、jsonのライブラリにもそれぞれ設計に思想の違いがあって、その特徴の違いを意識して、ライブラリを選択するべきだと実感出来ました＾＾</p>

<p>ちなみに、次回は11/26(火)に「<strong><a href="http://ginzarb.doorkeeper.jp/events/7014">Ginza.rb 第5回 ハラショー！ Russian Doll Caching！</a></strong>」がもしご興味があればぜひ！</p>

<!-- more -->


<br style="clear:both;"/>


<h2>jbuilder</h2>

<p>jbuilderはJSONレスポンスを出力するテンプレートエンジンです。Rails 4のbundle installでデフォルトでインストールされます。</p>

<p>jbuilderの一番簡単な使い方のイメージは<code>/app/views/articles/show.json.jbuilder</code>内でこんな風に使います。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>json.id @article.id
</span><span class='line'>json.name @article.name
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>これで、<code>http://localhost/articles/1.json</code>でアクセスするとjsonを出力してくれます。
jbuilderはviewなどに書くことも可能で、DSLもRubyらしくて読みやすいです。</p>

<p>特徴は次の通り。</p>

<pre>
* Viewでき術できる。部分テンプレートなども使える
* Rails インテグレーションが優れている
* キャッシュにも対応している
</pre>


<p>jbuiderに関するリンクはこちら。</p>

<p><strong><a href="https://github.com/rails/jbuilder">rails/jbuilder · GitHub</a></strong></p>

<p><strong><a href="http://railscasts.com/episodes/320-jbuilder?language=ja&amp;view=asciicast">#320 Jbuilder - RailsCasts</a></strong></p>

<h2>rabl</h2>

<p>rablはRuby API Builder Languageの略で、jbuilderなどに比べて機能も豊富です。json、xml、MessagePack、PList、BSONなどに対応しています。</p>

<p>rablの簡単な例は、<code>/app/views/articles/show.json.rabl</code>で次のように書くとjsonを出力してくれます。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>object @article
</span><span class='line'>attributes :id, :name, :published_at
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>すこしだけ書き方にクセがありますが、覚えてしまえば書きやすそうです。</p>

<p>rablの特徴は次の通り。</p>

<pre>
* 記述量が、jbuilderよりも少ない。
* bson, message_list, xmlなど幅広く対応
* 設定がかなり多いので細かい対応がしやすい
</pre>


<p>rablに関するリンクはこちら。</p>

<p><strong><a href="https://github.com/nesquena/rabl">nesquena/rabl · GitHub</a></strong></p>

<p><strong><a href="http://railscasts.com/episodes/322-rabl?language=ja&amp;view=asciicast">#322 RABL - RailsCasts</a></strong></p>

<h2>Active Model Serializers</h2>

<p>Active Model Serializersは、ActiveModelをシリアライズするためのライブラリで、jsonに対応しています。</p>

<p>Active Model Serializersの簡単な使い方としては、<code>/app/serializers/article_serializer.rb</code>に次のように書きます。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>class ArticleSerializer &amp;lt; ActiveModel::Serializer
</span><span class='line'>  attributes :id, :name, :content
</span><span class='line'>end
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>jbuilderやrablと違って、専用のクラスをつくるところが特徴的です。</p>

<pre>
* コントローラに記述しないといけないので気持ち悪い
* rails g serializer も提供されている
* キャッシュにも対応、継承もできてオブジェクト思考的
</pre>


<p>ActiveModel::Serializerにかんするリンクはこちら！</p>

<p><strong><a href="http://railscasts.com/episodes/409-active-model-serializers?language=ja&amp;view=asciicast">#409 Active Model Serializers - RailsCasts</a></strong></p>

<p><strong><a href="http://y-yagi.tumblr.com/post/63976647257/active-model-serializers">active_model_serializersを試してみた</a></strong></p>

<h2>パフォーマンス比較</h2>

<p>簡単なABテストを会場で行いました。その際のパフォーマンスは serializer/jbuilderが同じくらい、rablは2倍くらいの時間がかかるっぽかったです。</p>

<p>ちなみにABコマンドの説明はこちら。</p>

<p><strong><a href="http://arakanoj.com/ab%E3%82%B3%E3%83%9E%E3%83%B3%E3%83%89%E3%82%92%E4%BD%BF%E3%81%A3%E3%81%9F%E3%82%A6%E3%82%A7%E3%83%96%E3%82%A2%E3%83%97%E3%83%AA%E3%82%B1%E3%83%BC%E3%82%B7%E3%83%A7%E3%83%B3%E3%81%AE%E3%83%91%E3%83%95-2074.html">Abコマンドを使ったウェブアプリケーションのパフォーマンス計測</a></strong></p>

<h2>考察</h2>

<p>それぞれのライブラリは得手不得手や、設計上の思想の違いがあり、一概にコレが一番というわけではなさそうです。各ライブラリの特徴を意識しつつ、ぜひ試してみてください！</p>
]]></content>
  </entry>
  
</feed>
