<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: dokku | 酒と泪とRubyとRailsと]]></title>
  <link href="http://morizyun.github.io/blog/categories/dokku/atom.xml" rel="self"/>
  <link href="http://morizyun.github.io/"/>
  <updated>2016-01-31T22:29:22+09:00</updated>
  <id>http://morizyun.github.io/</id>
  <author>
    <name><![CDATA[morizyun]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[figaro HerokuやDokkuの環境変数の管理に便利！]]></title>
    <link href="http://morizyun.github.io/blog/figaro-config-heroku-dokku-rails-ruby/"/>
    <updated>2016-01-09T23:55:00+09:00</updated>
    <id>http://morizyun.github.io/blog/figaro-config-heroku-dokku-rails-ruby</id>
    <content type="html"><![CDATA[<p><a href="http://www.amazon.co.jp/gp/product/B00NXMTLHK/ref=as_li_qf_sp_asin_il?ie=UTF8&camp=247&creative=1211&creativeASIN=B00NXMTLHK&linkCode=as2&tag=morizyun00-22"><img border="0" src="http://ws.assoc-amazon.jp/widgets/q?_encoding=UTF8&ASIN=B00NXMTLHK&Format=_SL160_&ID=AsinImage&MarketPlace=JP&ServiceVersion=20070822&WS=1&tag=morizyun00-22" width="150" style="float: left; margin: 0 20px 20px 0;" ></a><img src="http://www.assoc-amazon.jp/e/ir?t=morizyun00-22&l=as2&o=9&a=B00NXMTLHK" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" />
HerokuやDokkuで使う環境変数を管理するGem「<strong><a href="https://github.com/laserlemon/figaro">laserlemon/figaro</a></strong>」の紹介です。
モダンなWebアプリケーションの設計の指針とも言える「<strong><a href="http://12factor.net/ja/">Twelve-Factor App</a></strong>」を実現するのを手助けしてくれる素晴らしいGemです。</p>

<!-- more -->


<br style="clear:both;"/>


<p><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- square -->
<ins class="adsbygoogle" style="display:inline-block;width:336px;height:280px" data-ad-client="ca-pub-4186413323075068" data-ad-slot="5059873392"></ins>
<script>
    (adsbygoogle = window.adsbygoogle || []).push({});
</script></p>

<h2>Twelve-Factor App</h2>

<p>「<strong><a href="http://12factor.net/ja/">Twelve-Factor App</a></strong>」にある通り、次の設計指針のことです。
今回のFigaroは(3)の設定を環境変数に格納するためのものです。</p>

<pre>
(1) コードベース : バージョン管理されている1つのコードベースがあり、それにより複数の環境にデプロイできる
(2) 依存関係 : 依存関係を明示的に宣言し分離する
(3) 設定 : 設定を環境変数に格納する
(4) バックエンドサービス : バックエンドのサービスをアタッチされたリソースとして扱う
(5) ビルド、リリース、実行 : ビルド、リリース、実行の3つのステージをちゃんと分離する
(6) プロセス : アプリケーションを1つもしくは複数のステートレスなプロセスとして実行する
(7) ポートバインディング : ポートバインディングを通してサービスを公開する
(8) 並行性 : プロセスモデルによってスケールアウトする
(9) 廃棄容易性 : 高速な起動とグレースフルシャットダウンで堅牢性を最大化する
(10) 開発/本番一致 : 開発、ステージング、本番環境をできるだけ一致させた状態を保つ
(11) ログ : ログをイベントストリームとして扱う
(12) 管理プロセス : 管理タスクを1回限りのプロセスとして実行する
</pre>


<h2>Gemのインストール</h2>

<p><code>Gemfile</code>に以下を追加して、<code>bundle install</code>を実行してください。
下記は用途に合わせてどちらかをお使いください。</p>

<p>```ruby</p>

<h1>公式のものを使う場合(Dokku非対応の公式のものを使う場合はこちら)</h1>

<p>gem 'figaro'</p>

<h1>Dokku対応を行ったバージョンです(PR中なのでそのうち本体に取り込まれるかも)</h1>

<p>gem 'figaro', github: 'morizyun/figaro'
```</p>

<h2>設定方法</h2>

<p>以下の様に設定してください。</p>

<p>```ruby</p>

<h1>config/application.yml</h1>

<p>pusher_app_id: "2954"
pusher_key: "7381a978f7dd7f9a1117"
pusher_secret: "abdc3b896a0ffb85d373"</p>

<p>test:
  pusher_app_id: "5112"
  pusher_key: "ad69caf9a44dcac1fb28"
  pusher_secret: "83ca7aa160fedaf3b350"
```</p>

<p>Railsアプリ側からは次のように扱います。</p>

<p>```ruby</p>

<h1>config/initializers/pusher.rb</h1>

<h1>一般的には以下の様に使います</h1>

<p>Pusher.app_id = ENV["pusher_app_id"]
Pusher.key    = ENV["pusher_key"]
Pusher.secret = ENV["pusher_secret"]</p>

<h1>こんな風に Figaro.envで使うこともできます</h1>

<p>Figaro.env.pusher_app_id # => "5112"
Figaro.env.pusher_app_id? # => true
```</p>

<h2>Herokuへの設定</h2>

<p>「<strong><a href="https://toolbelt.heroku.com/">Heroku Toolbelt</a></strong>」をインストールして、Herokuのアプリを作成し、
Railsアプリ側をデプロイする段階になったら、以下のコマンドで環境変数に設定を登録します。</p>

<p>```bash</p>

<h1>手動で個別登録</h1>

<p>$ heroku config:set google_analytics_key=UA-35722661-5</p>

<h1>ファイルから一括登録</h1>

<p>$ figaro heroku:set -e production</p>

<h1>使い方の詳細はこちら</h1>

<p>$ figaro help heroku:set
```</p>

<h2>Dokkuへの設定</h2>

<p>Dokkuの設定もほぼ同じです。<code>dokku-cli</code>をインストールして、gitリポジトリを設定したら、herokuとほぼ同じことを実行できます。</p>

<p>```bash</p>

<h1>dokku の git を登録</h1>

<p>$ git remote add dokku dokku@example-dokku-server.com:example-app</p>

<h1>dokku-cli をインストール</h1>

<p>$ gem install dokku-cli</p>

<h1>手動で個別登録</h1>

<p>$ dokku config:set google_analytics_key=UA-35722661-5</p>

<h1>ファイルから一括登録</h1>

<p>$ figaro dokku:set -e production</p>

<h1>使い方の詳細はこちら</h1>

<p>$ figaro help dokku:set
```</p>

<h2>おまけ</h2>

<p>正直 <code>Dokku</code> で使おうと思ったら、すでに拡張してくれている人がいたのでうほーいと思ったら、
Travis CIのRSpecがコケてて散々悩みながら、デバックしてたら夜中の2時でしたww</p>

<p><strong><a href="https://github.com/laserlemon/figaro/pull/227">Support dokku cli by morizyun · Pull Request #227 · laserlemon/figaro</a></strong></p>

<p><code>Pull Request</code> うまくいくといいなぁ</p>

<p><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- square -->
<ins class="adsbygoogle" style="display:inline-block;width:336px;height:280px" data-ad-client="ca-pub-4186413323075068" data-ad-slot="5059873392"></ins>
<script>
    (adsbygoogle = window.adsbygoogle || []).push({});
</script></p>

<h2>Special Thanks</h2>

<ul>
<li><strong><a href="http://xoyip.hatenablog.com/entry/2014/04/09/214405">Rails4.1のsecrets.ymlはfigaroと違うの？ - PILOG</a></strong></li>
</ul>

]]></content>
  </entry>
  
</feed>
