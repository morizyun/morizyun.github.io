<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: cookie | 酒と泪とRubyとRailsと]]></title>
  <link href="http://morizyun.github.io/blog/categories/cookie/atom.xml" rel="self"/>
  <link href="http://morizyun.github.io/"/>
  <updated>2016-02-08T22:11:29+09:00</updated>
  <id>http://morizyun.github.io/</id>
  <author>
    <name><![CDATA[morizyun]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[HTTP通信 - Cookieについて]]></title>
    <link href="http://morizyun.github.io/blog/http-access-cookie-browser/"/>
    <updated>2014-07-26T18:40:00+09:00</updated>
    <id>http://morizyun.github.io/blog/http-access-cookie-browser</id>
    <content type="html"><![CDATA[<p><a href="http://www.amazon.co.jp/gp/product/4774142042/ref=as_li_qf_sp_asin_il?ie=UTF8&camp=247&creative=1211&creativeASIN=4774142042&linkCode=as2&tag=morizyun00-22"><img border="0" src="http://ws.assoc-amazon.jp/widgets/q?_encoding=UTF8&ASIN=4774142042&Format=_SL160_&ID=AsinImage&MarketPlace=JP&ServiceVersion=20070822&WS=1&tag=morizyun00-22" width="150" style="float: left; margin: 0 20px 20px 0;" ></a><img src="http://www.assoc-amazon.jp/e/ir?t=morizyun00-22&l=as2&o=9&a=4774142042" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" />HTTP通信でのCookieの意味について調べたのでそのメモです。今回のCookieの情報はWikipediaの説明が丁寧でわかりやすかったです。CGMコンテンツもあそこまで成熟すると教科書レベルになるんだと感心しました！</p>

<!-- more -->


<br style="clear:both;"/>


<p><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- square -->
<ins class="adsbygoogle" style="display:inline-block;width:336px;height:280px" data-ad-client="ca-pub-4186413323075068" data-ad-slot="5059873392"></ins>
<script>
    (adsbygoogle = window.adsbygoogle || []).push({});
</script></p>

<h2>Cookieの概要</h2>

<pre>
(1) HTTPにおけるWebサイト、ブラウザ間で状態を管理するプロトコル
(2) Webブラウザに保持された情報のこと
</pre>


<p>Webサイトの提供者が、Webブラウザを通じて訪問者のコンピュータ側にデータの書き込みを行う仕組み。
利用者の識別やセッションの管理のために用いる。</p>

<p>ちなみにセッションとは、一連のインタラクティブな操作のこと。一定時間のアクセス(30分)や、ログインからログアウトまでの一連の処理を指す。</p>

<h2>Cookie管理の流れ</h2>

<pre>
(1) WebサーバがWebブラウザにその状態を区別する識別子をHTTPヘッダに含める形で渡す
(2) ブラウザは次にサーバにアクセスする際に、与えられた識別子をHTTPヘッダに含めて送信する
(3) サーバはその識別子によって通信の内容をカスタマイズしてブラウザに送信する
(4) (2) - (3)を繰り返す。必要に応じて新しい識別子を追加する
</pre>


<h2>Cookieにおける注意点</h2>

<pre>
(1) クライアント側のスクリプトによってクッキーを操作することができる
(2) ブラウザにクッキーの送受信停止や、クッキー内容の確認、クッキーの消去などの機能がある
</pre>


<h2>Cookieに関連したセキュリティ、プライバシー問題</h2>

<h3>セッションハイジャック</h3>

<p>クッキーでセッション管理を行う場合、第三者がセッションIDを獲得した場合、「<strong>なりすまし</strong>」を行う事ができる。この対策としては、HTTPS(SSL)通信を行い、CookieにSecure属性をつけることである。</p>

<p><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- square -->
<ins class="adsbygoogle" style="display:inline-block;width:336px;height:280px" data-ad-client="ca-pub-4186413323075068" data-ad-slot="5059873392"></ins>
<script>
    (adsbygoogle = window.adsbygoogle || []).push({});
</script></p>

<h2>Special Thanks</h2>

<p><a href="http://ja.wikipedia.org/wiki/HTTP_cookie">HTTP cookie - Wikipedia</a></p>

<p><a href="http://www.websec-room.com/2013/03/09/497">セッション管理の不備と対策 | Webセキュリティの小部屋</a></p>
]]></content>
  </entry>
  
</feed>
