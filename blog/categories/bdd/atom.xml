<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: BDD | 酒と泪とRubyとRailsと]]></title>
  <link href="http://morizyun.github.io/blog/categories/bdd/atom.xml" rel="self"/>
  <link href="http://morizyun.github.io/"/>
  <updated>2016-01-24T19:40:13+09:00</updated>
  <id>http://morizyun.github.io/</id>
  <author>
    <name><![CDATA[morizyun]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[RSpec3 初心者向けの資料まとめ直しました！[Ruby]]]></title>
    <link href="http://morizyun.github.io/blog/rspec3-beginner-bdd-tdd-test-first/"/>
    <updated>2015-01-11T08:30:00+09:00</updated>
    <id>http://morizyun.github.io/blog/rspec3-beginner-bdd-tdd-test-first</id>
    <content type="html"><![CDATA[<p><a href="http://www.amazon.co.jp/gp/product/4798121932/ref=as_li_qf_sp_asin_il?ie=UTF8&camp=247&creative=1211&creativeASIN=4798121932&linkCode=as2&tag=morizyun00-22"><img border="0" src="http://ws.assoc-amazon.jp/widgets/q?_encoding=UTF8&ASIN=4798121932&Format=_SL160_&ID=AsinImage&MarketPlace=JP&ServiceVersion=20070822&WS=1&tag=morizyun00-22" width="150" style="float: left; margin: 0 20px 20px 0;" ></a><img src="http://www.assoc-amazon.jp/e/ir?t=morizyun00-22&l=as2&o=9&a=4798121932" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" />
TDDでRSpecを書くにあたって、どれだけ効率的に効果的なテストが書けるかは、品質を高めていく上ですごく大切なことだと思います。
今回、RSpec3用のドキュメントやWebサイトを色々読みなおして、最近までに特に良かった記事などを中心にまとめ直しました。</p>

<p>RSpec3に入門しようとしている初心者さんや、普段使っているけどもう一度RSpec3の知識を整理したい人にオススメのマトメです！</p>

<!-- more -->


<br style="clear:both;"/>


<p><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- square -->
<ins class="adsbygoogle" style="display:inline-block;width:336px;height:280px" data-ad-client="ca-pub-4186413323075068" data-ad-slot="5059873392"></ins>
<script>
    (adsbygoogle = window.adsbygoogle || []).push({});
</script></p>

<h2>TDD/BDDとは？</h2>

<p><strong><a href="http://www.atmarkit.co.jp/ait/articles/1404/30/news022.html">TDD/BDDにおける「振る舞い」の意味するところとは何なのか</a></strong></p>

<p>RSpecに限定された記事ではないですが、BDDの根本的な概念の「振る舞い」についてまとめられた記事です。
これを知っておくことで、ここから先の話がかなりスムーズに理解できるようになると思います。</p>

<h2>まずテスト書いてからコード書くシンプルなチュートリアル</h2>

<p><strong><a href="http://qiita.com/luckypool/items/e3662170033347510c3c">はじめてのRSpec - まずテスト書いてからコード書くシンプルなチュートリアル</a></strong></p>

<p>RSpecを初めて書く時のチュートリアル的な記事ですが、すごくわかりやすいのでオススメです！</p>

<h2>RSpecの入門とその一歩先へ ～RSpec 3バージョン～</h2>

<ul>
<li><strong><a href="http://qiita.com/jnchito/items/42193d066bd61c740612">使えるRSpec入門・その1「RSpecの基本的な構文や便利な機能を理解する」</a></strong></li>
<li><strong><a href="http://qiita.com/jnchito/items/2e79a1abe7cd8214caa5">使えるRSpec入門・その2「使用頻度の高いマッチャを使いこなす」</a></strong></li>
<li><strong><a href="http://qiita.com/jnchito/items/640f17e124ab263a54dd">使えるRSpec入門・その3「ゼロからわかるモック（mock）を使ったテストの書き方」</a></strong></li>
</ul>


<p><strong><a href="https://leanpub.com/everydayrailsrspec-jp">Everyday Rails - RSpecによるRailsテスト入門</a></strong>』の訳者の一人である
<strong><a href="https://twitter.com/jnchito">@jnchito</a></strong>さんがQiitaに投稿されている記事。RSpecの入門記事ですが、同時に実践的な内容なので、すぐに業務で使えそうな知識も満載です！</p>

<h2>TDDのプロセスを重視したRSpecの入門記事</h2>

<ul>
<li><strong><a href="http://qiita.com/jnchito/items/624f6d5023c279046a1c">Rpecの入門とその一歩先へ ～RSpec 3バージョン～</a></strong></li>
<li><strong><a href="http://qiita.com/jnchito/items/47f539ddca7dbc01acef">RSpec の入門とその一歩先へ、第2イテレーション ～RSpec 3バージョン～</a></strong></li>
<li><strong><a href="http://qiita.com/jnchito/items/b1215a5d548cac4c7de6">RSpec の入門とその一歩先へ、第3イテレーション ～RSpec 3バージョン～</a></strong></li>
</ul>


<p>こちらも<strong><a href="https://twitter.com/jnchito">@jnchito</a></strong>さんの記事です。RSpec3を使って、TDDのプロセスを忠実に実践していく際のプロセスがよく分かる記事です。どちらかというと先輩と一緒にRSpecのTDDを実践しながら色々教えてもらっているかのような記事です＾＾</p>

<h2>Better Spec</h2>

<p><strong><a href="http://betterspecs.org/jp/">Better Spec</a></strong></p>

<p>Better Specsは開発者達の経験を、体系化したドキュメントです。中級者の人が、さらにRSpecでのテストを書けるようになりたいときにぜひ読んでほしい資料です！</p>

<h2>RSpec 2.x => RSpec 3.xへの移行</h2>

<p><strong><a href="http://qiita.com/awakia/items/d880250adc8cdbe7a32f">RSpecのshouldはもう古い！新しい記法expectを使おう！</a></strong><br/>
RSpec 2.x => RSpec 3.xに移行する過程20回くらい読ませて頂いた記事です。わかりやすい！</p>

<p><strong><a href="http://qiita.com/jnchito/items/a4a51852c2c678b57868">Ruby - 今日から使える！RSpec 3で追加された8つの新機能 - Qiita</a></strong><br/>
RSpec 3で導入された新機能について、かなり丁寧に例を含めて書いてくれている記事です。<strong><a href="https://twitter.com/jnchito">@jnchito</a></strong>さん凄すぎる。</p>

<p><strong><a href="http://nilp.hatenablog.com/entry/2014/05/28/003335">RSpec 3の重要な変更</a></strong><br/>
こちらは<strong><a href="https://twitter.com/hanachin_">hanachin_</a></strong>さんの記事ですが、RSpec 3の重要な変更点を中心にかなり詳細に
まとめられています。もしくわしくRSpec 3の機能を知りたい場合には是非読んでみてください。</p>

<h2>モック・スタブについて</h2>

<p><strong><a href="http://morizyun.github.io/blog/rspec-model-controller-ruby-rails/">RSpec でテストを作るのに役立つ「モック/スタブ」のシンプルな説明</a></strong><br/></p>

<p>メソッド同士の依存関係を疎に保つのに役に立つのがモックやスタブといった機能です。モックやスタブの概念的な部分を簡単に知りたいときには、是非読んでみてください。</p>

<h2>FactoryGirl</h2>

<p><strong><a href="http://o.inchiki.jp/obbr/159">RailsでFactoryGirlを使ってみるメモ</a></strong><br/>
体系的にFactoryGirlの使い方のまとめで、初心者の人のとっかかりからちょっと凝った使い方まで網羅されています。素晴らしい！</p>

<p><strong><a href="http://qiita.com/muran001/items/436fd07eba1db18ed622">RSpecにおけるFactoryGirlの使い方まとめ - Qiita</a></strong><br/>
とりあえずこれだけ読んでおけば大抵のことは事足りそうなほど、完結かつ充実した記事。素晴らしすぎる！</p>

<p><strong><a href="http://qiita.com/torshinor/items/383691344ec4a2233fe5">Rails - Factory Girl 3.x メモ - Qiita</a></strong><br/>
FactoryGirlの応用的な使い方を中心に説明。初心者むけというよりはFactoryGirlを使っていく中でより、使いこなしたいと思う人にオススメのドキュメント。</p>

<h2>2014年にまとめた記事</h2>

<p><strong><a href="/blog/rspec-beginner-bdd-tdd-test-first/">RSpec 初心者向けの資料まとめ</a></strong></p>

<p>2014年の4-5月頃にまとめた記事です。こちらはどちらかというとRSpec全般の良記事を中心にまとめています。
あの頃と比べてるとQiitaの存在感が圧倒的に高まっているなぁと実感中です。もしよければこちらもぜひご覧になってみてください。</p>

<h2>Everyday Rails - RSpecによるRailsテスト入門</h2>

<p><a href="https://leanpub.com/everydayrailsrspec-jp" title="large by morizyun, on Flickr"><img src="https://farm8.staticflickr.com/7565/16219331906_8d9010083f_o.png" width="150" style="float: left; margin: 0 20px 20px 0;" alt="large"></a>
もしも体系的な知識を獲得したいなら、やはりこの『<a href="https://leanpub.com/everydayrailsrspec-jp">Everyday Rails - RSpecによるRailsテスト入門</a>』
一択だと思います。この本の中で特に印象に残った部分を『<strong><a href="/blog/everyday-rails-beginner-rspec-book-review">Everyday Rails RSpecによるRailsテスト入門でRSpec3に再入門！</a></strong>』がオススメす。
良かったら是非読んでみてください＾＾</p>

<br style="clear:both;"/>


<p><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- square -->
<ins class="adsbygoogle" style="display:inline-block;width:336px;height:280px" data-ad-client="ca-pub-4186413323075068" data-ad-slot="5059873392"></ins>
<script>
    (adsbygoogle = window.adsbygoogle || []).push({});
</script></p>

<h2>変更来歴</h2>

<p>(2015-01-11 8:30) 新規作成<br/></p>
]]></content>
  </entry>
  
</feed>
