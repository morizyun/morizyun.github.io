<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: CentOS | 酒と泪とRubyとRailsと]]></title>
  <link href="http://morizyun.github.io/blog/categories/centos/atom.xml" rel="self"/>
  <link href="http://morizyun.github.io/"/>
  <updated>2016-01-24T20:02:49+09:00</updated>
  <id>http://morizyun.github.io/</id>
  <author>
    <name><![CDATA[morizyun]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[さくらVPS&AWS&VULTR EC2/CentOS 6.5へのRailsサーバ構築手順！[Ruby]]]></title>
    <link href="http://morizyun.github.io/blog/centos63-sakura-vps-rails-setup-guide/"/>
    <updated>2015-03-16T10:10:00+09:00</updated>
    <id>http://morizyun.github.io/blog/centos63-sakura-vps-rails-setup-guide</id>
    <content type="html"><![CDATA[<p><a href="http://www.amazon.co.jp/gp/product/4798038164/ref=as_li_qf_sp_asin_il?ie=UTF8&camp=247&creative=1211&creativeASIN=4798038164&linkCode=as2&tag=morizyun00-22"><img border="0" src="http://ws.assoc-amazon.jp/widgets/q?_encoding=UTF8&ASIN=4798038164&Format=_SL160_&ID=AsinImage&MarketPlace=JP&ServiceVersion=20070822&WS=1&tag=morizyun00-22" width="150" style="float: left; margin: 0 20px 20px 0;" ></a><img src="http://www.assoc-amazon.jp/e/ir?t=morizyun00-22&l=as2&o=9&a=4798038164" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" />
さくらVPS/AWS EC2/VULTRのCentOS 6.5にRailsサーバを構築するための手順をまとめました。
Railsの簡単なサーバーの構築から、各種ミドルウェアの導入まで少しずつ充実してきたかなと思います。
用途に応じて、ぜひご活用ください。また、もしこういうミドルウェアの導入方法がわからないといった
事があれば、お気軽にコメントをください！</p>

<!-- more -->


<br style="clear:both;"/>


<p><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- square -->
<ins class="adsbygoogle" style="display:inline-block;width:336px;height:280px" data-ad-client="ca-pub-4186413323075068" data-ad-slot="5059873392"></ins>
<script>
    (adsbygoogle = window.adsbygoogle || []).push({});
</script></p>

<h2>最近のサーバのお気に入り</h2>

<p>最近VULTRのサーバが気に入っています。VULTRのメリットはこちら</p>

<pre>
* SSDベースのサーバを時間単位の課金体制(初回費用や解約月のタイミングなど気にしなくていい)
* メモリ768MBで$5/月
* 性能もEC2等と比べてもいい
</pre>


<p>ということでもし試して見たい方は拙著『<strong><a href="/blog/VULTR-server-ssd-vps-easy-to-use/">VULTR 日本リージョン/MEM 768MB/SSD 15GB VPS $5/月を借りてみた！</a></strong>』を読んでみてください＾＾</p>

<h2>(A) AnsibleやVagrantを使ったサーバ構築</h2>

<p>Ansibleはすごく簡単にサーバ構築手順をコード化できるツールです。
めちゃくちゃ便利なので、ぜひ使って見てください。</p>

<h3>(A-1) <strong><a href="/blog/ansible-rails-rvm-nginx-mysql-postgresql-centos">AWS/VULTR + AnsibleでベーシックなRailsサーバを簡単構築</a></strong></h3>

<h3>(A-2) <strong><a href="/blog/vagrant-ansible-rails-rvm-nginx-mysql/">Vagrant/AWS + AnsibleでCentOS/Nginx/MySQL/RVM/Ruby2.1.2環境を構築</a></strong></h3>

<h2>(B)これだけは導入したい</h2>

<h3>(B-1) <a href="/blog/sakura-vps-centos63-ssh-setup">初期状態から鍵認証SSHでの接続まで</a></h3>

<p>初期状態からSSHで接続できるようにするまでです。</p>

<h3>(B-2) <a href="/blog/iptable-sakura-vps-centos63">iptableの設定</a></h3>

<p>iptables(通信ポートを制限できるファイヤーウオール用のパッケージ)の設定です。</p>

<h3>(B-3) <a href="/blog/logwatch-sakura-vps-centos63">logwatchの導入</a></h3>

<p>logwatchはログを整形してメールで1日一回送ってくれるパッケージの設定です。</p>

<h3>(B-4) <a href="/blog/stop-noneed-service-sakura-vps-centos63">ipv6の停止/日本語化/denyhostsの導入</a></h3>

<p>ipv6の停止/日本語化/denyhosts導入についての手順です。</p>

<h3>(B-5) <a href="/blog/nginx-setup-sakura-vps-centos">Nginxの導入</a></h3>

<p>Webサーバ Nginxの導入手順です。</p>

<h3>(B-6) <a href="/blog/passenger-install-apache-ruby-rails">Passengerの導入</a></h3>

<p>ApacheでRailsを使えるようにするためのパッケージの導入手順です。</p>

<h3>(B-7) <a href="/blog/postgresql-mac-centos-rails/">PostgreSQL 9.3の導入</a></h3>

<p>MySQLと並ぶオープンソースのRDBMであるPostgreSQLの導入手順です。海外のRailsプロジェクトではMySQLよりもPostgreSQLのほうが人気があるっぽいです。Herokuを使う方にはおすすめです。</p>

<h3>(B-8) <a href="/blog/rvm-install-centos-ruby-rails">Ruby 2.0.0/RVMの導入</a></h3>

<p>RVM(Ruby Version Management)とRuby 1.9.3の導入手順です。</p>

<h2>(C) 必要に応じて</h2>

<h3>(C-1) <a href="/blog/mysql-setup-sakura-vps-centos63">MySQL 5.5の導入</a></h3>

<p>データベース MySQLの導入手順です。</p>

<h3>(C-2) <a href="/blog/postfix-centos-sakura-vps-aws/">メールサーバ Postfix/Dovecotの導入</a></h3>

<p>メールサーバのPostfix/Devocotの導入手順です。これは、Railsサーバには直接不要ですが、メールを使ったサービスを作る場合に使えると思います。</p>

<h3>(C-3) <a href="/blog/gem-dalli-memcache/">高性能な分散メモリキャッシュサーバ memcached</a></h3>

<p>データベースへの問い合わせ結果を一時的にキャッシュすることで，データベースへのアクセス回数を減らし，動的なウェブアプリケーションの高速化やスケーラビリティの向上のために利用されているツールです。次のRedisと同じく、高速化の手伝いをしてくれます。</p>

<h3>(C-4) <a href="/blog/redis-mac-centos-rails/">永続化対応のインメモリDB Redisの導入</a></h3>

<p>memcachedライクなKey-Value方式と、永続化対応のインメモリDB『Redis』の導入手順です。こちらも必須のツールではないですが、高速化の際に活用出来ますよ！</p>

<h3>(C-5) <a href="/blog/apache-setup-sakura-vps-centos63">Apacheの導入</a></h3>

<p>Webサーバ Apacheの導入手順です。</p>

<h2>(D) AWS編</h2>

<h3>(D-1) <a href="/blog/elastic-block-store-aws-amazon-strage/">Elastic Block Store(EBS)をAWSのEC2にヒモ付</a></h3>

<p>AWSのElastic Block Store(EBS)の設定手順です。</p>

<h2>(E) Ubuntu編</h2>

<h3>(E-1) <a href="/blog/linux-swap-memory-space/">Ubuntuサーバのスワップ領域の割り当て</a></h3>

<p>Ubuntuでスワップ領域を割り当てるための手順です。題名のCentOSから離れていますが(笑)</p>

<h2>(F)番外編</h2>

<h3>(F-1) <a href="/blog/VULTR-server-ssd-vps-easy-to-use/">VULTR 日本リージョン/MEM 768MB/SSD 15GB VPS $5/月を借りてみた！</a></h3>

<p>日本リージョン/MEM 768MB/SSD 15GBが時間単位で借りれて、月間でもわずか$5。初期費用がいらなかったり、初回デポジット2倍キャンペーンをやっていたりとおすすめです！</p>

<h3>(F-2) <a href="/blog/aws-epel-active-denyhosts/">AWS EC2のAmazon Linux AMIでRailsサーバを立ち上げる際の違い</a></h3>

<p>AmazonのAWSを使ってRailsサーバを立ち上げる際の手順です。基本は(1)-(8)でいけるのですが、若干違いがあったのでその部分のメモです。</p>

<h3>(F-3) <a href="/blog/paas-vps-aws-compare">導入の前に/コストパフォーマンスに優れたRailsサーバの紹介</a></h3>

<p>2012年はRailsサーバの選択肢がより多くなった1年です。そこで個人が使うのにコストパフォーマンスが最適なサービスを幾つかチョイスしてみました！</p>

<h3>(F-4) <a href="/blog/yslow-speed-up-rails-server-centos">Webサイトの速度改善を提案してくれるブラウザアドオン「YSlow」</a></h3>

<p>アプリのレスポンス向上を目指すのに最適なアドオンの紹介です。</p>

<h2>変更来歴</h2>

<p>(13/01/27 22:00) 「(9) AWS EC2のAmazon Linux AMIでRailsサーバを立ち上げる際の違い」を追加<br/>
(13/01/30 16:45) 「(9) メールサーバ Postfix/Dovecotの導入」を追加<br/>
(13/03/01 16:45) memcachedとRedisの導入手順を追加<br/>
(13/03/02 13:15) Postgresの導入手順を追加<br/>
(13/09/24 07:55) Ruby2.0.0対応 &amp; CentOS 6.4対応、記述ミス修正<br/>
(14/04/23 20:00) AWS - CentOS 6.5、Nginx環境の構築手順を追記<br/>
(14/04/29 08:00) Ubuntuサーバのスワップ領域の割り当てを追加<br/>
(14/05/02 08:55) Elastic Block Store(EBS)をAWSのEC2にヒモ付<br/>
(14/08/04 19:25) VULTRの説明や、Ansibleの解説記事を追加<br/>
(2015-03-16 10:10) Ansibleの解説記事を追加<br/></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mac MountainLion/CentOS 6.4へのPostgreSQL 9.2の導入手順]]></title>
    <link href="http://morizyun.github.io/blog/postgresql-mac-centos-rails/"/>
    <updated>2015-01-18T11:30:00+09:00</updated>
    <id>http://morizyun.github.io/blog/postgresql-mac-centos-rails</id>
    <content type="html"><![CDATA[<p><a href="http://www.amazon.co.jp/gp/product/B00B73U7OI/ref=as_li_qf_sp_asin_il?ie=UTF8&camp=247&creative=1211&creativeASIN=B00B73U7OI&linkCode=as2&tag=morizyun00-22"><img border="0" src="http://ws.assoc-amazon.jp/widgets/q?_encoding=UTF8&ASIN=B00B73U7OI&Format=_SL160_&ID=AsinImage&MarketPlace=JP&ServiceVersion=20070822&WS=1&tag=morizyun00-22" width="150" style="float: left; margin: 0 20px 20px 0;" ></a><img src="http://www.assoc-amazon.jp/e/ir?t=morizyun00-22&l=as2&o=9&a=B00B73U7OI" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" />MySQLと並ぶオープンソースのRDBMS、『PostgreSQL』の導入手順です。海外ではHerokuやEngine Yardが標準のDBをPostgreSQLにしていたりと人気が高いので、使えるようになっておいて、損はないと思います！</p>

<!-- more -->


<br style="clear:both;"/>


<p><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- square -->
<ins class="adsbygoogle" style="display:inline-block;width:336px;height:280px" data-ad-client="ca-pub-4186413323075068" data-ad-slot="5059873392"></ins>
<script>
    (adsbygoogle = window.adsbygoogle || []).push({});
</script></p>

<h2>CentOSへのインストール</h2>

<p>まずは本家の<a href="http://yum.postgresql.org/repopackages.php">PostgreSQL RPM Repository (with Yum)</a>で自分の環境にマッチした<code>rpm</code>を探して以下のコマンドを実行。(URLの部分は自分の環境のものに書き換えて下さい)</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>wget -P /tmp http://yum.postgresql.org/9.2/redhat/rhel-6-x86_64/pgdg-centos92-9.2-6.noarch.rpm
</span><span class='line'>sudo rpm -ivh /tmp/pgdg-centos92-9.2-6.noarch.rpm
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>続いて、<code>postgres9.2</code>をインストール。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo yum install -y postgresql92-server postgresql92-devel postgresql92-contrib
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>DBを初期化。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo /etc/rc.d/init.d/postgresql-9.2 initdb
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Postgresを起動。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo /etc/rc.d/init.d/postgresql-9.2 start
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>さらにサーバの起動時にPostgresが起動するように設定します。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo chkconfig postgresql-9.2 on
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>自動起動の設定が成功したか確認。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>chkconfig --list | grep postgresql-9.2&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;blockquote&gt;&lt;p&gt;postgresql-9.2  0:off   1:off   2:on    3:on    4:on    5:on    6:off <span class="c">#&amp;lt;= となっていれば成功</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p></blockquote>

<h2>Postgresqlの設定修正</h2>

<p>9.2の初期設定だと、unixのユーザー名がPostgreSQLのユーザー名と一致していないといけないようになっているそうです。
その修正方法です。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo vi /var/lib/pgsql/9.2/data/pg_hba.conf
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>上のファイルの中の以下の部分を修正。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">local   </span>all             postgres                                peer&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;↓ <span class="nv">peer</span> <span class="o">=</span>&gt; md5に修正&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;local   all             postgres                                md5
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h2>CentOSへのpgのインストール</h2>

<p>CentOSへpgをインストールする場合は、<code>vim ~/.bashrc</code>で事前に以下を追加。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">export </span><span class="nv">PATH</span><span class="o">=</span><span class="k">${</span><span class="nv">PATH</span><span class="k">}</span>:/usr/pgsql-9.2/bin
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>続いて、<code>source ~/.bashrc</code>を実行して設定を反映。</p>

<p><code>pgsql-9.2</code>のところはバージョンによって適宜変更して下さい。</p>

<p>これが完了したら<code>gem install pg</code>でインストールできます。</p>

<h2>CentOSでのユーザー作成コマンド</h2>

<p>インストールが完了すると、postgresユーザーが追加されます。このユーザーになってから、createuserコマンドを実行するとユーザーが作成されます。
<code>[ユーザー名]</code>には任意のユーザー名を追加してください。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo su -
</span><span class='line'>su - postgres
</span><span class='line'>createuser -s <span class="o">[</span>ユーザー名<span class="o">]</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h2>Macへのインストール(Homebrew)</h2>

<p>Macの『<a href="http://mxcl.github.com/homebrew/">Homebrew</a>』をつかってのインストール手順です。まずは<code>postgres</code>をインストール。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>brew install postgresql
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>続いて、DBを初期化する前に既存のposgreSQL環境を移動。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>mv /usr/local/var/postgres /usr/local/var/postgres.org
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>でもってDB初期化。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>initdb /usr/local/var/postgres -E utf8&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;blockquote&gt;&lt;p&gt;The files belonging to this database system will be owned by user <span class="s2">&quot;xxxx&quot;</span>.
</span><span class='line'>This user must also own the server process.&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;The database cluster will be initialized with locale <span class="s2">&quot;ja_JP.UTF-8&quot;</span>.
</span><span class='line'>initdb: could not find suitable text search configuration <span class="k">for </span>locale <span class="s2">&quot;ja_JP.UTF-8&quot;</span>
</span><span class='line'>The default text search configuration will be <span class="nb">set </span>to <span class="s2">&quot;simple&quot;</span>.&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;fixing permissions on existing directory /usr/local/var/postgres ... ok
</span><span class='line'>creating subdirectories ... ok
</span><span class='line'>selecting default max_connections ... 20
</span><span class='line'>selecting default shared_buffers ... 1600kB
</span><span class='line'>creating configuration files ... ok
</span><span class='line'>creating template1 database in /usr/local/var/postgres/base/1 ... ok
</span><span class='line'>initializing pg_authid ... ok
</span><span class='line'>initializing dependencies ... ok
</span><span class='line'>creating system views ... ok
</span><span class='line'>loading system objects<span class="err">&#39;</span> descriptions ... ok
</span><span class='line'>creating collations ... ok
</span><span class='line'>creating conversions ... ok
</span><span class='line'>creating dictionaries ... ok
</span><span class='line'>setting privileges on built-in objects ... ok
</span><span class='line'>creating information schema ... ok
</span><span class='line'>loading PL/pgSQL server-side language ... ok
</span><span class='line'>vacuuming database template1 ... ok
</span><span class='line'>copying template1 to template0 ... ok
</span><span class='line'>copying template1 to postgres ... ok&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;WARNING: enabling <span class="s2">&quot;trust&quot;</span> authentication <span class="k">for </span><span class="nb">local </span>connections
</span><span class='line'>You can change this by editing pg_hba.conf or using the option -A, or
</span><span class='line'>--auth-local and --auth-host, the next <span class="nb">time </span>you run initdb.&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;Success. You can now start the database server using:&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;pre&gt;&lt;code&gt;postgres -D /usr/local/var/postgres
</span><span class='line'>&lt;/code&gt;&lt;/pre&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;or&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;pre&gt;&lt;code&gt;pg_ctl -D /usr/local/var/postgres -l logfile start
</span><span class='line'>&lt;/code&gt;&lt;/pre&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;
</span></code></pre></td></tr></table></div></figure></notextile></div></p></blockquote>

<p>Macにプリインストール(?)されているpostgresを見に行かないように設定を修正。(詳細は<strong><a href="http://d.hatena.ne.jp/hiro_nemu/20120302/1330679054">こちら</a></strong>)</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>wget http://nextmarvel.net/blog/downloads/fixBrewLionPostgres.sh
</span><span class='line'>sh fixBrewLionPostgres.sh
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo mkdir /var/pgsql_socket
</span><span class='line'>sudo chmod 777 /var/pgsql_socket
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>PostgreSQLの起動。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>pg_ctl -D /usr/local/var/postgres -l /usr/local/var/postgres/server.log start
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>PostgreSQLの動作確認。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>psql -l&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;pre&gt;&lt;code&gt;                          List of databases
</span><span class='line'>&lt;/code&gt;&lt;/pre&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;   Name    | Owner | Encoding |   Collate   |    Ctype    | Access privileges
</span><span class='line'>-----------+-------+----------+-------------+-------------+-------------------
</span><span class='line'> postgres  | komji | UTF8     | ja_JP.UTF-8 | ja_JP.UTF-8 |
</span><span class='line'> template0 | komji | UTF8     | ja_JP.UTF-8 | ja_JP.UTF-8 | <span class="o">=</span>c/komji         +&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;pre&gt;&lt;code&gt;       |       |          |             |             | <span class="nv">komji</span><span class="o">=</span>CTc/komji
</span><span class='line'>&lt;/code&gt;&lt;/pre&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt; template1 | komji | UTF8     | ja_JP.UTF-8 | ja_JP.UTF-8 | <span class="o">=</span>c/komji         +&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;pre&gt;&lt;code&gt;       |       |          |             |             | <span class="nv">komji</span><span class="o">=</span>CTc/komji
</span><span class='line'>&lt;/code&gt;&lt;/pre&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>となっていれば成功。もしエラーが発生するようなら、対策を下の方のおまけに書いたのでやってみて下さい。</p>

<p>次に、PostgreSQLを自動起動するように設定。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>ln -sfv /usr/local/opt/postgresql/*.plist ~/Library/LaunchAgents
</span><span class='line'>launchctl load ~/Library/LaunchAgents/homebrew.mxcl.postgresql.plist
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h2>MacでのGem pgのインストール</h2>

<p>もし既に<code>pg</code>をインストール済なら一度削除(<code>gem uninstall pg</code>)して下さい。</p>

<p>ではいよいよインストールですが、<code>gem install pg</code>ではNGらしいです。詳しくは以下のコマンドを実行。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>brew info postgresql&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;blockquote&gt;&lt;p&gt;If you want to install the postgres gem, including ARCHFLAGS is recommended:
</span><span class='line'>env <span class="nv">ARCHFLAGS</span><span class="o">=</span><span class="s2">&quot;-arch x86_64&quot;</span> gem install pg
</span></code></pre></td></tr></table></div></figure></notextile></div></p></blockquote>

<p>ということで以下のコマンドを実行して<code>pg</code>をインストール。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>env <span class="nv">ARCHFLAGS</span><span class="o">=</span><span class="s2">&quot;-arch x86_64&quot;</span> gem install pg
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h2>コンソールからのPostgreSQLの操作</h2>

<p>コマンドラインからのpostgresへの操作です。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;ユーザーの作成<span class="o">(</span>DBの作成権限のあるユーザー<span class="o">)</span> パスワード省略&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;createuser -s <span class="o">[</span>ユーザー名<span class="o">]</span>&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;ユーザーの作成<span class="o">(</span>DBの作成権限のあるユーザー<span class="o">)</span> パスワード付き&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;createuser -s <span class="o">[</span>ユーザー名<span class="o">]</span> -P
</span><span class='line'>新しいロールのためのパスワード: &amp;lt;<span class="o">=</span> パスワード入力
</span><span class='line'>もう一度入力してください： &amp;lt;<span class="o">=</span> パスワード入力&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;ユーザーの削除&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;dropuser <span class="o">[</span>ユーザー名<span class="o">]</span>&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;データベースの作成<span class="o">(</span>superuserではない<span class="o">)</span>&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;createdb <span class="o">[</span>データベース名<span class="o">]</span> -O <span class="o">[</span>ユーザー名<span class="o">]</span>&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;データベースの作成<span class="o">(</span>superuser<span class="o">)</span>&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;createdb <span class="o">[</span>データベース名<span class="o">]</span> -O <span class="o">[</span>ユーザー名<span class="o">]</span> -s&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;データベースの削除&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;dropdb <span class="o">[</span>データベース名<span class="o">]</span>&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;データベース一覧の表示&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;psql -l
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>PostgreSQLのコマンドラインツール<code>psql</code>の主要コマンド一覧です。<br/>MySQLのmysqlに近いツールのようです。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;PostgreSQLの再起動&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;pg_ctl -D /usr/local/var/postgres -l /usr/local/var/postgres/server.log restart&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;psql の起動&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;psql <span class="o">[</span>データベース名<span class="o">]</span>&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;psql の終了&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;<span class="se">\q</span>&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;psqlで使えるコマンド一覧&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;<span class="se">\?</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- square -->
<ins class="adsbygoogle" style="display:inline-block;width:336px;height:280px" data-ad-client="ca-pub-4186413323075068" data-ad-slot="5059873392"></ins>
<script>
    (adsbygoogle = window.adsbygoogle || []).push({});
</script></p>

<h2>おまけ：[エラー] connections on Unix domain socket "/var/pgsql_socket/.s.PGSQL.5432"? の対策</h2>

<p>次のようなエラーメッセージが出た場合の対策です。</p>

<blockquote>
psql: could not connect to server: No such file or directory
Is the server running locally and accepting
connections on Unix domain socket "/var/pgsql_socket/.s.PGSQL.5432"?
</blockquote>


<h3>(1) プリインストールのPostgreSQLとバッティングしている場合</h3>

<p>対策用のシェルスクリプトを実行。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;シェルスクリプトの取得&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;curl -o fixBrewLionPostgresql.sh http://nextmarvel.net/blog/downloads/fixBrewLionPostgres.sh&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;シェルスクリプトの実行権限を追加&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;chmod a+x fixBrewLionPostgresql.sh&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;シェルスクリプトの実行&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;./fixBrewLionPostgresql.sh
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>これで<code>psql -l</code>でエラーが発生しなくなれば成功です。</p>

<h3>(2) 過去にPostgreSQLをインストールしたことがある場合</h3>

<p>以下のコマンドを実行してフォルダを初期化。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;フォルダの削除&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;rm -rf /usr/local/var/postgres&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;初期化&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;initdb /usr/local/var/postgres
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h2>Special Thanks</h2>

<p><a href="http://mayoiga-shironeko.hatenablog.com/entry/2012/10/03/005753">CentOS 6.3にPostgreSQL9.2をインストール - 迷い家の白猫 技術部</a></p>

<p><a href="http://y-kit.jp/saba/xp/postgrecmd.htm">PostgreSQLデータベースのコマンド</a></p>

<p><a href="http://kraudio.com.br/instalando-postgresql-no-mac-os-x-10-8/">Instalando PostgreSQL no Mac OS X (10.8)Blog do Kraudio | Blog do Kraudio</a></p>

<p><a href="http://d.hatena.ne.jp/hiro_nemu/20120302/1330679054">MacBook AirにPostgreSQLをbrewでインストールした - ありの日記</a></p>

<p><a href="http://d.hatena.ne.jp/NowTom/20110728/1311834182">Mac+HomeBrew+Postgresql+pg - NowTomの日記</a></p>

<p><a href="http://qa.atmarkit.co.jp/q/2395">PostgreSQLとMySQLはどちらかに明確な優位性がありますか？ - QA@IT</a></p>

<p><a href="http://stackoverflow.com/questions/9234960/gem-install-pg-with-pg-config-works-bundle-fails">postgresql - gem install pg --with-pg-config works, bundle fails - Stack Overflow</a></p>

<p><a href="http://www.postgresql.jp/document/8.4/html/sql-alterrole.html">ALTER ROLE</a></p>

<p><a href="http://web.sfc.keio.ac.jp/~t11240rk/blog/?p=191">Mac(MTLion)にHomebrewでPostgresqlを入れる</a></p>

<p><a href="http://qiita.com/tstomoki/items/0f1a930bd42a8e1fdaac">Homebrewを使ったPostgreSQLのインストール(Mac OS Lion)</a></p>

<p><a href="http://qa.atmarkit.co.jp/q/2604">psqlがPeer authentication failedというエラーで起動できない - QA@IT</a></p>

<h2>変更来歴</h2>

<p>(2013/09/25 05:25) Mac Mountain Lionでのトラブルシューティングを追加<br/>
(2013/09/25 05:50) CentOS 6.4対応<br/>
(2014/09/23 19:30) createuserのパラメータ修正<br/>
(2014/11/02 12:20) CentOSでのユーザー作成の手順を追加<br/>
(2015-01-18 11:30) 記述ミスを修正<br/></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[CentOS/Mac OSXへのRedis導入手順 - memcacheライクなKey-Value方式と、永続化対応のインメモリDB]]></title>
    <link href="http://morizyun.github.io/blog/redis-mac-centos-rails/"/>
    <updated>2014-12-22T20:05:00+09:00</updated>
    <id>http://morizyun.github.io/blog/redis-mac-centos-rails</id>
    <content type="html"><![CDATA[<p><a href="http://www.amazon.co.jp/gp/product/4873115930/ref=as_li_qf_sp_asin_il?ie=UTF8&camp=247&creative=1211&creativeASIN=4873115930&linkCode=as2&tag=morizyun00-22"><img border="0" src="http://ws.assoc-amazon.jp/widgets/q?_encoding=UTF8&ASIN=4873115930&Format=_SL160_&ID=AsinImage&MarketPlace=JP&ServiceVersion=20070822&WS=1&tag=morizyun00-22" width="150" style="float: left; margin: 0 20px 20px 0;" ></a><img src="http://www.assoc-amazon.jp/e/ir?t=morizyun00-22&l=as2&o=9&a=4873115930" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" />memcachedライクなKey-Value方式と、永続化対応のインメモリDB『<strong><a href="http://redis.io/">Redis</a></strong>』をMac OSXや、CentOSに導入する手順です。Redisを効率的に活用して、さらにRailsアプリを高速化しちゃいましょう＾＾</p>

<!-- more -->


<br style="clear:both;"/>


<p><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- square -->
<ins class="adsbygoogle" style="display:inline-block;width:336px;height:280px" data-ad-client="ca-pub-4186413323075068" data-ad-slot="5059873392"></ins>
<script>
    (adsbygoogle = window.adsbygoogle || []).push({});
</script></p>

<h2>CentOS 6.xへのインストール</h2>

<p>まずは、CentOS 6.xにyumをつかってRedisをインストールする前にEPELを追加。追加済の場合はスキップ。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo rpm -ivh http://dl.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo yum --enablerepo<span class="o">=</span>epel -y install redis
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Redisを起動。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo /etc/init.d/redis start
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>次に動作確認してみます。<code>redis-cli</code>でRedisに接続できます。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>redis-cli&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;blockquote&gt;&lt;p&gt;set <span class="s1">&#39;test&#39;</span> 10
</span><span class='line'>OK
</span><span class='line'>get <span class="s1">&#39;test&#39;</span>
</span><span class='line'><span class="s2">&quot;10&quot;</span>
</span><span class='line'><span class="nb">exit</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p></blockquote>

<p>さらにサーバの起動時にRedisが起動するように設定します。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo chkconfig redis on
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>自動起動の設定が成功したか確認。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>chkconfig --list | grep redis&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;blockquote&gt;&lt;p&gt;redis           0:off   1:off   2:on    3:on    4:on    5:on    6:off <span class="c">#&amp;lt;= となっていれば成功</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p></blockquote>

<h2>Macへのインストール(Homebrew)</h2>

<p>Macの『<a href="http://mxcl.github.com/homebrew/">Homebrew</a>』をつかってのインストール手順はこちら。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>brew install redis&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;blockquote&gt;&lt;p&gt;<span class="o">==</span>&gt; Downloading http://redis.googlecode.com/files/redis-2.6.7.tar.gz
</span><span class='line'>Already downloaded: /Library/Caches/Homebrew/redis-2.6.7.tar.gz
</span><span class='line'><span class="o">==</span>&gt; make -C /private/tmp/redis-KHTm/redis-2.6.7/src <span class="nv">CC</span><span class="o">=</span><span class="nv">cc</span>
</span><span class='line'><span class="o">==</span>&gt; Caveats
</span><span class='line'>You should reload redis:&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;pre&gt;&lt;code&gt;launchctl unload ~/Library/LaunchAgents/homebrew.mxcl.redis.plist
</span><span class='line'>launchctl load ~/Library/LaunchAgents/homebrew.mxcl.redis.plist
</span><span class='line'>&lt;/code&gt;&lt;/pre&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;/usr/local/Cellar/redis/2.6.7: 9 files, 744K, built in 2 seconds
</span></code></pre></td></tr></table></div></figure></notextile></div></p></blockquote>

<p>Macの起動時にRedisが自動起動するように設定。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>ln -sfv /usr/local/opt/redis/*.plist ~/Library/LaunchAgents
</span><span class='line'>launchctl load ~/Library/LaunchAgents/homebrew.mxcl.redis.plist
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>redisの接続確認はこちら。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>redis-cli
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- square -->
<ins class="adsbygoogle" style="display:inline-block;width:336px;height:280px" data-ad-client="ca-pub-4186413323075068" data-ad-slot="5059873392"></ins>
<script>
    (adsbygoogle = window.adsbygoogle || []).push({});
</script></p>

<h2>Special Thanks</h2>

<p><a href="http://blog.livedoor.jp/tattyamm/archives/4147335.html">さくらVPS(CentOS6.3)へのredisインストールとchkconfigへの登録 - えんたつの記録</a></p>

<p><a href="http://codenote.net/redis/1610.html">[Mac] Redis を Homebrew でインストールする手順 | CodeNote.net</a></p>

<p><a href="http://blog.scimpr.com/2013/01/21/rails%E3%81%A7redis%E3%82%92%E4%BD%BF%E3%81%86%E4%BE%8B%E3%81%AE%E3%83%A1%E3%83%A2/">RailsでRedisを使う例のメモ | Scimpr Blog</a></p>

<p><a href="http://www.techscore.com/blog/2013/01/09/memcached%E3%81%A8redis%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6/">» memcachedとredisについて TECHSCORE BLOG</a></p>

<h2>変更来歴</h2>

<p>(13/03/01) 新規作成<br/>
(14/01/03) Redisの自動起動のコマンドを修正<br/>
(14/12/22) 基本的な記述を修正<br/></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[さくらVPS/Cent OS 6.4 Nginx導入[Railsサーバへの道]]]></title>
    <link href="http://morizyun.github.io/blog/nginx-setup-sakura-vps-centos/"/>
    <updated>2014-07-24T13:55:00+09:00</updated>
    <id>http://morizyun.github.io/blog/nginx-setup-sakura-vps-centos</id>
    <content type="html"><![CDATA[<p><a href="http://www.amazon.co.jp/gp/product/4048702270/ref=as_li_qf_sp_asin_il?ie=UTF8&camp=247&creative=1211&creativeASIN=4048702270&linkCode=as2&tag=morizyun00-22"><img border="0" src="http://ws.assoc-amazon.jp/widgets/q?_encoding=UTF8&ASIN=4048702270&Format=_SL160_&ID=AsinImage&MarketPlace=JP&ServiceVersion=20070822&WS=1&tag=morizyun00-22" width="150" style="float: left; margin: 0 20px 20px 0;" ></a><img src="http://www.assoc-amazon.jp/e/ir?t=morizyun00-22&l=as2&o=9&a=4048702270" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" />
さくらVPS 2GB SSDのCentOS 6.4をセットアップしてイケてるRailsサーバに仕上げるまでのシリーズです。第5回はNginxの導入です。NginxはApacheと比べると歴史は浅いですがRailsで使うのもかなりメジャーになってきました。もしApacheの方が、好みの方は<strong><a href="/blog/apache-setup-sakura-vps-centos63">さくらVPS/Cent OS 6.4へのApache導入</a></strong>を試してみて下さい！</p>

<p><strong>(07-10 20:30) ELB経由のnginxでクライアントのIPを取得する方法を追記</strong></p>

<!-- more -->


<br style="clear:both;"/>


<p><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- square -->
<ins class="adsbygoogle" style="display:inline-block;width:336px;height:280px" data-ad-client="ca-pub-4186413323075068" data-ad-slot="5059873392"></ins>
<script>
    (adsbygoogle = window.adsbygoogle || []).push({});
</script></p>

<h2>リポジトリの登録</h2>

<p>以下のコマンドを実行して、nginxのリポジトリを登録。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo rpm -ivh http://nginx.org/packages/centos/6/noarch/RPMS/nginx-release-centos-6-0.el6.ngx.noarch.rpm
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>nginxのリポジトリ登録確認。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>yum list nginx --disablerepo<span class="o">=</span>* --enablerepo<span class="o">=</span>nginx
</span><span class='line'>nginx            | 2.9 kB     00:00
</span><span class='line'>nginx/primary_db |  24 kB     00:00
</span><span class='line'>Available Packages
</span><span class='line'>nginx.x86_64 1.4.2-1.el6.ngx nginx
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h2>Nginxのインストール</h2>

<p>次のコマンドを実行してNginxをインストール。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo yum install -y nginx --disablerepo<span class="o">=</span>* --enablerepo<span class="o">=</span>nginx
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h2>Nginxの設定</h2>

<p>Nginxを起動及び、自動起動を設定。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo service nginx start
</span><span class='line'>sudo chkconfig nginx on
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>自動機能の確認。以下のようになっていれば成功。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>chkconfig --list nginx
</span><span class='line'>nginx           0:off   1:off   2:on    3:on    4:on    5:on    6:off
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>実際のRailsへの利用は僕自身の検証が追いついていません。という申し訳ない状況です。完熟トマトというブログの<strong><a href="http://kanjuku-tomato.blogspot.jp/2013/02/centos-63railsnginxrailsunicornpostgres.html">CentOS 6.3にRails実行環境を構築する(Nginx+Rails+Unicorn+PostgreSQL)</a></strong>がとても良くまとまっていてわかりやすいので、是非ご覧ください。改めて検証をやりきったらアップデートします！</p>

<h2>オレオレ証明書でSSLの導入の手順</h2>

<p>オレオレ証明書を使ってSSLをとりあえず導入する手順です。</p>

<p>まずはオレオレ証明を作成。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo su -
</span><span class='line'>mkdir /etc/nginx/ssl
</span><span class='line'><span class="nb">cd</span> /etc/nginx/ssl
</span><span class='line'>openssl genrsa -des3 -out server.key 1024
</span><span class='line'>openssl req -new -key server.key -out server.csr
</span><span class='line'>cp server.key server.key.org
</span><span class='line'>openssl rsa -in server.key.org -out server.key
</span><span class='line'>openssl x509 -req -days 365 -in server.csr -signkey server.key -out server.crt
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>作った証明書を<code>nginx.conf</code>側に反映。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>server <span class="o">{</span>&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;pre&gt;&lt;code&gt;# 以下を443側に追記
</span><span class='line'>listen 443 default ssl;
</span><span class='line'>ssl on;
</span><span class='line'>ssl_certificate /etc/nginx/ssl/server.crt;
</span><span class='line'>ssl_certificate_key /etc/nginx/ssl/server.key;
</span><span class='line'>&lt;/code&gt;&lt;/pre&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;<span class="o">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h2>httpのアクセスをhttpsにリダイレクトさせる</h2>

<p><code>nginx.conf</code>を以下の様に書き換え！</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>server <span class="o">{</span>&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;pre&gt;&lt;code&gt;listen 80;
</span><span class='line'>server_name example.com;
</span><span class='line'><span class="k">return </span>301 https:/<span class="nv">$host$request_uri</span>;
</span><span class='line'>&lt;/code&gt;&lt;/pre&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;<span class="o">}</span>&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;server <span class="o">{</span>
</span><span class='line'>  listen 443 default ssl;
</span><span class='line'>  server_name example.com;
</span><span class='line'>  root /var/rails/example.com;&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;  ssl on;
</span><span class='line'>  ssl_certificate /etc/nginx/ssl/server.crt;
</span><span class='line'>  ssl_certificate_key /etc/nginx/ssl/server.key;
</span><span class='line'>  location / <span class="o">{</span> proxy_pass http://127.0.0.1:5001; <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h2>AWS ELB経由でnginxに繋げる場合にクライアントIPを取得する方法</h2>

<p>AWS ELB経由でnginxに繋げる場合にクライアントIPを取得する方法です。正直言って、かなりハマったので忘備録がてらのメモです！</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>http <span class="o">{</span>
</span><span class='line'>  <span class="c"># 以下のコードをhttp/serverなどの中に追記</span>
</span><span class='line'>  real_ip_header     X-Forwarded-For;
</span><span class='line'>  set_real_ip_from   0.0.0.0/0;
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>IP制限などを行いたいときに超便利です！</p>

<h2>Special Thanks</h2>

<p><a href="http://dogmap.jp/2011/05/10/nginx-ssl/">nginx で ssl 設定をする - dogmap.jp</a></p>

<p><a href="http://d.hatena.ne.jp/yoshi-ken/20120205">CentOS-6へ最新版のnginxを3分でインストールする方法 - Y-Ken Studio - 日々クリエイション</a></p>

<h2>変更来歴</h2>

<p>(13/09/24 07:45) 新規作成<br/>
(14/07-10 20:30) ELB経由のnginxでクライアントのIPを取得する方法を追記<br/>
(14/07/24 13:55) SSLの導入手順を追記<br/></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[WindowsでVagrant&ChefでPHP 5.3/CakePHP2.4.5 開発環境を構築]]></title>
    <link href="http://morizyun.github.io/blog/windows-vagrant-centos-php53-cakephp-phpmyadmin/"/>
    <updated>2014-05-01T21:15:00+09:00</updated>
    <id>http://morizyun.github.io/blog/windows-vagrant-centos-php53-cakephp-phpmyadmin</id>
    <content type="html"><![CDATA[<p><a href="http://www.amazon.co.jp/gp/product/B00BSPH158/ref=as_li_qf_sp_asin_il?ie=UTF8&camp=247&creative=1211&creativeASIN=B00BSPH158&linkCode=as2&tag=morizyun00-22"><img border="0" src="http://ws.assoc-amazon.jp/widgets/q?_encoding=UTF8&ASIN=B00BSPH158&Format=_SL160_&ID=AsinImage&MarketPlace=JP&ServiceVersion=20070822&WS=1&tag=morizyun00-22" width="150" style="float: left; margin: 0 20px 20px 0;" ></a><img src="http://www.assoc-amazon.jp/e/ir?t=morizyun00-22&l=as2&o=9&a=B00BSPH158" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" />WindowsでのPHP開発を教えるようになってきましたが、環境構築でXAMPPの特殊な手順をどうしても覚えたくなかったのでVagrantをWindows対応させました。CentOS 64bit版が動かないパターンに遭遇したので、32bit版のboxを使っています。</p>

<p><strong>(05-01 21:15) Ruby InstallerのRubyコマンドプロンプトの説明を追記</strong><br/></p>

<!-- more -->


<br style="clear:both;"/>


<p><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- square -->
<ins class="adsbygoogle" style="display:inline-block;width:336px;height:280px" data-ad-client="ca-pub-4186413323075068" data-ad-slot="5059873392"></ins>
<script>
    (adsbygoogle = window.adsbygoogle || []).push({});
</script></p>

<h2>VirtualBox</h2>

<p><strong><a href="https://www.virtualbox.org/">VirtualBox 公式サイト</a></strong><br/>
パッケージをDLしてインストール。</p>

<h2>Ruby Installer</h2>

<p><strong><a href="http://rubyinstaller.org/downloads/">Ruby Installer</a></strong><br/>
Rubyの安定版＆最新版をダウンロード。(3/30時点ではRuby 2.0.0-p451)</p>

<p>インストールが完了したら、Windowsのスタートメニュー内に「<strong>Ruby x.x.xフォルダ内にRubyコマンドプロンプトを開く</strong>」というショートカットが増えていると思います。ここをクリックすると、RubyにPATHが通った状態でコマンドプロンプトを実行することができます。</p>

<h2>Development Kit</h2>

<p><strong><a href="http://rubyinstaller.org/downloads/">Ruby Installer</a></strong><br/>
同じくRuby Installerのしたの方にあるDevelopment Kitをダウンロード &amp; インストール。</p>

<h2>Git for Windows</h2>

<p><strong><a href="http://code.google.com/p/msysgit/downloads/list?q=full+installer+official+git">Git for Windows</a></strong><br/>
Gitの最新版をダウンロード。(3/30時点ではGit-1.9.0-preview20140217)</p>

<p>登録時のセレクトメニューは次のようにしてください。</p>

<p><img src="https://farm4.staticflickr.com/3672/13500916373_960d54d35b.jpg" width="500" height="388" alt="スクリーンショット_2014-03-30_7_12_10"></p>

<p><img src="https://farm6.staticflickr.com/5251/13501176094_eb0182fcc7.jpg" width="500" height="385" alt="スクリーンショット_2014-03-30_7_12_23"></p>

<p><img src="https://farm8.staticflickr.com/7153/13501187314_32174ede4a.jpg" width="500" height="388" alt="Windows7_vagrant1__Running_"></p>

<h2>gow</h2>

<p><strong><a href="https://github.com/bmatzelle/gow/downloads">bmatzelle/gow - GitHub</a></strong><br/>
Linuxコマンドが無いと生きていけないのでダウンロードしてインストール。</p>

<h2>Vagrant</h2>

<p><strong><a href="http://www.vagrantup.com/">Vagrant 公式サイト</a></strong><br/>
パッケージをDLしてインストール。</p>

<p>vagrantをインストールしたら、boxでchefを使えるようにするためのプラグインをインストールします。コマンドプロンプトを開いて以下のコマンドを入力。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>vagrant plugin install vagrant-omnibus
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h2>仮想マシンの作成</h2>

<p>自分の好きな場所(例は<code>~/Dropbox/vagrant</code>)に仮想マシン用のフォルダを作成。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>mkdir vagrant
</span><span class='line'><span class="nb">cd </span>vagrant
</span><span class='line'>git clone https://github.com/morizyun/vagrant-centos-cakephp cakephp
</span><span class='line'><span class="nb">cd </span>cakephp
</span><span class='line'>gem install bundler
</span><span class='line'>bundle install
</span><span class='line'>vagrant up
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Network系でエラーが出る場合は、一度Windows側を再起動をしてみてください。</p>

<h2>hostsの書き換え</h2>

<p>1) C:\Windows\System32\drivers\etc\hostsを管理者権限のメモ帳で開く<br/>
2) 次の内容を追記<br/></p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>192.168.33.10 cakephp.dev
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h2>ブラウザでのアクセス</h2>

<p><code>http://cakephp.dev/</code>にブラウザをアクセスすると<code>app/</code>フォルダの中のファイルにアクセスできます。</p>

<p><img src="https://farm4.staticflickr.com/3781/13500764255_4268e31af2.jpg" width="500" height="400" alt="スクリーンショット 2014-03-30 11.18.48"></p>

<p>あとは、<code>vagrant/cakephp/app</code>の中がcakephpのアプリをいじれば、適宜反映されます。</p>

<h2>phpMyAdminへのアクセス</h2>

<p><code>http://cakephp.dev/phpMyAdmin</code>にブラウザをアクセスするとユーザー名とパスワードを聞かれます。ユーザー名は<code>root</code>、パスワードは<code>cakepass</code>と入力すると「<strong><a href="http://ja.wikipedia.org/wiki/PhpMyAdmin">phpMyAdmin</a></strong>」にアクセスできます。</p>

<p><img src="https://farm4.staticflickr.com/3682/13500888443_e6eda4a884.jpg" width="500" height="379" alt="スクリーンショット 2014-03-30 11.20.58"></p>

<h2>Vagrantの基本コマンド</h2>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>vagrant up : vagrantの起動<span class="o">(</span>Vagrantfileがあるフォルダで実行<span class="o">)</span>
</span><span class='line'>vagrant halt : vagrantを終了<span class="o">(</span>Vagrantfileがあるフォルダで実行<span class="o">)</span>
</span><span class='line'>vagrant provision : vagrantに設定を反映<span class="o">(</span>Vagrantfileがあるフォルダで実行<span class="o">)</span>
</span><span class='line'>vagrant ssh : vagrantにログイン
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h2>GitHubのリポジトリ</h2>

<p>このvagrantの詳細はGitHubのリポジトリ『<strong><a href="https://github.com/morizyun/vagrant-centos-cakephp">morizyun/vagrant-centos-cakephp</a></strong>』にあります！</p>

<p><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- square -->
<ins class="adsbygoogle" style="display:inline-block;width:336px;height:280px" data-ad-client="ca-pub-4186413323075068" data-ad-slot="5059873392"></ins>
<script>
    (adsbygoogle = window.adsbygoogle || []).push({});
</script></p>

<h2>お願い</h2>

<p>もし、動かない場合があったらぜひコメント下さい。</p>

<h2>Special Thanks</h2>

<p><strong><a href="http://seo-engineer.info/archives/hosts.html">各OS（Windows,Mac）別hosts設定方法 - Web覚</a></strong></p>

<p><strong><a href="http://www.symmetric.co.jp/blog/archives/533">今すぐVagrantを始めよう | 株式会社シンメトリック公式ブログ |</a></strong></p>

<p><strong><a href="http://acball.hatenablog.com/entry/2013/11/05/205712">【仮想OS】virtualboxで64bitOSが選択できない場合 - エーシーの日記</a></strong><br/>
「This kernel requires an x86-64 CPU ,but only detected an i686 CPU.Unable to boot - please use a kernel appropriate for your CPU.」にはかなりハマった。。。</p>

<h2>変更来歴</h2>

<p>(05-01 21:15) Ruby InstallerのRubyコマンドプロンプトの説明を追記</p>
]]></content>
  </entry>
  
</feed>
