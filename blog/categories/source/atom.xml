<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Source | 酒と泪とRubyとRailsと]]></title>
  <link href="http://morizyun.github.io/blog/categories/source/atom.xml" rel="self"/>
  <link href="http://morizyun.github.io/"/>
  <updated>2016-01-31T22:19:44+09:00</updated>
  <id>http://morizyun.github.io/</id>
  <author>
    <name><![CDATA[morizyun]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[ネストの深い(多重)ループを抜け出す - Rubyのthrow/catch]]></title>
    <link href="http://morizyun.github.io/blog/throw-catch-symbol-ruby/"/>
    <updated>2012-12-02T21:50:00+09:00</updated>
    <id>http://morizyun.github.io/blog/throw-catch-symbol-ruby</id>
    <content type="html"><![CDATA[<p><a href="blog/categories/source/atom.xml" title="by morizyun, on Flickr"><img src="http://farm3.staticflickr.com/2775/4141490387_1beb461cec_m.jpg" width="240" height="160" alt="Where?" style="float: left; margin: 0 20px 20px 0;"></a></p>

<p>Rubyの標準メソッドにthrow/catchはネストの深いループ(多重ループ)を一発で抜けだしたい場合などに使えそうなので、紹介します。</p>

<!-- more -->


<br style="clear:both;"/>


<h2>throw/catchの説明</h2>

<p>次のサンプルソースを使って、throw/catchを説明します。</p>

<p>```ruby
def ween
  puts 'ween'
  throw :symbol
end</p>

<p>catch(:symbol) do
  ween
  puts 'hoge'
end
```</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>コンソール  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>ruby throw.rb&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;blockquote&gt;&lt;p&gt;ween <span class="c"># hoge =&gt; 出力されず</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p></blockquote>

<p>つまり「throw/catch」は「raise/rescue」とほぼ同じ動きをします。</p>

<pre>
<font color="red"># 両者の違い</font>
* throw/catch => symbol
* raise/rescue => Error(例外)
</pre>


<h2>throw/catchを使ったネストの深いループからの脱出</h2>

<p>throw/catchはsymbolのため、通常のネストの深いループから抜け出したい場合などにも使えます。</p>

<p>```ruby
catch(:break_loop) do
  3.times do |i|</p>

<pre><code>3.times do |j|
  puts "i, j = #{i}, #{j}"
  throw :break_loop if i == 2 and j == 1
end
</code></pre>

<p>  end
end</p>

<p>puts "loop out"
```</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>コンソール  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>ruby throw2.rb&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;blockquote&gt;&lt;p&gt;i, <span class="nv">j</span> <span class="o">=</span> 0, 0
</span><span class='line'>i, <span class="nv">j</span> <span class="o">=</span> 0, 1
</span><span class='line'>i, <span class="nv">j</span> <span class="o">=</span> 0, 2
</span><span class='line'>i, <span class="nv">j</span> <span class="o">=</span> 1, 0
</span><span class='line'>i, <span class="nv">j</span> <span class="o">=</span> 1, 1
</span><span class='line'>i, <span class="nv">j</span> <span class="o">=</span> 1, 2
</span><span class='line'>i, <span class="nv">j</span> <span class="o">=</span> 2, 0
</span><span class='line'>i, <span class="nv">j</span> <span class="o">=</span> 2, 1
</span><span class='line'>loop out
</span></code></pre></td></tr></table></div></figure></notextile></div></p></blockquote>
]]></content>
  </entry>
  
</feed>
