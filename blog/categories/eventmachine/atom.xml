<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Eventmachine | 酒と泪とRubyとRailsと]]></title>
  <link href="http://morizyun.github.io/blog/categories/eventmachine/atom.xml" rel="self"/>
  <link href="http://morizyun.github.io/"/>
  <updated>2016-01-30T10:25:16+09:00</updated>
  <id>http://morizyun.github.io/</id>
  <author>
    <name><![CDATA[morizyun]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Rails4 × Heroku × Eventmachine(worker)を爆速でスタートする]]></title>
    <link href="http://morizyun.github.io/blog/rails4-with-eventmachine/"/>
    <updated>2014-01-04T09:05:00+09:00</updated>
    <id>http://morizyun.github.io/blog/rails4-with-eventmachine</id>
    <content type="html"><![CDATA[<p><a href="http://www.amazon.co.jp/gp/product/4774158062/ref=as_li_qf_sp_asin_il?ie=UTF8&camp=247&creative=1211&creativeASIN=4774158062&linkCode=as2&tag=morizyun00-22"><img border="0" src="http://ws.assoc-amazon.jp/widgets/q?_encoding=UTF8&ASIN=4774158062&Format=_SL160_&ID=AsinImage&MarketPlace=JP&ServiceVersion=20070822&WS=1&tag=morizyun00-22" width="150" style="float: left; margin: 0 20px 20px 0;" ></a><img src="http://www.assoc-amazon.jp/e/ir?t=morizyun00-22&l=as2&o=9&a=4774158062" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" />Herokuのworkerプロセスは、crashした場合に自動的に再起動してくれるそうなので、eventmachineを使ったスクリプトを動かすのには最適です。例えば、Twitterを監視したり、イベント・ドリブン、定期的に実施したい処理の場合におすすめです。</p>

<p>また、今回eventmachineのスクリプト単体ではなく、Railsに組み込みました。理由は僕がRailsのフレームワークに慣れきって、Rspecのテスト書いたり、便利なgemを使いやすいからです。多分、生産性の高さと、Railsのオーバヘッドとの兼ね合いだと思います。</p>

<!-- more -->


<br style="clear:both;"/>


<p><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- square -->
<ins class="adsbygoogle" style="display:inline-block;width:336px;height:280px" data-ad-client="ca-pub-4186413323075068" data-ad-slot="5059873392"></ins>
<script>
    (adsbygoogle = window.adsbygoogle || []).push({});
</script></p>

<h2>前置き：プロジェクトを新規作成する場合</h2>

<p>『<strong><a href="/blog/rails4-application-templates-heroku">Rails4 x heroku用のApplication Templateを作ってみた！</a></strong>』のコマンドでプロジェクトを作成するとeventmachineを使うかの質問が出るので、<code>yes</code>と打っていただければ、自動的に以下のコードが入ります。</p>

<p>今回はeventmachineの利用で一番多そうな、『<strong><a href="https://dev.twitter.com/docs/streaming-apis">Twitter Stream API</a></strong>』を例にしたソースコードの導入です。実際の利用では適宜変更してみてください！</p>

<h2>Gemの導入・設定</h2>

<p>Gemfileに以下を追加して、<code>bundle install</code>を実行。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;h1&gt;EventMachine/</span><span class="no">Twitter</span> <span class="no">Stream</span> <span class="no">API</span><span class="o">&lt;</span><span class="sr">/h1&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;gem &#39;eventmachine&#39;</span>
</span><span class='line'><span class="sr">gem &#39;tweetstream&#39;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h2>eventmachineのコード</h2>

<p>メインの<strong><code>eventmachine</code></strong>のソースコードは、<code>lib/eventmachine/twitter_stream.rb</code>に置くことにします。</p>

<p>ちなみに1つのeventmachine内では、id基準でチェックするか、keyword基準でチェックするかのどちらか一方しかできないっぽいです。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">require_relative</span> <span class="s1">&#39;../../config/environment&#39;</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;h1&gt;Twitter username =&gt; id変換: http:/</span><span class="o">/</span><span class="n">tweeterid</span><span class="o">.</span><span class="n">com</span><span class="o">/&lt;</span><span class="sr">/h1&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;@follower_id_list = [&#39;xxxx&#39;]</span>
</span><span class='line'><span class="sr">@track_words = [&#39;xxxx&#39;]&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span><span class="no">TweetStream</span><span class="o">.</span><span class="n">configure</span> <span class="k">do</span> <span class="o">|</span><span class="n">config</span><span class="o">|</span>
</span><span class='line'>  <span class="n">config</span><span class="o">.</span><span class="n">consumer_key</span> <span class="o">=</span> <span class="no">ENV</span><span class="o">[</span><span class="s1">&#39;TWITTER_CONSUMER_KEY&#39;</span><span class="o">]</span>
</span><span class='line'>  <span class="n">config</span><span class="o">.</span><span class="n">consumer_secret</span> <span class="o">=</span> <span class="no">ENV</span><span class="o">[</span><span class="s1">&#39;TWITTER_CONSUMER_SECRET&#39;</span><span class="o">]</span>
</span><span class='line'>  <span class="n">config</span><span class="o">.</span><span class="n">oauth_token</span> <span class="o">=</span> <span class="no">ENV</span><span class="o">[</span><span class="s1">&#39;TWITTER_OAUTH_TOKEN&#39;</span><span class="o">]</span>
</span><span class='line'>  <span class="n">config</span><span class="o">.</span><span class="n">oauth_token_secret</span> <span class="o">=</span> <span class="no">ENV</span><span class="o">[</span><span class="s1">&#39;TWITTER_OAUTH_TOKEN_SECRET&#39;</span><span class="o">]</span>
</span><span class='line'>  <span class="n">config</span><span class="o">.</span><span class="n">auth_method</span> <span class="o">=</span> <span class="ss">:oauth</span>
</span><span class='line'><span class="k">end</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;EM.run do</span>
</span><span class='line'><span class="sr">  def write_to_mongodb(status)&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="no">EM</span><span class="o">.</span><span class="n">defer</span> <span class="k">do</span>
</span><span class='line'>  <span class="vg">$stdout</span><span class="o">.</span><span class="n">print</span> <span class="s2">&quot;status: </span><span class="si">#{</span><span class="n">status</span><span class="si">}</span><span class="se">\n</span><span class="s2">&quot;</span>
</span><span class='line'>  <span class="vg">$stdout</span><span class="o">.</span><span class="n">flush</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1"># statusの処理</span>
</span><span class='line'>  <span class="c1">## ゴニョゴニョ       </span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'><span class="o">&lt;</span><span class="sr">/code&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="k">end</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;  # Twitterのuser idをStream APIで常時チェック</span>
</span><span class='line'><span class="sr">  TweetStream::Client.new.on_error do |message|&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="vg">$stdout</span><span class="o">.</span><span class="n">print</span> <span class="s2">&quot;message: </span><span class="si">#{</span><span class="n">message</span><span class="si">}</span><span class="se">\n</span><span class="s2">&quot;</span>
</span><span class='line'><span class="vg">$stdout</span><span class="o">.</span><span class="n">flush</span>
</span><span class='line'><span class="no">Airbrake</span><span class="o">.</span><span class="n">notify</span><span class="p">(</span><span class="n">e</span><span class="p">,</span> <span class="n">parameters</span><span class="p">:</span> <span class="p">{</span><span class="n">message</span><span class="p">:</span> <span class="n">message</span><span class="p">})</span>
</span><span class='line'><span class="o">&lt;</span><span class="sr">/code&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="k">end</span><span class="o">.</span><span class="n">follow</span><span class="p">(</span><span class="vi">@follower_id_list</span><span class="p">)</span> <span class="k">do</span> <span class="o">|</span><span class="n">status</span><span class="o">|&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;pre&gt;&lt;code&gt;write_to_mongodb(status)</span>
</span><span class='line'><span class="sr">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;</span><span class="sr">/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;  end&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="c1"># Twitterでkeywordが出るのをStream APIで常時チェック</span>
</span><span class='line'>  <span class="no">TweetStream</span><span class="o">::</span><span class="no">Client</span><span class="o">.</span><span class="n">new</span><span class="o">.</span><span class="n">on_error</span> <span class="k">do</span> <span class="o">|</span><span class="n">message</span><span class="o">|&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;pre&gt;&lt;code&gt;$stdout.print &quot;message: </span><span class="si">#{</span><span class="n">message</span><span class="si">}</span><span class="sr">\n&quot;</span>
</span><span class='line'><span class="sr">$stdout.flush</span>
</span><span class='line'><span class="sr">Airbrake.notify(e, parameters: {message: message})</span>
</span><span class='line'><span class="sr">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;</span><span class="sr">/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;  end.track(@track_words) do |status|&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="n">write_to_mongodb</span><span class="p">(</span><span class="n">status</span><span class="p">)</span>
</span><span class='line'><span class="o">&lt;</span><span class="sr">/code&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h2>Procfileの設定</h2>

<p><code>Procfile</code>の設定はこちら。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>worker: bundle <span class="nb">exec </span>ruby lib/eventmachine/twitter_stream.rb
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h2>Twitterのキー情報の取得と環境変数への登録</h2>

<p>まずは以下のサイトでTwitterアプリを登録してください。<br/>
(Sign in => アプリの登録)</p>

<p><strong><a href="https://dev.twitter.com/">Twitter Developers</a></strong></p>

<p>登録したら環境変数にTwitterキーを登録します。まずはローカルへのキー情報の登録です。</p>

<p>Gem「<strong><a href="https://github.com/laserlemon/figaro">Figaro</a></strong>」を使っている場合は、<code>config/application.yml</code>に以下のコードを入力。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>TWITTER_CONSUMER_KEY: xxxx
</span><span class='line'>TWITTER_CONSUMER_SECRET: xxxx
</span><span class='line'>TWITTER_OAUTH_TOKEN: xxxx
</span><span class='line'>TWITTER_OAUTH_TOKEN_SECRET: xxxx
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h2>Herokuへのデプロイ</h2>

<p>では、Herokuにソースコードをデプロイ。<br/>
(このまえにソースはローカルでgitにコミットしておいてください)</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>heroku create <span class="nb">test</span>-app --stack cedar
</span><span class='line'>git push heroku master
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>FigaroでTwitterのキー情報をherokuの環境変数に登録。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>rake figaro:heroku<span class="o">[</span><span class="s1">&#39;test-app&#39;</span><span class="o">]</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>workerプロセスを起動！</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>heroku scale <span class="nv">web</span><span class="o">=</span>0
</span><span class='line'>heroku scale <span class="nv">worker</span><span class="o">=</span>1
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>ちなみにプロセスはweb or workerが1つなら無料ですが、2つ以上のプロセスが起動していると有料になるので注意して使ってください。</p>

<p><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- square -->
<ins class="adsbygoogle" style="display:inline-block;width:336px;height:280px" data-ad-client="ca-pub-4186413323075068" data-ad-slot="5059873392"></ins>
<script>
    (adsbygoogle = window.adsbygoogle || []).push({});
</script></p>
]]></content>
  </entry>
  
</feed>
