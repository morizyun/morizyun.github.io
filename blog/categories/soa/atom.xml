<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: SOA | 酒と泪とRubyとRailsと]]></title>
  <link href="http://morizyun.github.io/blog/categories/soa/atom.xml" rel="self"/>
  <link href="http://morizyun.github.io/"/>
  <updated>2016-01-25T00:12:45+09:00</updated>
  <id>http://morizyun.github.io/</id>
  <author>
    <name><![CDATA[morizyun]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[SOAやMicroservicesについて勉強してみた！]]></title>
    <link href="http://morizyun.github.io/blog/soa-microservice-service-oriented-architecture/"/>
    <updated>2014-08-28T08:20:00+09:00</updated>
    <id>http://morizyun.github.io/blog/soa-microservice-service-oriented-architecture</id>
    <content type="html"><![CDATA[<p><a href="http://www.amazon.co.jp/gp/product/4048865366/ref=as_li_qf_sp_asin_il?ie=UTF8&camp=247&creative=1211&creativeASIN=4048865366&linkCode=as2&tag=morizyun00-22"><img border="0" src="http://ws.assoc-amazon.jp/widgets/q?_encoding=UTF8&ASIN=4048865366&Format=_SL160_&ID=AsinImage&MarketPlace=JP&ServiceVersion=20070822&WS=1&tag=morizyun00-22" width="150" style="float: left; margin: 0 20px 20px 0;" ></a><img src="http://www.assoc-amazon.jp/e/ir?t=morizyun00-22&l=as2&o=9&a=4048865366" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" />
最近、「<strong><a href="https://short.works/">Short.Works</a></strong>」を開発している中で、どんなアーキテクチャにすべきかを妄想している中で、
MicroservicesやSOA(Service Oriented Architechure, サービス指向アーキテクチャ)に興味が出てきたので勉強したことを書いていきます！</p>

<!-- more -->


<br style="clear:both;"/>


<p><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- square -->
<ins class="adsbygoogle" style="display:inline-block;width:336px;height:280px" data-ad-client="ca-pub-4186413323075068" data-ad-slot="5059873392"></ins>
<script>
    (adsbygoogle = window.adsbygoogle || []).push({});
</script></p>

<h2>SOA(Service Oriented Architechure)</h2>

<p>ソフトウェアの機能を独立した「サービス」という単位で部品化してそれを組み合わせてシステムにするアーキテクチャ。
特徴としては次の通り。</p>

<pre>
* ソフトウェアの機能を独立した「サービス」という単位で部品化されていること
* オープンで標準的なインターフェースがあり、個々に呼び出し可能なこと
* 「サービス」を組み合わせることでアプリケーションを実現すること
</pre>


<h2>Microservices</h2>

<p>SOAをWebに適用して、現代の先端的なサービスの事例に当てはめた考え方。『<strong><a href="https://recompile.net/posts/microservices.html">マイクロサービス（microservices）とは何か — recompile.net</a></strong>』
に詳細にかかれていますが、大きな特徴は次の通り。</p>

<pre>
* アプリケーションを小さなコンポーネントの集合にする
* サービス間の連携は、HTTPのAPI経由などを使ったインターフェースにする
* コンポーネント(サービス)ごとに適切な言語・フレームワーク・DBなどが選択される
* サービスごとにデータを持ち、統合されない
* 構成されるサービスごとに障害に対して耐性を持つように設計される
</pre>


<p>プロダクトのサイズが大きくなっていっても適切にメンテンナンスして、柔軟に拡張をし続けていくための設計の指針として大切だと思っています。
(逆に小さなサービスでこれを忠実に実現するのはかなり厳しいかも)</p>

<h2>SOAやMicroServiceにすることのメリット</h2>

<p>メリットは次の通り。</p>

<pre>
* コードベースが大きくなりすぎて、全体像が把握できなくなることを防ぐ
* 個々のアプリケーションの組み合わせを自由に組み替えることができる
* 個々のアプリの言語や動作環境を自由に選ぶことができる
* 各サービスは目的とする機能の実装に集中することができる
* 各サービスが疎結合になることでシステムの開発が容易になる(巨大なサービスの場合)
</pre>


<p>逆に難しい点としては、開発するための環境構築や、適切なインターフェースの粒度、各システムが利用されやすくするための設計などと考えられます。</p>

<h2>あとがき</h2>

<p>このあたりはすごい経験不足なので、もしまずい点とかあれば是非フィードバックをお願いします！</p>

<p><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- square -->
<ins class="adsbygoogle" style="display:inline-block;width:336px;height:280px" data-ad-client="ca-pub-4186413323075068" data-ad-slot="5059873392"></ins>
<script>
    (adsbygoogle = window.adsbygoogle || []).push({});
</script></p>

<h2>Special Thanks</h2>

<p><strong><a href="http://e-words.jp/w/SOA.html">SOAとは 〔 サービス指向アーキテクチャ 〕 【 Service Oriented Architecture 】 - 意味/解説/説明/定義 ： IT用語辞典</a></strong></p>

<p><strong><a href="https://recompile.net/posts/microservices.html">マイクロサービス（microservices）とは何か — recompile.net</a></strong></p>

<p><strong><a href="http://www.ibm.com/developerworks/jp/websphere/library/soa/soa_intro/1.html">SOA入門: 第1回 SOAって何？</a></strong></p>

<p><strong><a href="http://japan.zdnet.com/cio/sp_12executive/35052867/">“マイクロサービス化”で変化に耐えられる組織を目指す--クックパッド舘野CTO - ZDNet Japan</a></strong></p>
]]></content>
  </entry>
  
</feed>
