<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: GemJam | 酒と泪とRubyとRailsと]]></title>
  <link href="http://morizyun.github.io/blog/categories/gemjam/atom.xml" rel="self"/>
  <link href="http://morizyun.github.io/"/>
  <updated>2016-02-08T22:07:00+09:00</updated>
  <id>http://morizyun.github.io/</id>
  <author>
    <name><![CDATA[morizyun]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[ソースコード・リーディングしよう！[GemJam][ActiveSupport]]]></title>
    <link href="http://morizyun.github.io/blog/library-source-code-reading-acctive-support/"/>
    <updated>2014-12-28T12:10:00+09:00</updated>
    <id>http://morizyun.github.io/blog/library-source-code-reading-acctive-support</id>
    <content type="html"><![CDATA[<p><a href="http://www.amazon.co.jp/gp/product/B00DT4DY0M/ref=as_li_qf_sp_asin_il?ie=UTF8&camp=247&creative=1211&creativeASIN=B00DT4DY0M&linkCode=as2&tag=morizyun00-22"><img border="0" src="http://ws.assoc-amazon.jp/widgets/q?_encoding=UTF8&ASIN=B00DT4DY0M&Format=_SL160_&ID=AsinImage&MarketPlace=JP&ServiceVersion=20070822&WS=1&tag=morizyun00-22" width="150" style="float: left; margin: 0 20px 20px 0;" ></a><img src="http://www.assoc-amazon.jp/e/ir?t=morizyun00-22&l=as2&o=9&a=B00DT4DY0M" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" />
<strong><a href="https://twitter.com/h5y1m141">@h5y1m141</a></strong>さんに誘って頂いて、
<strong><a href="https://twitter.com/hitomi_tw">@hitomi_tw</a></strong>さんや
<strong><a href="http://qiita.com/shiro615">shiro615</a></strong>さんと一緒に、RubyGemsのソースコードリーディング勉強会『<strong>GemJam</strong>』を行いました。</p>

<p>今回は最近仕事でソースコードを読む時間が増えてきて、苦労していたのでソースコード・リーディングのモチベーションアップやコツを調べつつ、いつもRailsでお世話になっていた『<strong><a href="https://github.com/rails/rails/tree/master/activesupport">ActiveSupport</a></strong>』
のソースコードリーディングに挑戦してみました。</p>

<p><strong>(12/28 12:10) 勉強会のアウトプットを更新しました。全員アウトプットしたのは素晴らしいです</strong></p>

<!-- more -->


<br style="clear:both;"/>


<p>Included file 'custom/google_ads_yoko_naga.html' not found in _includes directory</p>

<h2>プログラムのモチベーション</h2>

<p>これは経験談からくる話なので、これが正解ということでないッス。どちらかと言うと、今までエンジニアとして経験してきた中で、僕個人はこう思っていますという観点で書きました！</p>

<h3>プログラミングは継続する事が一番大切</h3>

<p><strong><a href="http://gigazine.net/news/20130911-180-websites/">プログラミング経験ゼロだが180日で180個のウェブサイトを作るプロジェクトがゴールまであとわずかに</a></strong></p>

<p>プログラミング経験0のデザイナさんが、毎日1つサイトを作っていったお話です。最初はテキストとリンクが並ぶだけのサイトでしたが、少しずつゲームやチャットなどが作れるようになっていきます。</p>

<p>今知っている知識だけで、作れるWebサイトを作っていく。そして、自分の知っている2つの知識を組み合わせたり、１つずつやりたいコトをGoogleに教えてもらうくらいが、挫折せずに続けられると思っています。</p>

<p>個人的に学生さんらにプログラムを教えた事がありますが、プログラムが出来るようになるために一番大切なことは『<strong>継続</strong>』することだと常々実感させられます。</p>

<h3>じゃあ、なぜソースコードを読むのか？</h3>

<p>僕は1人の力には限界があると思います。たった一人で本当に価値のあるソフトウェアを作るのは本当に難しいことだと思います。だから、価値のあるソフトウェアを作っていくためには、他のエンジニアと一緒にプログラムを作り込む必要があると考えています。</p>

<p>そのためには、他の人のソースコードの意味を理解し、他の人にわかりやすいプログラムを書く必要があります。言い換えるとソースコードを読むこと、読みやすいソースコードを知ることが重要だと思います。</p>

<h3>オススメのドキュメント</h3>

<p><strong><a href="http://www.itmedia.co.jp/enterprise/articles/0712/26/news015.html">まつもとゆきひろのハッカーズライフ：第10回 ソースを読もう - ITmedia エンタープライズ</a></strong></p>

<p>Rubyの製作者、まつもとゆきひろさんが2007年に書かれていた記事を見つけました。まつもとさんのソースコードを読む際の動機を垣間見える面白い記事でしたので、良ければぜひご覧になってみてください。</p>

<h2>ソースコードの読み方</h2>

<p>今回『<strong><a href="https://github.com/rails/rails/tree/master/activesupport">ActiveSupport</a></strong>』
のソースコード・リーディングをしてみたので、その時の僕の手順を紹介します。(もしもっといい方法をご存知の方がいれば是非コメントお願いします)</p>

<h4>(1) コードを効率よく読むためのツールを準備する</h4>

<p>まず、オススメのエディタは『<strong><a href="https://www.jetbrains.com/ruby/">RubyMine(などのJetBrains製のエディタ)</a></strong>』です。理由はメソッドのドリルダウンがデフォルトの設定で簡単に行えるからです。1ヶ月無料なのでよかったら是非試してみてください！</p>

<p>次にプロジェクトフォルダ直下で、Gemfile作成して以下の様に追加。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">source</span> <span class="s1">&#39;https://rubygems.org&#39;</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;h1&gt;debug用&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span><span class="n">gem</span> <span class="s1">&#39;pry&#39;</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;h1&gt;stackを表示&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span><span class="n">gem</span> <span class="s1">&#39;pry-stack_explorer&#39;</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;h1&gt;各種便利ユーティリティ&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span><span class="n">gem</span> <span class="s1">&#39;activesupport&#39;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>以下のコマンドを実行して、Gemをインストール。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;Gemを追加するためのディレクトリを作成&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;mkdir vendor&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;Gemをディレクトリに保存&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;bundle install --path vendor/bundle --jobs<span class="o">=</span>4
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h4>(2) 実際に動かしてみる</h4>

<p>例えば、<code>sample.rb</code>を作成して以下のようにコードを記入。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s1">&#39;pry&#39;</span>
</span><span class='line'><span class="nb">require</span> <span class="s1">&#39;pry-byebug&#39;</span>
</span><span class='line'><span class="nb">require</span> <span class="s1">&#39;active_support/all&#39;</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;puts 2.days.ago</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>これを実行するとactive supportの機能である2日前の日付を取得する事ができます。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>bunlde <span class="nb">exec </span>ruby sample.rb&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;<span class="o">=</span>&gt; 2014-12-25 14:09:42 +0900&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h4>(3) デバッガの準備</h4>

<p>次に今回はデバッカを書いて実際に2.daysのメソッドにどんな風に動いているのかを見れるようにします。</p>

<p>まずは、<code>vendor/bundle/ruby/2.1.0/gems/activesupport-4.2.0/lib/active_support/core_ext/numeric/time.rb</code>
を開いて、daysメソッドに以下を追加。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'>  <span class="k">def</span> <span class="nf">days</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;pre&gt;&lt;code&gt;binding.pry # &amp;lt;= この行を追加</span>
</span><span class='line'><span class="sr">ActiveSupport::Duration.new(self * 24.hours, [[:days, self]])</span>
</span><span class='line'><span class="sr">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;</span><span class="sr">/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;  end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>そしてもう一度以下のコマンドを実行すると今度は、<code>binding.pry</code>を書いた地点で停止します。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>bunlde <span class="nb">exec </span>ruby sample.rb&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;デバッカが表示&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;<span class="o">=</span>&gt; From:&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;<span class="o">=</span>&gt;/active_support_reading/vendor/bundle/ruby/2.1.0/gems/activesupport-4.2.0/lib/active_support/core_ext/numeric/time.rb @ line 50 Numeric#days:&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;<span class="o">=</span>&gt;&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;<span class="o">=</span>&gt;     49: def days&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;<span class="o">=</span>&gt;  <span class="o">=</span>&gt; 50:   binding.pry&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;<span class="o">=</span>&gt;     51:   ActiveSupport::Duration.new<span class="o">(</span>self * 24.hours, <span class="o">[[</span>:days, self<span class="o">]])</span>&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;<span class="o">=</span>&gt;     52: end&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;呼び出しの関係を取得&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;2.1.4 <span class="o">(</span>2<span class="o">)</span>:0 &gt; show-stack&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;<span class="o">=</span>&gt; Showing all accessible frames in stack <span class="o">(</span>2 in total<span class="o">)</span>:&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;<span class="o">=</span>&gt; --&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;<span class="o">=</span>&gt; <span class="o">=</span>&gt; <span class="c">#0  days &amp;lt;Numeric#days()&gt;&lt;/h1&gt;</span>
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;<span class="o">=</span>&gt;    <span class="c">#1 [main]    &lt;main&gt;&lt;/h1&gt;</span>
</span><span class='line'>
</span><span class='line'>&lt;p&gt;2.1.4 <span class="o">(</span>main<span class="o">)</span>:0 &gt; show-source Benchmark.ms&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;<span class="o">=</span>&gt;&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;<span class="o">=</span>&gt; From:&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;<span class="o">=</span>&gt;/active_support_reading/vendor/bundle/ruby/2.1.0/gems/activesupport-4.2.0/lib/active_support/core_ext/benchmark.rb @ line 11:&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;<span class="o">=</span>&gt; Owner: <span class="c">#&amp;lt;Class:Benchmark&gt;&lt;/h1&gt;</span>
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;<span class="o">=</span>&gt; Visibility: public&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;<span class="o">=</span>&gt; Number of lines: 3&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;<span class="o">=</span>&gt;&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;<span class="o">=</span>&gt; def ms&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;<span class="o">=</span>&gt;   1000 * realtime <span class="o">{</span> yield <span class="o">}</span>&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;<span class="o">=</span>&gt; end&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;ここでstepを実行すると処理の中身に移動、nextで次の処理を見ることができる&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>あとはちょっと変更して見て動かしたりしてみてください。</p>

<h3>どんなふうにソースコードを読み進むべき？</h3>

<p>手始めにどんなふうにソースコードを読んでみたらいいかをいくつかのサイトを調べながら考えてみました。
アイデアレベルですが、よかったらぜひソースコード・リーディング試してみてください！</p>

<pre>
* 普段関わっていたり、仕事に役立つコードを読んだり、コメントを書く
* 興味のある分野や機能を持ったソースコードを読む
  * 全体を読む必要はない。面白そうなところをつまみ食いして、先人の知恵を学べばいい
* ちょっと変更して動作させてみる
* バグがないか探してみる
</pre>


<p>Included file 'custom/google_ads_yoko_naga.html' not found in _includes directory</p>

<h2>ActiveSupportの面白い機能</h2>

<p>『<strong><a href="https://github.com/rails/rails/tree/master/activesupport">ActiveSupport</a></strong>』の
便利機能を調べつつ、その部分のソースコードを読んでみました。今回知らなくって、後で使えそうだった機能を中心に紹介します！</p>

<h3>Benchmark.ms</h3>

<p><code>Benchmark.ms</code>はブロックを渡すとブロックを評価して実行時間を計測します。<br/>
(Benchmark.realtimeのラッパーです)</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s1">&#39;active_support/all&#39;</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;puts Benchmark.ms {  sleep 1 } # =&gt; 1000.234</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h3>cattr_accessor</h3>

<p><code>attr_accessor</code>はインスタンス変数へのアクセッサを提供するメソッド。<br/>
<code>cattr_accessor</code>は、クラス変数へのアクセッサを提供するメソッド。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s1">&#39;active_support/all&#39;</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;class Sample</span>
</span><span class='line'><span class="sr">  cattr_accessor :hoge</span>
</span><span class='line'><span class="sr">end&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span><span class="no">Sample</span><span class="o">.</span><span class="n">hoge</span> <span class="o">=</span> <span class="mi">1</span>
</span><span class='line'><span class="nb">puts</span> <span class="no">Sample</span><span class="o">.</span><span class="n">hoge</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h3>descendants</h3>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s1">&#39;active_support/all&#39;</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;class Parent</span>
</span><span class='line'><span class="sr">end</span>
</span><span class='line'><span class="sr">class Child &amp;lt; Parent</span>
</span><span class='line'><span class="sr">end</span>
</span><span class='line'><span class="sr">class GrandChild &amp;lt; Child</span>
</span><span class='line'><span class="sr">end&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="err">継承してくれている先を出す</span><span class="o">&lt;</span><span class="sr">/h1&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;puts Parent.descendants.to_s #=&gt; [Child, GrandChild]&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="err">継承元を出すメソッド</span><span class="o">&lt;</span><span class="sr">/h1&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;puts GrandChild.ancestors.to_s&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;=&gt;</span> <span class="o">[</span><span class="no">GrandChild</span><span class="p">,</span> <span class="no">Child</span><span class="p">,</span> <span class="no">Parent</span><span class="p">,</span> <span class="no">Object</span><span class="p">,</span> <span class="no">JSON</span><span class="o">::</span><span class="no">Ext</span><span class="o">::</span><span class="no">Generator</span><span class="o">::</span><span class="no">GeneratorMethods</span><span class="o">::</span><span class="no">Object</span><span class="p">,</span> <span class="no">PP</span><span class="o">::</span><span class="no">ObjectMixin</span><span class="p">,</span> <span class="no">Kernel</span><span class="p">,</span> <span class="no">BasicObject</span><span class="o">]&lt;</span><span class="sr">/h1&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h2>Hash.except</h2>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s1">&#39;active_support/all&#39;</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;h1&gt;ハッシュから特定のキーを削除&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span><span class="nb">hash</span> <span class="o">=</span> <span class="p">{</span> <span class="n">hoge</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span> <span class="n">huga</span><span class="p">:</span> <span class="mi">2</span> <span class="p">}</span>
</span><span class='line'><span class="nb">puts</span> <span class="nb">hash</span><span class="o">.</span><span class="n">except</span><span class="p">(</span><span class="ss">:hoge</span><span class="p">)</span><span class="o">.</span><span class="n">to_s</span> <span class="c1"># =&gt; {:huga =&gt; 2}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h2>Time#change</h2>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s1">&#39;active_support/all&#39;</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;h1&gt;その日の4時0分0秒を取得&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span><span class="no">Time</span><span class="o">.</span><span class="n">now</span><span class="o">.</span><span class="n">change</span><span class="p">(</span><span class="n">hour</span><span class="p">:</span> <span class="mi">4</span><span class="p">,</span> <span class="n">minute</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span> <span class="n">second</span><span class="p">:</span> <span class="mi">0</span><span class="p">)</span> <span class="c1">#=&gt; 2014-12-27 04:00:00 +0900</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>ここの記事が大変参考になりました！</p>

<p><strong><a href="http://railsdoc.eiel.info/hiroshimarb/32/">RailsDoc - 広島Ruby勉強 #032 - Rails のソースコード読んだので面白そうなところを紹介する -- ActiveSupport CoreExt編 その1</a></strong></p>

<h2>pry詳解</h2>

<p>今回ソースコードを読んでいて、改めてpryの素晴らしさに感動しました。ということでpryに関する記事を見つけたので紹介です。</p>

<h3>pryの使い方解説</h3>

<ul>
<li><a href="http://qiita.com/muran001/items/e88819681f5325fc44e0">Pryコマンドまとめ - Qiita</a></li>
<li><a href="http://qiita.com/tbpgr/items/a1bbe43b772e35d93987">Ruby の 定番対話ツール pry 徹底攻略 | Normal Input #pry #ruby - Qiita</a></li>
<li><a href="http://qiita.com/tbpgr/items/12a60f2f9e3de61517b5">Ruby の 定番対話ツール pry 徹底攻略 #pry #ruby - Qiita</a></li>
<li><a href="http://qiita.com/k0kubun/items/b118e9ccaef8707c4d9f">Ruby - 今更聞けないpryの使い方と便利プラグイン集 - Qiita</a></li>
<li><a href="http://qiita.com/joker1007/items/42f00b12c65bbec0e50a">pry-docでカジュアルにRubyのソースコードを読む - Qiita</a></li>
<li><a href="http://morizyun.github.io/blog/pry-command-rails-ruby/">Pryが真の力を発揮してくれる19個のコマンドとコマンドの自作方法 - 酒と泪とRubyとRailsと</a></li>
</ul>


<h3>pryの動作原理の解説</h3>

<ul>
<li><a href="http://qiita.com/yui-knk/items/63a511d243323bec6fb8">“binding.pry”って実際のところは何なのだろう - Qiita</a></li>
</ul>


<h2>GemJam勉強会アウトプット</h2>

<h3>GemJamという勉強会を行いました</h3>

<p><strong><a href="https://twitter.com/h5y1m141">@h5y1m141</a></strong>さんが、GemJamを作った背景や、今回調べたことについてブログにまとめて頂けました。4人位のコードリーディングや読書会的な勉強会って結構面白いと実感しました。あと、みんなが終了後1-2日でちゃんとアウトプットしているのはほんとうに素晴らしいです！</p>

<p><strong><a href="http://h5y1m141.hatenablog.com/entry/2014/12/28/111420">GemJamという勉強会を行いました - TitaniumMobile勉強記</a></strong></p>

<h3>GitHubでMergeされたらBacklogもRailsで自動更新する</h3>

<p><strong><a href="https://twitter.com/hitomi_tw">@hitomi_tw</a></strong>さんがActiveSupportのconcernを使いつつ、Backlog APIへのアクセスメソッドを調べて発表してくれました。その際のソースコードをQiitaに公開して頂けたので紹介です！</p>

<p><strong><a href="http://qiita.com/hitomi_/items/12c16d58855fb3536e96">GitHubでMergeされたらBacklogもRailsで自動更新する - Qiita</a></strong></p>

<h3>配列からハッシュを作成/ActiveSupportでHashの一部だけ取り出す</h3>

<p>まだ、プログラムの実務経験はないそうですが、短い時間でアウトプットや発表なんかをしっかりしてくれて、自分の初心者の頃と比べると雲泥の差で素晴らしいと感じました。ぜひプログラムを楽しんでください＾＾</p>

<p><strong><a href="http://qiita.com/shiro615">shiro615 - Qiita</a></strong></p>

<p>Included file 'custom/google_ads_yoko_naga.html' not found in _includes directory</p>

<h2>Special Thanks</h2>

<ul>
<li><a href="http://i.loveruby.net/ja/misc/readingcode.html">ソースコードを読むための技術</a></li>
<li><a href="http://yasuho.hatenablog.com/entry/20060509/p1">ソースコードを効率よく読むには(1) - プログラマyasuhoの隠れ家</a></li>
<li><a href="http://detail.chiebukuro.yahoo.co.jp/qa/question_detail/q11110745181">プログラムのソースコードの読み方のコツ最近他人の書いたプログラム... - Yahoo!知恵袋</a></li>
<li><a href="http://www.atmarkit.co.jp/ait/articles/0804/09/news150.html">小山博史のJavaを楽しむ（10）：【新人なるプログラマーへ】ソースコードを読みましょう (1/2) - ＠IT</a></li>
</ul>


<h2>変更来歴</h2>

<p><strong>(12/28 12:10) 勉強会のアウトプットを更新</strong></p>
]]></content>
  </entry>
  
</feed>
