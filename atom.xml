<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[酒と泪とRubyとRailsと]]></title>
  <link href="http://morizyun.github.io/atom.xml" rel="self"/>
  <link href="http://morizyun.github.io/"/>
  <updated>2016-01-31T22:19:44+09:00</updated>
  <id>http://morizyun.github.io/</id>
  <author>
    <name><![CDATA[morizyun]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Rails 5.0.0.beta1.1の新機能紹介の公式ブログ記事を読んでみた]]></title>
    <link href="http://morizyun.github.io/blog/rails-5.0.0.beta1-new-function-official-blog/"/>
    <updated>2016-01-31T22:00:00+09:00</updated>
    <id>http://morizyun.github.io/blog/rails-5.0.0.beta1-new-function-official-blog</id>
    <content type="html"><![CDATA[<p><a href="http://www.amazon.co.jp/gp/product/B00P0UR1CA/ref=as_li_qf_sp_asin_il?ie=UTF8&camp=247&creative=1211&creativeASIN=B00P0UR1CA&linkCode=as2&tag=morizyun00-22"><img border="0" src="http://ws.assoc-amazon.jp/widgets/q?_encoding=UTF8&ASIN=B00P0UR1CA&Format=_SL160_&ID=AsinImage&MarketPlace=JP&ServiceVersion=20070822&WS=1&tag=morizyun00-22" width="150" style="float: left; margin: 0 20px 20px 0;" ></a><img src="http://www.assoc-amazon.jp/e/ir?t=morizyun00-22&l=as2&o=9&a=B00P0UR1CA" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" />Rails公式ブログが、Rails 5 betaの新機能についてのブログ記事『<strong><a href="http://weblog.rubyonrails.org/2015/12/18/Rails-5-0-beta1/">Riding Rails: Rails 5.0.0.beta1: Action Cable, API mode, Rails command</a></strong>』を英語の勉強がてら読んでみました！</p>

<!-- more -->


<br style="clear:both;"/>


<h2>Action Cable</h2>

<pre>
- Action Cableは、Websocketをハンドリングするためのフレームワーク
- チャットや、Notificationを簡単に実装することができる
</pre>




<script async src="http://morizyun.github.io//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<!-- square -->


<p><ins class="adsbygoogle" style="display:inline-block;width:336px;height:280px" data-ad-client="ca-pub-4186413323075068" data-ad-slot="5059873392"></ins></p>

<script>
    (adsbygoogle = window.adsbygoogle || []).push({});
</script>


<h3>チャットアプリのサンプルソース</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># アプリの作成</span>
</span><span class='line'><span class="nv">$ </span>rails _5.0.0.beta1.1_ new action_cable_sample --skip-spring --skip-bundle
</span><span class='line'><span class="nv">$ </span><span class="nb">cd </span>action_cable_sample
</span><span class='line'>
</span><span class='line'><span class="c"># bundle install の実行</span>
</span><span class='line'>bundle install --jobs<span class="o">=</span>4 --path<span class="o">=</span>vendor/bundle
</span><span class='line'>
</span><span class='line'><span class="c"># Message の scaffold を実行</span>
</span><span class='line'><span class="nv">$ </span>rails g scaffold messages content:text
</span><span class='line'>
</span><span class='line'><span class="c"># マイグレーションを実行</span>
</span><span class='line'><span class="nv">$ </span>rails db:migrate
</span><span class='line'>
</span><span class='line'><span class="c"># Chat チャネル with Speakアクション を作成</span>
</span><span class='line'><span class="nv">$ </span>rails g channel chat speak
</span><span class='line'>
</span><span class='line'><span class="c"># 非同期でブロードキャストするための Jobを作成</span>
</span><span class='line'><span class="nv">$ </span>rails g job message_broadcast
</span></code></pre></td></tr></table></div></figure>


<p>ルーティングを修正。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># config/routes.rb</span>
</span><span class='line'><span class="no">Rails</span><span class="o">.</span><span class="n">application</span><span class="o">.</span><span class="n">routes</span><span class="o">.</span><span class="n">draw</span> <span class="k">do</span>
</span><span class='line'>  <span class="c1"># ↓ 以下を追加</span>
</span><span class='line'>  <span class="n">root</span> <span class="n">to</span><span class="p">:</span> <span class="s1">&#39;messages#index&#39;</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1"># Serve websocket cable requests in-process</span>
</span><span class='line'>  <span class="n">mount</span> <span class="no">ActionCable</span><span class="o">.</span><span class="n">server</span> <span class="o">=&gt;</span> <span class="s1">&#39;/cable&#39;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>JS側で、ActionCableを有効にします。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='coffeescript'><span class='line'><span class="c1"># app/assets/javascripts/cable.coffee</span>
</span><span class='line'><span class="nx">@App</span> <span class="o">||=</span> <span class="p">{}</span>
</span><span class='line'><span class="nv">App.cable = </span><span class="nx">ActionCable</span><span class="p">.</span><span class="nx">createConsumer</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure>


<p>クライアントサイド(CoffeeScript)のSpeakアクションを修正。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='coffeescript'><span class='line'><span class="c1"># app/assets/javascripts/channels/chat.coffee</span>
</span><span class='line'>  <span class="nv">received: </span><span class="nf">(data) -&gt;</span>
</span><span class='line'>    <span class="c1"># メッセージを受け取ったら #messages に付け足す</span>
</span><span class='line'>    <span class="nx">$</span><span class="p">(</span><span class="s">&#39;#messages&#39;</span><span class="p">).</span><span class="nx">append</span> <span class="nx">data</span><span class="p">[</span><span class="s">&#39;message&#39;</span><span class="p">]</span>
</span><span class='line'>
</span><span class='line'>  <span class="nv">speak: </span><span class="nf">(message) -&gt;</span>
</span><span class='line'>    <span class="c1"># formでsubmitしたメッセージをサーバに送信</span>
</span><span class='line'>    <span class="nx">@perform</span> <span class="s">&#39;speak&#39;</span><span class="p">,</span> <span class="nv">message: </span><span class="nx">message</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># リターンキーを押したら、メッセージが送信される</span>
</span><span class='line'><span class="nx">$</span><span class="p">(</span><span class="nb">document</span><span class="p">).</span><span class="kc">on</span> <span class="s">&#39;keypress&#39;</span><span class="p">,</span> <span class="s">&#39;[data-behavior~=chat_speaker]&#39;</span><span class="p">,</span> <span class="nf">(event) -&gt;</span>
</span><span class='line'>  <span class="k">if</span> <span class="nx">event</span><span class="p">.</span><span class="nx">keyCode</span> <span class="o">is</span> <span class="mi">13</span>
</span><span class='line'>    <span class="nx">App</span><span class="p">.</span><span class="nx">chat</span><span class="p">.</span><span class="nx">speak</span> <span class="nx">event</span><span class="p">.</span><span class="nx">target</span><span class="p">.</span><span class="nx">value</span>
</span><span class='line'>    <span class="nv">event.target.value = </span><span class="s">&#39;&#39;</span>
</span><span class='line'>    <span class="nx">event</span><span class="p">.</span><span class="nx">preventDefault</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure>


<p>サーバーサイドの ActionCableのクラス <code>CatChannel</code> を修正。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># ActionCableのクラス</span>
</span><span class='line'><span class="k">class</span> <span class="nc">ChatChannel</span> <span class="o">&lt;</span> <span class="no">ApplicationCable</span><span class="o">::</span><span class="no">Channel</span>
</span><span class='line'>  <span class="c1"># 配信する際の名前。 chat.coffee内の「ChatChannel」と対応(?)</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">subscribed</span>
</span><span class='line'>    <span class="c1"># ↓ 以下をコメントアウトする</span>
</span><span class='line'>    <span class="n">stream_from</span> <span class="s1">&#39;chat_channel&#39;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1"># クライアントから送られた message を テーブルに保存</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">speak</span><span class="p">(</span><span class="n">data</span><span class="p">)</span>
</span><span class='line'>    <span class="no">Message</span><span class="o">.</span><span class="n">create!</span> <span class="n">content</span><span class="p">:</span> <span class="n">data</span><span class="o">[</span><span class="s1">&#39;message&#39;</span><span class="o">]</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>




<script async src="http://morizyun.github.io//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<!-- square -->


<p><ins class="adsbygoogle" style="display:inline-block;width:336px;height:280px" data-ad-client="ca-pub-4186413323075068" data-ad-slot="5059873392"></ins></p>

<script>
    (adsbygoogle = window.adsbygoogle || []).push({});
</script>


<p>Messageをテーブルに保存したら、非同期のJobを起動。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># Messageを管理するクラス</span>
</span><span class='line'><span class="k">class</span> <span class="nc">Message</span> <span class="o">&lt;</span> <span class="no">ApplicationRecord</span>
</span><span class='line'>  <span class="c1"># 作成後のコミットが完了したら ブロードキャストする</span>
</span><span class='line'>  <span class="n">after_create_commit</span> <span class="p">{</span> <span class="no">MessageBroadcastJob</span><span class="o">.</span><span class="n">perform_later</span> <span class="nb">self</span> <span class="p">}</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>保存されたメッセージを、MessageBroadcastJobで非同期でブロードキャスト。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># 非同期でクライアントにメッセージを送るためのJob</span>
</span><span class='line'><span class="k">class</span> <span class="nc">MessageBroadcastJob</span> <span class="o">&lt;</span> <span class="no">ApplicationJob</span>
</span><span class='line'>  <span class="n">queue_as</span> <span class="ss">:default</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1"># 部分テンプレートをrenderする</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">perform</span><span class="p">(</span><span class="n">message</span><span class="p">)</span>
</span><span class='line'>    <span class="no">ActionCable</span><span class="o">.</span><span class="n">server</span><span class="o">.</span><span class="n">broadcast</span> <span class="s1">&#39;chat_channel&#39;</span><span class="p">,</span> <span class="n">message</span><span class="p">:</span> <span class="n">_render_message</span><span class="p">(</span><span class="n">message</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="kp">private</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1"># 部分テンプレートをrenderする</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">_render_message</span><span class="p">(</span><span class="n">message</span><span class="p">)</span>
</span><span class='line'>    <span class="no">ApplicationController</span><span class="o">.</span><span class="n">renderer</span><span class="o">.</span><span class="n">render</span><span class="p">(</span><span class="n">partial</span><span class="p">:</span> <span class="s1">&#39;messages/message&#39;</span><span class="p">,</span> <span class="n">locals</span><span class="p">:</span> <span class="p">{</span> <span class="n">message</span><span class="p">:</span> <span class="n">message</span> <span class="p">})</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>ちゃっと風にメッセージを保存</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="c">&lt;!-- app/views/messages/index.html.erb --&gt;</span>
</span><span class='line'><span class="nt">&lt;h1&gt;</span>Chat<span class="nt">&lt;/h1&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;div</span> <span class="na">id=</span><span class="s">&quot;messages&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>  <span class="err">&lt;</span>%= render @messages %&gt;
</span><span class='line'><span class="nt">&lt;/div&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;form&gt;</span>
</span><span class='line'>  <span class="nt">&lt;label&gt;</span>Send Message:<span class="nt">&lt;/label&gt;&lt;br&gt;</span>
</span><span class='line'>  <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">&quot;text&quot;</span> <span class="na">data-behavior=</span><span class="s">&quot;chat_speaker&quot;</span><span class="nt">&gt;</span>
</span><span class='line'><span class="nt">&lt;/form&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>あと部分テンプレート追加。キャッシュも普通に使う事ができます！</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="c">&lt;!-- app/views/messages/_message.html.erb --&gt;</span>
</span><span class='line'><span class="err">&lt;</span>% cache message do %&gt;
</span><span class='line'>  <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;message&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>    <span class="nt">&lt;p&gt;</span><span class="err">&lt;</span>%= message.content %&gt;<span class="nt">&lt;/p&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/div&gt;</span>
</span><span class='line'><span class="err">&lt;</span>% end %&gt;
</span></code></pre></td></tr></table></div></figure>


<p>あとはいつもどおり <code>rails s</code> で起動するとpumaが立ち上がります。</p>

<p><img src="http://morizyun.github.io/images/action_cable_chat_sample.gif" /></p>

<h3>感想</h3>

<p>以下、使ってみて感じたことです。</p>

<ul>
<li>サーバ/クライアントサイド両方の処理を意識する必要がある</li>
<li>Viewのキャッシュなど、Railsの今までの知識を有効活用できる</li>
<li>一時的に接続が失敗したり、エラー時のリカバリ処理等、実際に作る場合はいろいろ考慮が必要そう</li>
<li>Basecamp 3では本番で使われているけど、ネットの知見がたまるまで少し様子見が吉かも</li>
</ul>


<h3>関連リンク</h3>

<ul>
<li><strong><a href="http://qiita.com/jnchito/items/aec75fab42804287d71b">Rails 5 + ActionCableで作る！シンプルなチャットアプリ（DHH氏のデモ動画より） - Qiita</a></strong></li>
<li><strong><a href="https://github.com/rails/actioncable-examples">rails/actioncable-examples: Action Cable Examples - GitHub</a></strong></li>
</ul>


<h2>API Mode</h2>

<p>BackendとしてAPIを作るのに特化したrails プロジェクトを <code>rails new backend --api</code> 等で簡単に作成できる。</p>

<p>このAPI Modeとは直接の関係はないですが、『<strong><a href="https://github.com/cerebris/jsonapi-resources">jsonapi-resources</a></strong>』というプロジェクトがあるようです。
こちらもサンプルソースを見た限りはなかなか面白そう。上手く使いこなせれば、楽ができそうです！</p>

<p>こちらは別途サンプルを作って試してみようと思います！</p>

<script async src="http://morizyun.github.io//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<!-- square -->


<p><ins class="adsbygoogle" style="display:inline-block;width:336px;height:280px" data-ad-client="ca-pub-4186413323075068" data-ad-slot="5059873392"></ins></p>

<script>
    (adsbygoogle = window.adsbygoogle || []).push({});
</script>


<h2>ActiveRecord Attriubtes</h2>

<p>DBに保存している値の型と、ActiveRecordで取り出した時の型を分けることができる。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># 小数点付きの型でDBに保存</span>
</span><span class='line'><span class="c1"># db/schema.rb</span>
</span><span class='line'><span class="n">create_table</span> <span class="ss">:store_listings</span><span class="p">,</span> <span class="n">force</span><span class="p">:</span> <span class="kp">true</span> <span class="k">do</span> <span class="o">|</span><span class="n">t</span><span class="o">|</span>
</span><span class='line'>  <span class="n">t</span><span class="o">.</span><span class="n">decimal</span> <span class="ss">:price_in_cents</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="c1">#### Before ####</span>
</span><span class='line'><span class="c1"># app/models/store_listing.rb</span>
</span><span class='line'><span class="k">class</span> <span class="nc">StoreListing</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># 小数点付きで値を返す</span>
</span><span class='line'><span class="n">store_listing</span> <span class="o">=</span> <span class="no">StoreListing</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="n">price_in_cents</span><span class="p">:</span> <span class="s1">&#39;10.1&#39;</span><span class="p">)</span>
</span><span class='line'><span class="n">store_listing</span><span class="o">.</span><span class="n">price_in_cents</span> <span class="c1"># =&gt; BigDecimal.new(10.1) </span>
</span><span class='line'>
</span><span class='line'><span class="c1">#### After ####</span>
</span><span class='line'><span class="k">class</span> <span class="nc">StoreListing</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span>
</span><span class='line'>  <span class="n">attribute</span> <span class="ss">:price_in_cents</span><span class="p">,</span> <span class="ss">:integer</span> <span class="c1"># 整数に設定した場合</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># 整数で値を返す</span>
</span><span class='line'><span class="n">store_listing</span> <span class="o">=</span> <span class="no">StoreListing</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="n">price_in_cents</span><span class="p">:</span> <span class="s1">&#39;10.1&#39;</span><span class="p">)</span>
</span><span class='line'><span class="n">store_listing</span><span class="o">.</span><span class="n">price_in_cents</span> <span class="c1"># =&gt; 10</span>
</span></code></pre></td></tr></table></div></figure>


<p>配列や、レンジの状態で値を受け取る事もできます。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># 配列やレンジを設定する事もできる</span>
</span><span class='line'><span class="k">class</span> <span class="nc">MyModel</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span>
</span><span class='line'>  <span class="n">attribute</span> <span class="ss">:my_string</span><span class="p">,</span> <span class="ss">:string</span>
</span><span class='line'>  <span class="n">attribute</span> <span class="ss">:my_int_array</span><span class="p">,</span> <span class="ss">:integer</span><span class="p">,</span> <span class="n">array</span><span class="p">:</span> <span class="kp">true</span>
</span><span class='line'>  <span class="n">attribute</span> <span class="ss">:my_float_range</span><span class="p">,</span> <span class="ss">:float</span><span class="p">,</span> <span class="n">range</span><span class="p">:</span> <span class="kp">true</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">model</span> <span class="o">=</span> <span class="no">MyModel</span><span class="o">.</span><span class="n">new</span><span class="p">(</span>
</span><span class='line'><span class="n">my_string</span><span class="p">:</span> <span class="s2">&quot;string&quot;</span><span class="p">,</span>
</span><span class='line'><span class="n">my_int_array</span><span class="p">:</span> <span class="o">[</span><span class="s2">&quot;1&quot;</span><span class="p">,</span> <span class="s2">&quot;2&quot;</span><span class="p">,</span> <span class="s2">&quot;3&quot;</span><span class="o">]</span><span class="p">,</span>
</span><span class='line'><span class="n">my_float_range</span><span class="p">:</span> <span class="s2">&quot;[1,3.5]&quot;</span><span class="p">,</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'><span class="n">model</span><span class="o">.</span><span class="n">attributes</span>
</span><span class='line'><span class="c1"># =&gt;</span>
</span><span class='line'><span class="c1"># {</span>
</span><span class='line'><span class="c1">#    my_string: &quot;string&quot;,</span>
</span><span class='line'><span class="c1">#    my_int_array: [1, 2, 3],</span>
</span><span class='line'><span class="c1">#    my_float_range: 1.0..3.5</span>
</span><span class='line'><span class="c1"># }</span>
</span></code></pre></td></tr></table></div></figure>


<p>さらに、独自の型を定義することもできます。これはいいかも！</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">MoneyType</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Type</span><span class="o">::</span><span class="nb">Integer</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">type_cast</span><span class="p">(</span><span class="n">value</span><span class="p">)</span>
</span><span class='line'>    <span class="k">if</span> <span class="n">value</span><span class="o">.</span><span class="n">include?</span><span class="p">(</span><span class="s1">&#39;$&#39;</span><span class="p">)</span>
</span><span class='line'>      <span class="n">price_in_dollars</span> <span class="o">=</span> <span class="n">value</span><span class="o">.</span><span class="n">gsub</span><span class="p">(</span><span class="sr">/\$/</span><span class="p">,</span> <span class="s1">&#39;&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">to_f</span>
</span><span class='line'>      <span class="n">price_in_dollars</span> <span class="o">*</span> <span class="mi">100</span>
</span><span class='line'>    <span class="k">else</span>
</span><span class='line'>      <span class="n">value</span><span class="o">.</span><span class="n">to_i</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># クラスに設定</span>
</span><span class='line'><span class="k">class</span> <span class="nc">StoreListing</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span>
</span><span class='line'>  <span class="n">attribute</span> <span class="ss">:price_in_cents</span><span class="p">,</span> <span class="no">MoneyType</span><span class="o">.</span><span class="n">new</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># 変換した結果を返す</span>
</span><span class='line'><span class="n">store_listing</span> <span class="o">=</span> <span class="no">StoreListing</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="n">price_in_cents</span><span class="p">:</span> <span class="s1">&#39;$10.00&#39;</span><span class="p">)</span>
</span><span class='line'><span class="n">store_listing</span><span class="o">.</span><span class="n">price_in_cents</span> <span class="c1"># =&gt; 1000</span>
</span></code></pre></td></tr></table></div></figure>


<p>実用性も高いし、これは地味にかなりありがたい機能。</p>

<p>ちなみに、こんな使い方もできるそうで。。。夢が広がりんぐ。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Money</span> <span class="o">&lt;</span> <span class="no">Struct</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="ss">:amount</span><span class="p">,</span> <span class="ss">:currency</span><span class="p">)</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">MoneyType</span> <span class="o">&lt;</span> <span class="no">Type</span><span class="o">::</span><span class="no">Value</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">initialize</span><span class="p">(</span><span class="n">currency_converter</span><span class="p">)</span>
</span><span class='line'>    <span class="vi">@currency_converter</span> <span class="o">=</span> <span class="n">currency_converter</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">type_cast_for_database</span><span class="p">(</span><span class="n">value</span><span class="p">)</span>
</span><span class='line'>    <span class="n">value_in_bitcoins</span> <span class="o">=</span> <span class="n">currency_converter</span><span class="o">.</span><span class="n">convert_to_bitcoins</span><span class="p">(</span><span class="n">value</span><span class="p">)</span>
</span><span class='line'>    <span class="n">value_in_bitcoins</span><span class="o">.</span><span class="n">amount</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">Product</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span>
</span><span class='line'>  <span class="n">currency_converter</span> <span class="o">=</span> <span class="no">ConversionRatesFromTheInternet</span><span class="o">.</span><span class="n">new</span>
</span><span class='line'>  <span class="n">attribute</span> <span class="ss">:price_in_bitcoins</span><span class="p">,</span> <span class="no">MoneyType</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="n">currency_converter</span><span class="p">)</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="no">Product</span><span class="o">.</span><span class="n">where</span><span class="p">(</span><span class="n">price_in_bitcoins</span><span class="p">:</span> <span class="no">Money</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="mi">5</span><span class="p">,</span> <span class="s2">&quot;USD&quot;</span><span class="p">))</span>
</span><span class='line'><span class="c1"># =&gt; SELECT * FROM products WHERE price_in_bitcoins = 0.02230</span>
</span><span class='line'>
</span><span class='line'><span class="no">Product</span><span class="o">.</span><span class="n">where</span><span class="p">(</span><span class="n">price_in_bitcoins</span><span class="p">:</span> <span class="no">Money</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="mi">5</span><span class="p">,</span> <span class="s2">&quot;GBP&quot;</span><span class="p">))</span>
</span><span class='line'><span class="c1"># =&gt; SELECT * FROM products WHERE price_in_bitcoins = 0.03412</span>
</span></code></pre></td></tr></table></div></figure>


<h2>その他変更点</h2>

<pre>
- rake db:migrate => rails db:migrate に変更
- テストの failures 情報が見やすくなる
- 抽象クラスの ApplicationRecord をベースにするようになりました
- ActiveRecord::Relation#in_batches を扱いやすくしてメモリの使いすぎを防ぐ
</pre>


<h2>CHANGELOG</h2>

<ul>
<li><a href="https://github.com/rails/rails/blob/v5.0.0.beta1/actionpack/CHANGELOG.md">Action Pack CHANGELOG</a></li>
<li><a href="https://github.com/rails/rails/blob/v5.0.0.beta1/actionmailer/CHANGELOG.md">Action Mailer CHANGELOG</a></li>
<li><a href="https://github.com/rails/rails/blob/v5.0.0.beta1/actionview/CHANGELOG.md">Action View CHANGELOG</a></li>
<li><a href="https://github.com/rails/rails/blob/v5.0.0.beta1/activerecord/CHANGELOG.md">ActiveRecod CHANGELOG</a></li>
<li><a href="https://github.com/rails/rails/blob/v5.0.0.beta1/activemodel/CHANGELOG.md">Active Model CHANGELOG</a></li>
<li><a href="https://github.com/rails/rails/blob/v5.0.0.beta1/activerecord/CHANGELOG.md">Active Record CHANGELOG</a></li>
<li><a href="https://github.com/rails/rails/blob/v5.0.0.beta1/activesupport/CHANGELOG.md">Active Support CHANGELOG</a></li>
<li><a href="https://github.com/rails/rails/blob/v5.0.0.beta1/activejob/CHANGELOG.md">Active Job CHANGELOG</a></li>
<li><a href="https://github.com/rails/rails/blob/v5.0.0.beta1/railties/CHANGELOG.md">Railties CHANGELOG</a></li>
</ul>


<h2>余談: Turbolinks 5</h2>

<p>ネイティブのiOSとAndroidのラッパー実装として、『<strong><a href="https://github.com/basecamp/turbolinks/tree/v5">basecamp/turbolinks/v5 - GitHub</a></strong>』
を新しく作っているらしいです。まだどんな実装なのかはわかりませんが、新しい試みで面白そう。</p>

<h2>Special Thanks</h2>

<ul>
<li><strong><a href="http://qiita.com/jnchito/items/6a93320334c48b967dfb">Rails 5.0で追加される主な新機能（Ruby on Rails公式ブログより） - Qiita</a></strong></li>
<li><strong><a href="http://www.slideshare.net/KenichiTachibana/a-huge-change-rails-5-is-approaching-fast">A HUGE CHANGE RAILS 5 IS APPROACHING FAST</a></strong></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[carrierwave + rails 4.2.5 画像アップローダー]]></title>
    <link href="http://morizyun.github.io/blog/carrierwave-image-uploader-rails/"/>
    <updated>2016-01-31T09:50:00+09:00</updated>
    <id>http://morizyun.github.io/blog/carrierwave-image-uploader-rails</id>
    <content type="html"><![CDATA[<p><a href="http://www.amazon.co.jp/gp/product/488337968X/ref=as_li_qf_sp_asin_il?ie=UTF8&camp=247&creative=1211&creativeASIN=488337968X&linkCode=as2&tag=morizyun00-22"><img border="0" src="http://ws.assoc-amazon.jp/widgets/q?_encoding=UTF8&ASIN=488337968X&Format=_SL160_&ID=AsinImage&MarketPlace=JP&ServiceVersion=20070822&WS=1&tag=morizyun00-22" width="150" style="float: left; margin: 0 20px 20px 0;" ></a><img src="http://www.assoc-amazon.jp/e/ir?t=morizyun00-22&l=as2&o=9&a=488337968X" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" />
今回は、carrierwave + rails 4.2.5.1で作る簡単画像アップローダーの作成ネタです。目次はこんなかんじです！</p>

<pre>
(1) carrierwave + rails 4.2.5.1で作る簡単画像アップローダーを作る
(2) simple_formと組み合わせる
(3) アップロード画像のサイズのvalidationを行う
</pre>




<!-- more -->


<br style="clear:both;"/>


<h2>前置き</h2>

<pre>
(A) Model product.imageカラムをcarrierwave対応
(B) carrierwaveのアップローダはImageUploader
</pre>


<h2>(1) carrierwave + rails 4.1で作る簡単画像アップローダーを作る</h2>

<h3>ImageMagickのインストール</h3>

<p>Macの場合は以下のコマンドをコマンドラインから実行。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>brew install imagemagick
</span></code></pre></td></tr></table></div></figure>




<script async src="http://morizyun.github.io//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<!-- square -->


<p><ins class="adsbygoogle" style="display:inline-block;width:336px;height:280px" data-ad-client="ca-pub-4186413323075068" data-ad-slot="5059873392"></ins></p>

<script>
    (adsbygoogle = window.adsbygoogle || []).push({});
</script>


<h3>Gemfileの登録</h3>

<p><code>Gemfile</code>に以下を追加して、<code>bundle install</code>を実行。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># Image Uploader</span>
</span><span class='line'><span class="n">gem</span> <span class="s1">&#39;carrierwave&#39;</span>
</span><span class='line'><span class="n">gem</span> <span class="s1">&#39;rmagick&#39;</span><span class="p">,</span> <span class="nb">require</span><span class="p">:</span> <span class="s1">&#39;RMagick&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<h3>carrierwaveのアップローダーを作成</h3>

<p>次のコマンドを実行すると、<code>app/uploaders/image_uploader.rb</code>が作成されます。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># scaffold で Productに関する一式を作成</span>
</span><span class='line'><span class="n">rails</span> <span class="n">g</span> <span class="n">scaffold</span> <span class="n">product</span> <span class="nb">name</span><span class="ss">:string</span> <span class="n">image</span><span class="ss">:text</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># アップローダーを作成</span>
</span><span class='line'><span class="n">rails</span> <span class="n">g</span> <span class="n">uploader</span> <span class="n">image</span>
</span></code></pre></td></tr></table></div></figure>


<h3>アップローダーの記述を修正</h3>

<p>先ほど生成された<code>image_uploader.rb</code>を以下のように書き換えます。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># app/uploaders/image_uploader.rb</span>
</span><span class='line'><span class="k">class</span> <span class="nc">ImageUploader</span> <span class="o">&lt;</span> <span class="no">CarrierWave</span><span class="o">::</span><span class="no">Uploader</span><span class="o">::</span><span class="no">Base</span>
</span><span class='line'>  <span class="kp">include</span> <span class="no">CarrierWave</span><span class="o">::</span><span class="no">RMagick</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">storage</span> <span class="ss">:file</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">process</span> <span class="n">convert</span><span class="p">:</span> <span class="s1">&#39;jpg&#39;</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1"># 保存するディレクトリ名</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">store_dir</span>
</span><span class='line'>    <span class="s2">&quot;uploads/</span><span class="si">#{</span><span class="n">model</span><span class="o">.</span><span class="n">class</span><span class="o">.</span><span class="n">to_s</span><span class="o">.</span><span class="n">underscore</span><span class="si">}</span><span class="s2">/</span><span class="si">#{</span><span class="n">mounted_as</span><span class="si">}</span><span class="s2">/</span><span class="si">#{</span><span class="n">model</span><span class="o">.</span><span class="n">id</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1"># thumb バージョン(width 400px x height 200px)</span>
</span><span class='line'>  <span class="n">version</span> <span class="ss">:thumb</span> <span class="k">do</span>
</span><span class='line'>    <span class="n">process</span> <span class="ss">:resize_to_fit</span> <span class="o">=&gt;</span> <span class="o">[</span><span class="mi">400</span><span class="p">,</span> <span class="mi">200</span><span class="o">]</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1"># 許可する画像の拡張子</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">extension_white_list</span>
</span><span class='line'>    <span class="sx">%w(jpg jpeg gif png)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1"># 変換したファイルのファイル名の規則</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">filename</span>
</span><span class='line'>    <span class="s2">&quot;</span><span class="si">#{</span><span class="no">Time</span><span class="o">.</span><span class="n">now</span><span class="o">.</span><span class="n">strftime</span><span class="p">(</span><span class="s1">&#39;%Y%m%d%H%M%S&#39;</span><span class="p">)</span><span class="si">}</span><span class="s2">.jpg&quot;</span> <span class="k">if</span> <span class="n">original_filename</span><span class="o">.</span><span class="n">present?</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Modelのカラムにアップローダーを紐付け</h3>

<p>Model <code>Product.image</code> と、アップローダー <code>ImageUploader</code> とをひも付け。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># app/models/product.rb</span>
</span><span class='line'><span class="n">model</span> <span class="no">Product</span>
</span><span class='line'>  <span class="c1"># ↓ 以下を追加</span>
</span><span class='line'>  <span class="n">mount_uploader</span> <span class="ss">:image</span><span class="p">,</span> <span class="no">ImageUploader</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h3>view/formへの追加</h3>

<p>viewのformに以下を追加。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># app/views/products/_form.html.haml</span>
</span><span class='line'><span class="n">form_for</span><span class="p">(</span><span class="vi">@product</span><span class="p">)</span> <span class="k">do</span> <span class="o">|</span><span class="n">f</span><span class="o">|</span>
</span><span class='line'>  <span class="c1"># ↓ 以下を追加</span>
</span><span class='line'>  <span class="o">=</span> <span class="n">f</span><span class="o">.</span><span class="n">file_field</span> <span class="ss">:image</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h3>view 表示側への追記</h3>

<p>アップロードした画像をviewで表示させる場合は以下を追記してください。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># app/views/products/show.html.haml</span>
</span><span class='line'><span class="o">=</span> <span class="n">image_tag</span> <span class="vc">@@product</span><span class="o">.</span><span class="n">image_url</span><span class="p">(</span><span class="ss">:thumb</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>以下を追加して、テーブルを作成。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">bundle</span> <span class="n">exce</span> <span class="n">rake</span> <span class="n">db</span><span class="ss">:migrate</span>
</span></code></pre></td></tr></table></div></figure>




<script async src="http://morizyun.github.io//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<!-- square -->


<p><ins class="adsbygoogle" style="display:inline-block;width:336px;height:280px" data-ad-client="ca-pub-4186413323075068" data-ad-slot="5059873392"></ins></p>

<script>
    (adsbygoogle = window.adsbygoogle || []).push({});
</script>


<h2>(2) simple_formでプレビュー表示させる場合</h2>

<p>『<strong><a href="https://github.com/plataformatec/simple_form">simple_form</a></strong>』はformの記述がスッキリするgemです。
この<code>simple_form</code>と<code>carrierwave</code>を連携させる手順です。</p>

<h3>Gemfileの登録</h3>

<p><code>Gemfile</code>に以下を追加して、<code>bundle install</code>を実行。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># Image Uploader</span>
</span><span class='line'><span class="n">gem</span> <span class="s1">&#39;simple_form&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>以下のコードを書きます。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># app/inputs/image_preview_input.rb</span>
</span><span class='line'><span class="k">class</span> <span class="nc">ImagePreviewInput</span> <span class="o">&lt;</span> <span class="no">SimpleForm</span><span class="o">::</span><span class="no">Inputs</span><span class="o">::</span><span class="no">FileInput</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">input</span>
</span><span class='line'>    <span class="c1"># :preview_version is a custom attribute from :input_html hash, so you can pick custom sizes</span>
</span><span class='line'>    <span class="n">version</span> <span class="o">=</span> <span class="n">input_html_options</span><span class="o">.</span><span class="n">delete</span><span class="p">(</span><span class="ss">:preview_version</span><span class="p">)</span>
</span><span class='line'>    <span class="n">out</span> <span class="o">=</span> <span class="s1">&#39;&#39;</span> <span class="c1"># the output string we&#39;re going to build</span>
</span><span class='line'>    <span class="c1"># check if there&#39;s an uploaded file (eg: edit mode or form not saved)</span>
</span><span class='line'>    <span class="k">if</span> <span class="n">object</span><span class="o">.</span><span class="n">send</span><span class="p">(</span><span class="s2">&quot;</span><span class="si">#{</span><span class="n">attribute_name</span><span class="si">}</span><span class="s2">?&quot;</span><span class="p">)</span>
</span><span class='line'>      <span class="c1"># append preview image to output</span>
</span><span class='line'>      <span class="n">out</span> <span class="o">&lt;&lt;</span> <span class="n">template</span><span class="o">.</span><span class="n">image_tag</span><span class="p">(</span><span class="n">object</span><span class="o">.</span><span class="n">send</span><span class="p">(</span><span class="n">attribute_name</span><span class="p">)</span><span class="o">.</span><span class="n">tap</span> <span class="p">{</span><span class="o">|</span><span class="n">o</span><span class="o">|</span> <span class="k">break</span> <span class="n">o</span><span class="o">.</span><span class="n">send</span><span class="p">(</span><span class="n">version</span><span class="p">)</span> <span class="k">if</span> <span class="n">version</span><span class="p">}</span><span class="o">.</span><span class="n">send</span><span class="p">(</span><span class="s1">&#39;url&#39;</span><span class="p">))</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>    <span class="c1"># allow multiple submissions without losing the tmp version</span>
</span><span class='line'>    <span class="n">out</span> <span class="o">&lt;&lt;</span> <span class="vi">@builder</span><span class="o">.</span><span class="n">hidden_field</span><span class="p">(</span><span class="s2">&quot;</span><span class="si">#{</span><span class="n">attribute_name</span><span class="si">}</span><span class="s2">_cache&quot;</span><span class="p">)</span><span class="o">.</span><span class="n">html_safe</span>
</span><span class='line'>    <span class="c1"># append file input. it will work accordingly with your simple_form wrappers</span>
</span><span class='line'>    <span class="p">(</span><span class="n">out</span> <span class="o">&lt;&lt;</span> <span class="vi">@builder</span><span class="o">.</span><span class="n">file_field</span><span class="p">(</span><span class="n">attribute_name</span><span class="p">,</span> <span class="n">input_html_options</span><span class="p">))</span><span class="o">.</span><span class="n">html_safe</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>でもって <code>form</code> 側は次のように書きます。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># app/views/products/_form.html.haml</span>
</span><span class='line'><span class="c1"># ↓ こんな感じでコードを修正</span>
</span><span class='line'><span class="o">=</span> <span class="n">simple_form_for</span> <span class="vi">@product</span> <span class="k">do</span> <span class="o">|</span><span class="n">f</span><span class="o">|</span>
</span><span class='line'>  <span class="o">=</span> <span class="n">f</span><span class="o">.</span><span class="n">input</span> <span class="ss">:image</span><span class="p">,</span> <span class="n">as</span><span class="p">:</span> <span class="ss">:image_preview</span><span class="p">,</span> <span class="n">input_html</span><span class="p">:</span> <span class="p">{</span> <span class="n">preview_version</span><span class="p">:</span> <span class="ss">:thumb</span> <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>すると、アップロード済のデータを編集する際に、formでpreview画像が表示されるようになります。</p>

<script async src="http://morizyun.github.io//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<!-- square -->


<p><ins class="adsbygoogle" style="display:inline-block;width:336px;height:280px" data-ad-client="ca-pub-4186413323075068" data-ad-slot="5059873392"></ins></p>

<script>
    (adsbygoogle = window.adsbygoogle || []).push({});
</script>


<h2>(3) アップロード画像のサイズのvalidationを行う</h2>

<p>アップロードする画像のサイズをチェックするバリデーション(validation)です。今回は幅400px, 高さ400pxより小さい場合にバリデーションでエラーが出るようにします。</p>

<p>まずはバリデーションの記述を追記。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># app/models/product.rb</span>
</span><span class='line'><span class="k">class</span> <span class="nc">Product</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span>
</span><span class='line'>  <span class="c1"># ↓ これらを追記</span>
</span><span class='line'>  <span class="c1"># ------------------------------------------------------------------</span>
</span><span class='line'>  <span class="c1"># Validations</span>
</span><span class='line'>  <span class="c1"># ------------------------------------------------------------------</span>
</span><span class='line'>  <span class="n">validate</span> <span class="k">def</span> <span class="nf">check_image_dimensions</span>
</span><span class='line'>    <span class="no">Rails</span><span class="o">.</span><span class="n">logger</span><span class="o">.</span><span class="n">info</span> <span class="s2">&quot;Image upload dimensions: </span><span class="si">#{</span><span class="n">geometry</span><span class="o">[</span><span class="ss">:width</span><span class="o">]</span><span class="si">}</span><span class="s2">x</span><span class="si">#{</span><span class="n">geometry</span><span class="o">[</span><span class="ss">:height</span><span class="o">]</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>    <span class="k">if</span> <span class="n">geometry</span><span class="o">[</span><span class="ss">:width</span><span class="o">]</span> <span class="o">&lt;</span> <span class="mi">400</span> <span class="o">||</span> <span class="n">geometry</span><span class="o">[</span><span class="ss">:height</span><span class="o">]</span> <span class="o">&lt;</span> <span class="mi">400</span>
</span><span class='line'>      <span class="n">errors</span><span class="o">.</span><span class="n">add</span> <span class="ss">:image</span><span class="p">,</span> <span class="s1">&#39;400x400ピクセル以上のサイズの画像をアップロードしてください&#39;</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1"># ------------------------------------------------------------------</span>
</span><span class='line'>  <span class="c1"># Public Instance Methods</span>
</span><span class='line'>  <span class="c1"># ------------------------------------------------------------------</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">geometry</span>
</span><span class='line'>    <span class="vi">@geometry</span> <span class="o">||=</span> <span class="n">_geometry</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="kp">private</span>
</span><span class='line'>  <span class="c1"># ------------------------------------------------------------------</span>
</span><span class='line'>  <span class="c1"># Private Instance Methods</span>
</span><span class='line'>  <span class="c1"># ------------------------------------------------------------------</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">_geometry</span>
</span><span class='line'>    <span class="k">if</span> <span class="n">image</span><span class="o">.</span><span class="n">file</span> <span class="ow">and</span> <span class="no">File</span><span class="o">.</span><span class="n">exists?</span><span class="p">(</span><span class="n">image</span><span class="o">.</span><span class="n">file</span><span class="o">.</span><span class="n">file</span><span class="p">)</span>
</span><span class='line'>      <span class="n">img</span> <span class="o">=</span> <span class="o">::</span><span class="no">Magick</span><span class="o">::</span><span class="no">Image</span><span class="o">::</span><span class="n">read</span><span class="p">(</span><span class="n">image</span><span class="o">.</span><span class="n">file</span><span class="o">.</span><span class="n">file</span><span class="p">)</span><span class="o">.</span><span class="n">first</span>
</span><span class='line'>      <span class="p">{</span> <span class="n">width</span><span class="p">:</span> <span class="n">img</span><span class="o">.</span><span class="n">columns</span><span class="p">,</span> <span class="n">height</span><span class="p">:</span> <span class="n">img</span><span class="o">.</span><span class="n">rows</span> <span class="p">}</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>これで、アップロードした画像が幅400px, 高さ400pxより小さい場合はエラーが出るようになります。</p>

<h2>Special Thanks</h2>

<ul>
<li><strong><a href="https://github.com/carrierwaveuploader/carrierwave/wiki/how-to:-validate-attachment-file-size">How to: Validate attachment file size · carrierwaveuploader/carrierwave Wiki</a></strong></li>
<li><strong><a href="https://github.com/carrierwaveuploader/carrierwave/wiki/How-to:-Get-image-dimensions">How to: Get image dimensions · carrierwaveuploader/carrierwave Wiki</a></strong></li>
<li><strong><a href="https://github.com/plataformatec/simple_form/wiki/Adding-custom-input-components">Adding custom input components · plataformatec/simple_form Wiki</a></strong></li>
<li><strong><a href="http://sinapps.hatenablog.jp/entry/2013/10/07/%E3%80%90Rails_4%E3%80%915%E5%88%86%E3%81%A7%E4%BD%9C%E3%82%8B%E7%94%BB%E5%83%8F%E3%82%A2%E3%83%83%E3%83%97%E3%83%AD%E3%83%BC%E3%83%80%E3%83%BC">【Rails 4】5分で作る画像アップローダー - Sinapps&#8217;s blog</a></strong></li>
<li><strong><a href="http://www.workabroad.jp/tech/1118">Rails 超お手軽な画像アップローダー CarrierWave の使い方 | Workabroad.jp</a></strong></li>
</ul>


<h2>変更来歴</h2>

<p>(2014-07-05 21:55) 新規作成<br/>
(2014-07-06 09:30) 記述修正<br/>
(2016-01-31 09:50) 4.2.5.1対応<br/></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rails へのコントリビューションについて調べてみた]]></title>
    <link href="http://morizyun.github.io/blog/contributing-ruby-on-rails/"/>
    <updated>2016-01-30T10:20:00+09:00</updated>
    <id>http://morizyun.github.io/blog/contributing-ruby-on-rails</id>
    <content type="html"><![CDATA[<p><a href="http://www.amazon.co.jp/gp/product/4873117437/ref=as_li_qf_sp_asin_il?ie=UTF8&camp=247&creative=1211&creativeASIN=4873117437&linkCode=as2&tag=morizyun00-22"><img border="0" src="http://ws.assoc-amazon.jp/widgets/q?_encoding=UTF8&ASIN=4873117437&Format=_SL160_&ID=AsinImage&MarketPlace=JP&ServiceVersion=20070822&WS=1&tag=morizyun00-22" width="150" style="float: left; margin: 0 20px 20px 0;" ></a><img src="http://www.assoc-amazon.jp/e/ir?t=morizyun00-22&l=as2&o=9&a=4873117437" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" />Rails へのコントリビューションに関する以下のドキュメントを読んでみました。</p>

<ul>
<li>(英語) <strong><a href="http://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html">Contributing to Ruby on Rails — Ruby on Rails Guides</a></strong></li>
<li>(日本語) <strong><a href="http://railsguides.jp/contributing_to_ruby_on_rails.html">Ruby on Rails に貢献する方法 | Rails ガイド</a></strong></li>
</ul>


<p>この中で特に参考になった部分を中心に書いていきます。</p>

<!-- more -->


<br style="clear:both;"/>


<h2>コントリビューションの基礎</h2>

<ul>
<li>Ruby On Railsのバグを見つけたら「<strong><a href="https://github.com/rails/rails/issues">Issues · rails/rails - GitHub</a></strong>」で既存のものがないか探して、無ければPOST</li>
<li>最新版(edge)はバグがある可能性があるし、バグが有った場合に取り込まれやすいのでコントリビュートのチャンスが多い。コントリビュートのチャンスが多い</li>
</ul>


<h2>セキュリティの問題が見つかった場合</h2>

<ul>
<li>GitHub ISSUEにあげてはダメ(悪用される可能性があるから)</li>
<li>「<strong><a href="http://rubyonrails.org/security/">Ruby on Rails: Security policy</a></strong>」あたりにセキュリティのISSUEの立て方が書かれています。</li>
</ul>


<h2>バグなどのISSUE</h2>

<ul>
<li>ISSUEには再現可能なサンプルコードをつけよう</li>
<li>実行可能なテストケースをちゃんと作ろう。テストケースのテンプレートを活用しよう => <strong><a href="http://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case">1.2 Create an Executable Test Case - Ruby on Rails Guide Contributing to Ruby on Railss</a></strong></li>
<li>テストケースは、gistなどに貼って使おう</li>
<li>バグの調査に役立つ情報があれば、ISSUEに書き込もう</li>
<li>failするテストはコントリビュートのチャンスだ</li>
</ul>


<h3>テストバッチ</h3>

<ul>
<li>forkしてテストパッチを作ろう

<ul>
<li>変更が確実に動作しているかを確認しよう</li>
<li>テストによってより良くなっているか？変更点のテストがきちんと存在しているか？</li>
<li>ドキュメンテーションが適切にアップデートされているか？</li>
<li>変更点はコードとして適切で、高速に動作するか？</li>
</ul>
</li>
</ul>


<h2>Gistのテンプレート</h2>

<p><code>ActiveRecord</code> や <code>ActionController</code> のgistテンプレートのです。バグをレポートするときに使います。</p>

<ul>
<li><strong><a href="https://github.com/rails/rails/blob/master/guides/bug_report_templates/active_record_gem.rb">Active Record template for gems</a></strong></li>
<li><strong><a href="https://github.com/rails/rails/blob/master/guides/bug_report_templates/action_controller_gem.rb">Action Controller template for gems</a></strong></li>
<li><strong><a href="https://github.com/rails/rails/blob/master/guides/bug_report_templates/active_record_master.rb">Active Record template for master</a></strong></li>
<li><strong><a href="https://github.com/rails/rails/blob/master/guides/bug_report_templates/action_controller_master.rb">Action Controller template for master</a></strong></li>
</ul>


<h2>機能追加のリクエストについて</h2>

<ul>
<li>必ず動作するパッチを作ってGitHubにISSUEを作ろう(動作するパッチがない場合はinvalidになる)</li>
<li>機能追加は他の機能に影響を与える可能性があるのでコアチームによって判断される</li>
<li>アイデアを相談したいときは「<strong><a href="https://groups.google.com/forum/?fromgroups#!forum/rubyonrails-core">rails-core mailing list</a></strong>」に投げてみよう</li>
</ul>


<script async src="http://morizyun.github.io//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<!-- square -->


<p><ins class="adsbygoogle" style="display:inline-block;width:336px;height:280px" data-ad-client="ca-pub-4186413323075068" data-ad-slot="5059873392"></ins></p>

<script>
    (adsbygoogle = window.adsbygoogle || []).push({});
</script>


<h3>健全性のチェック</h3>

<p>もしRails開発者の知り合いがいるなら、予め修正したコードをみせることで、
適切なコードか否かをちゃんとチェックしよう。</p>

<h3>Feedbackを受けよう</h3>

<p>Merge Request を出したら、幾つかのフィードバックや意見が来るので対応しよう。
マイナーチェンジは悪いことじゃないのでポジティブに意見を受け入れよう。
あまりにも Merge Request に反応がないようなら、MLにPostしてみよう。</p>

<h2>コードを書くときの注意点</h2>

<p>バグフィックスや機能追加でコードを書く際には以下の点に注意しよう。</p>

<pre>
- 正しいコードを書こう
- Railsのイデオム/Helperを適切に書こう
- テストが通過しない場合は、テストが通過するように修正しよう
- 変更点に関するドキュメントもアップデートをお忘れなく
</pre>


<h2>Railsのcoding style</h2>

<pre>
- 2スペースを使う。タブは使わない
- 不要なスペースをつけないようにしよう
- private/protectedの後はindentをつけよう
- 1.9以降のhashシンタックス { a: b } を使おう
- `&&` や `||` を使おう
- `class << self` を使おう
- `MyClass.my_method(my_arg)` が望ましい
- `a = b` としよう
- `assert_not` を使おう
- `{ do_stuff }` としよう
</pre>


<h2>パフォーマンスに影響する変更</h2>

<ul>
<li>gem 「<strong><a href="https://github.com/evanphx/benchmark-ips">benchmark-ips</a></strong> 等を利用してベンチマークを取ること。</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s1">&#39;benchmark/ips&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="no">Benchmark</span><span class="o">.</span><span class="n">ips</span> <span class="k">do</span> <span class="o">|</span><span class="n">x</span><span class="o">|</span>
</span><span class='line'>  <span class="n">x</span><span class="o">.</span><span class="n">report</span><span class="p">(</span><span class="s1">&#39;addition&#39;</span><span class="p">)</span> <span class="p">{</span> <span class="mi">1</span> <span class="o">+</span> <span class="mi">2</span> <span class="p">}</span>
</span><span class='line'>  <span class="n">x</span><span class="o">.</span><span class="n">report</span><span class="p">(</span><span class="s1">&#39;addition with send&#39;</span><span class="p">)</span> <span class="p">{</span> <span class="mi">1</span><span class="o">.</span><span class="n">send</span><span class="p">(</span><span class="ss">:+</span><span class="p">,</span> <span class="mi">2</span><span class="p">)</span> <span class="p">}</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="no">Calculating</span> <span class="o">-------------------------------------</span>
</span><span class='line'>            <span class="n">addition</span>   <span class="mi">132</span><span class="o">.</span><span class="mo">013</span><span class="n">k</span> <span class="n">i</span><span class="o">/</span><span class="mi">100</span><span class="n">ms</span>
</span><span class='line'>  <span class="n">addition</span> <span class="n">with</span> <span class="nb">send</span>   <span class="mi">125</span><span class="o">.</span><span class="mi">413</span><span class="n">k</span> <span class="n">i</span><span class="o">/</span><span class="mi">100</span><span class="n">ms</span>
</span><span class='line'><span class="o">-------------------------------------------------</span>
</span><span class='line'>            <span class="n">addition</span>      <span class="mi">9</span><span class="o">.</span><span class="mi">677</span><span class="n">M</span> <span class="p">(</span><span class="err">±</span> <span class="mi">1</span><span class="o">.</span><span class="mi">7</span><span class="sx">%) i/s -     48.449M</span>
</span><span class='line'><span class="sx">  addition with send      6.794M (± 1.1%)</span> <span class="n">i</span><span class="o">/</span><span class="n">s</span> <span class="o">-</span>     <span class="mi">33</span><span class="o">.</span><span class="mi">987</span><span class="n">M</span>
</span></code></pre></td></tr></table></div></figure>


<h2>テストの実行</h2>

<p>テストの実行方法は次の通り。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># Rails 全体のテスト</span>
</span><span class='line'><span class="err">$</span> <span class="n">cd</span> <span class="n">rails</span>
</span><span class='line'><span class="err">$</span> <span class="n">bundle</span> <span class="nb">exec</span> <span class="n">rake</span> <span class="nb">test</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># ActionMailerに関するテスト</span>
</span><span class='line'><span class="err">$</span> <span class="n">cd</span> <span class="n">actionmailer</span>
</span><span class='line'><span class="err">$</span> <span class="n">bundle</span> <span class="nb">exec</span> <span class="n">rake</span> <span class="nb">test</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># ActiveRecordに関するテスト DBの種類ごとのテストも可能</span>
</span><span class='line'><span class="err">$</span> <span class="n">cd</span> <span class="n">activerecord</span>
</span><span class='line'><span class="err">$</span> <span class="n">bundle</span> <span class="nb">exec</span> <span class="n">rake</span> <span class="nb">test</span><span class="ss">:sqlite3</span>
</span><span class='line'><span class="err">$</span> <span class="n">bundle</span> <span class="nb">exec</span> <span class="n">rake</span> <span class="nb">test</span><span class="ss">:mysql2</span>
</span><span class='line'><span class="err">$</span> <span class="n">bundle</span> <span class="nb">exec</span> <span class="n">rake</span> <span class="nb">test</span><span class="ss">:postgresql</span>
</span></code></pre></td></tr></table></div></figure>


<h2>ドキュメンテーション</h2>

<p>Rails には次の2つのドキュメントがある;</p>

<pre>
Ruby on Rails Guides - help you learn about Ruby on Rails,
APIドキュメント - serves as a reference.
</pre>


<p>また、それぞれにガイドラインがあるので読んでみよう。</p>

<ul>
<li><strong><a href="http://guides.rubyonrails.org/api_documentation_guidelines.html">API Documentation Guidelines — Ruby on Rails Guides</a></strong></li>
<li><strong><a href="http://guides.rubyonrails.org/ruby_on_rails_guides_guidelines.html">Ruby on Rails Guides Guidelines — Ruby on Rails Guides</a></strong></li>
</ul>


<p>それから、ドキュメンテーションの変更だけの場合は CI を動かす必要はない。 <code>[ci skip]</code> をつけよう。</p>

<script async src="http://morizyun.github.io//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<!-- square -->


<p><ins class="adsbygoogle" style="display:inline-block;width:336px;height:280px" data-ad-client="ca-pub-4186413323075068" data-ad-slot="5059873392"></ins></p>

<script>
    (adsbygoogle = window.adsbygoogle || []).push({});
</script>


<h2>CHANGELOGをちゃんと更新しよう</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">*</span>   <span class="no">Summary</span> <span class="n">of</span> <span class="n">a</span> <span class="n">change</span> <span class="n">that</span> <span class="n">briefly</span> <span class="n">describes</span> <span class="n">what</span> <span class="n">was</span> <span class="n">changed</span><span class="o">.</span> <span class="no">You</span> <span class="n">can</span> <span class="n">use</span> <span class="n">multiple</span>
</span><span class='line'>    <span class="n">lines</span> <span class="ow">and</span> <span class="n">wrap</span> <span class="n">them</span> <span class="n">at</span> <span class="n">around</span> <span class="mi">80</span> <span class="n">characters</span><span class="o">.</span> <span class="no">Code</span> <span class="n">examples</span> <span class="n">are</span> <span class="n">ok</span><span class="p">,</span> <span class="n">too</span><span class="p">,</span> <span class="k">if</span> <span class="n">needed</span><span class="p">:</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">class</span> <span class="nc">Foo</span>
</span><span class='line'>          <span class="k">def</span> <span class="nf">bar</span>
</span><span class='line'>            <span class="nb">puts</span> <span class="s1">&#39;baz&#39;</span>
</span><span class='line'>          <span class="k">end</span>
</span><span class='line'>        <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="no">You</span> <span class="n">can</span> <span class="n">continue</span> <span class="n">after</span> <span class="n">the</span> <span class="n">code</span> <span class="n">example</span> <span class="ow">and</span> <span class="n">you</span> <span class="n">can</span> <span class="n">attach</span> <span class="n">issue</span> <span class="n">number</span><span class="o">.</span> <span class="no">GH</span><span class="c1">#1234</span>
</span><span class='line'>
</span><span class='line'>    <span class="o">*</span><span class="no">Your</span> <span class="no">Name</span><span class="o">*</span>
</span></code></pre></td></tr></table></div></figure>


<h2>コミットメッセージ</h2>

<p>コミットは1つにsquashしておこう。そして、コミットメッセージも簡単なサマリーをちゃんと書こう。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">Short</span> <span class="n">summary</span> <span class="p">(</span><span class="n">ideally</span> <span class="mi">50</span> <span class="n">characters</span> <span class="ow">or</span> <span class="n">less</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="no">More</span> <span class="n">detailed</span> <span class="n">description</span><span class="p">,</span> <span class="k">if</span> <span class="n">necessary</span><span class="o">.</span> <span class="no">It</span> <span class="n">should</span> <span class="n">be</span> <span class="n">wrapped</span> <span class="n">to</span>
</span><span class='line'><span class="mi">72</span> <span class="n">characters</span><span class="o">.</span> <span class="no">Try</span> <span class="n">to</span> <span class="n">be</span> <span class="n">as</span> <span class="n">descriptive</span> <span class="n">as</span> <span class="n">you</span> <span class="n">can</span><span class="o">.</span> <span class="no">Even</span> <span class="k">if</span> <span class="n">you</span>
</span><span class='line'><span class="n">think</span> <span class="n">that</span> <span class="n">the</span> <span class="n">commit</span> <span class="n">content</span> <span class="n">is</span> <span class="n">obvious</span><span class="p">,</span> <span class="n">it</span> <span class="n">may</span> <span class="ow">not</span> <span class="n">be</span> <span class="n">obvious</span>
</span><span class='line'><span class="n">to</span> <span class="n">others</span><span class="o">.</span> <span class="no">Add</span> <span class="n">any</span> <span class="n">description</span> <span class="n">that</span> <span class="n">is</span> <span class="n">already</span> <span class="n">present</span> <span class="k">in</span> <span class="n">the</span>
</span><span class='line'><span class="n">relevant</span> <span class="n">issues</span><span class="p">;</span> <span class="n">it</span> <span class="n">should</span> <span class="ow">not</span> <span class="n">be</span> <span class="n">necessary</span> <span class="n">to</span> <span class="n">visit</span> <span class="n">a</span> <span class="n">webpage</span>
</span><span class='line'><span class="n">to</span> <span class="n">check</span> <span class="n">the</span> <span class="n">history</span><span class="o">.</span>
</span><span class='line'>
</span><span class='line'><span class="no">The</span> <span class="n">description</span> <span class="n">section</span> <span class="n">can</span> <span class="n">have</span> <span class="n">multiple</span> <span class="n">paragraphs</span><span class="o">.</span>
</span><span class='line'>
</span><span class='line'><span class="no">Code</span> <span class="n">examples</span> <span class="n">can</span> <span class="n">be</span> <span class="n">embedded</span> <span class="n">by</span> <span class="n">indenting</span> <span class="n">them</span> <span class="n">with</span> <span class="mi">4</span> <span class="n">spaces</span><span class="p">:</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">class</span> <span class="nc">ArticlesController</span>
</span><span class='line'>      <span class="k">def</span> <span class="nf">index</span>
</span><span class='line'>        <span class="n">render</span> <span class="n">json</span><span class="p">:</span> <span class="no">Article</span><span class="o">.</span><span class="n">limit</span><span class="p">(</span><span class="mi">10</span><span class="p">)</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="no">You</span> <span class="n">can</span> <span class="n">also</span> <span class="n">add</span> <span class="n">bullet</span> <span class="n">points</span><span class="p">:</span>
</span><span class='line'>
</span><span class='line'><span class="o">-</span> <span class="n">make</span> <span class="n">a</span> <span class="n">bullet</span> <span class="n">point</span> <span class="n">by</span> <span class="n">starting</span> <span class="n">a</span> <span class="n">line</span> <span class="n">with</span> <span class="n">either</span> <span class="n">a</span> <span class="n">dash</span> <span class="p">(</span><span class="o">-</span><span class="p">)</span>
</span><span class='line'>  <span class="ow">or</span> <span class="n">an</span> <span class="n">asterisk</span> <span class="p">(</span><span class="o">*</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="o">-</span> <span class="n">wrap</span> <span class="n">lines</span> <span class="n">at</span> <span class="mi">72</span> <span class="n">characters</span><span class="p">,</span> <span class="ow">and</span> <span class="n">indent</span> <span class="n">any</span> <span class="n">additional</span> <span class="n">lines</span>
</span><span class='line'>  <span class="n">with</span> <span class="mi">2</span> <span class="n">spaces</span> <span class="k">for</span> <span class="n">readability</span>
</span></code></pre></td></tr></table></div></figure>


<p>あと、ちゃんとリベースしておこう。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="err">$</span> <span class="n">git</span> <span class="n">checkout</span> <span class="n">master</span>
</span><span class='line'><span class="err">$</span> <span class="n">git</span> <span class="n">pull</span> <span class="o">--</span><span class="n">rebase</span>
</span><span class='line'>
</span><span class='line'><span class="err">$</span> <span class="n">git</span> <span class="n">checkout</span> <span class="n">my_new_branch</span>
</span><span class='line'><span class="err">$</span> <span class="n">git</span> <span class="n">rebase</span> <span class="n">master</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Forkしよう</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># 自分のリポジトリをForkして作ろう</span>
</span><span class='line'><span class="err">$</span> <span class="n">git</span> <span class="n">remote</span> <span class="n">add</span> <span class="n">mine</span> <span class="n">git</span><span class="vi">@github</span><span class="o">.</span><span class="n">com</span><span class="p">:</span><span class="o">&lt;</span><span class="n">your</span> <span class="n">user</span> <span class="nb">name</span><span class="o">&gt;</span><span class="sr">/rails.git</span>
</span><span class='line'><span class="sr"># 自分のリポジトリへのpush</span>
</span><span class='line'><span class="sr">$ git push mine my_new_branch</span>
</span><span class='line'>
</span><span class='line'><span class="sr"># rails 本家のブランチをremoteに追加</span>
</span><span class='line'><span class="sr">$ git remote add rails git:/</span><span class="o">/</span><span class="n">github</span><span class="o">.</span><span class="n">com</span><span class="o">/</span><span class="n">rails</span><span class="o">/</span><span class="n">rails</span><span class="o">.</span><span class="n">git</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># rails 本家をfetch</span>
</span><span class='line'><span class="err">$</span> <span class="n">git</span> <span class="n">fetch</span> <span class="n">rails</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># rails/masterでリベースしよう</span>
</span><span class='line'><span class="err">$</span> <span class="n">git</span> <span class="n">checkout</span> <span class="n">master</span>
</span><span class='line'><span class="err">$</span> <span class="n">git</span> <span class="n">rebase</span> <span class="n">rails</span><span class="o">/</span><span class="n">master</span>
</span></code></pre></td></tr></table></div></figure>


<h2>バックポーティング(BackPorting)</h2>

<p>次のメジャーリリースまでにHEADの変更を取り込みたい場合は、patchを作って自分のブランチに適用しよう。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># master と HEAD(現在のブランチ)とのdiffを取る</span>
</span><span class='line'><span class="err">$</span> <span class="n">git</span> <span class="n">log</span> <span class="n">master</span><span class="o">.</span><span class="n">.</span><span class="no">HEAD</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># patchを作ろう</span>
</span><span class='line'><span class="err">$</span> <span class="n">git</span> <span class="nb">format</span><span class="o">-</span><span class="n">patch</span> <span class="n">master</span> <span class="o">--</span><span class="n">stdout</span> <span class="o">&gt;</span> <span class="o">~</span><span class="sr">/my_changes.patch</span>
</span><span class='line'>
</span><span class='line'><span class="sr"># 自分のブランチにpatchを適用仕様</span>
</span><span class='line'><span class="sr">$ git checkout -b my_backport_branch 3-2-stable</span>
</span><span class='line'><span class="sr">$ git apply ~/m</span><span class="n">y_changes</span><span class="o">.</span><span class="n">patch</span>
</span></code></pre></td></tr></table></div></figure>


<h2>開発環境の構築</h2>

<ul>
<li>Virtual Boxを使って簡単に構築したい場合 => <strong><a href="https://github.com/rails/rails-dev-box">rails/rails-dev-box: A virtual machine for Ruby on Rails core development - GitHub</a></strong></li>
<li>ローカルに構築したい場合 => <strong><a href="http://guides.rubyonrails.org/development_dependencies_install.html">Development Dependencies Install — Ruby on Rails Guides</a></strong></li>
</ul>


<h2>テスト用のアプリを作る</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="err">$</span> <span class="n">cd</span> <span class="n">rails</span>
</span><span class='line'><span class="err">$</span> <span class="n">bundle</span> <span class="nb">exec</span> <span class="n">rails</span> <span class="kp">new</span> <span class="o">~</span><span class="sr">/my-test-app --dev</span>
</span></code></pre></td></tr></table></div></figure>


<h2>コントリビューターの一覧</h2>

<p><strong><a href="http://contributors.rubyonrails.org/">Rails Contributors</a></strong></p>

<h2>あとがき</h2>

<p>英語のドキュメントを読みながら書いたので間違っている部分も多々あると思います。もしお気づきの点等あれば <strong><a href="https://twitter.com/zyunnosuke">@zyunnosuke</a></strong> まで</p>

<h2>Special Thanks</h2>

<ul>
<li><a href="http://itpro.nikkeibp.co.jp/article/COLUMN/20130314/463563/?ST=oss&amp;P=1">20歳になったRubyを支える人々 - ［Ruby／Railsコミッタ 松田明氏］海外コミュニティとの橋渡しに</a></li>
<li><a href="http://magazine.rubyist.net/?0037-Hotlinks">Rubyist Magazine - Rubyist Hotlinks 【第 29 回】 松田明さん</a></li>
<li><a href="http://thinking-megane.blogspot.jp/2012/09/git-pull-rebase.html">Thinking megane: git pull 時の rebase オプションのススメ</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rails セキュリティフィックス 4.2.5.1, 4.1.14.1, 5.0.0.beta1.1 のメモ]]></title>
    <link href="http://morizyun.github.io/blog/security-fix-rails-4.2.5.1/"/>
    <updated>2016-01-28T22:35:00+09:00</updated>
    <id>http://morizyun.github.io/blog/security-fix-rails-4.2.5.1</id>
    <content type="html"><![CDATA[<p><a href="http://www.amazon.co.jp/gp/product/4797380357/ref=as_li_qf_sp_asin_il?ie=UTF8&camp=247&creative=1211&creativeASIN=4797380357&linkCode=as2&tag=morizyun00-22"><img border="0" src="http://ws.assoc-amazon.jp/widgets/q?_encoding=UTF8&ASIN=4797380357&Format=_SL160_&ID=AsinImage&MarketPlace=JP&ServiceVersion=20070822&WS=1&tag=morizyun00-22" width="150" style="float: left; margin: 0 20px 20px 0;" ></a><img src="http://www.assoc-amazon.jp/e/ir?t=morizyun00-22&l=as2&o=9&a=4797380357" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" />
1/26(火)にRails 4.2.5.1, 4.1.14.1, 5.0.0.beta1.1等のセキュリティフィックスが出たのでそのメモ。</p>

<p><strong><a href="http://weblog.rubyonrails.org/2016/1/25/Rails-5-0-0-beta1-1-4-2-5-1-4-1-14-1-3-2-22-1-and-rails-html-sanitizer-1-0-3-have-been-released/">Riding Rails: Rails 5.0.0.beta1.1, 4.2.5.1, 4.1.14.1, 3.2.22.1, and rails-html-sanitizer 1.0.3 have been released!</a></strong></p>

<!-- more -->


<br style="clear:both;"/>


<h2>ベーシック認証の文字列比較の応答時間での推測を防ぐ</h2>

<p><strong><a href="https://groups.google.com/forum/#!msg/rubyonrails-security/ANv0HDHEC3k/mt7wNGxbFQAJ">[CVE-2015-7576] Timing attack vulnerability in basic authentication in Action Controller</a></strong></p>

<p>ベーシック認証の文字列比較をした時の応答時間で、処理時間が推測されるのを防ぐ。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1">## こっちは直ぐ違うとわかる</span>
</span><span class='line'>  <span class="s2">&quot;foo&quot;</span> <span class="o">==</span> <span class="s2">&quot;bar&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="c1">## 上よりは時間がかかる</span>
</span><span class='line'>  <span class="s2">&quot;foo&quot;</span> <span class="o">==</span> <span class="s2">&quot;fo1&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<h2>DoS(Denial of Service)攻撃でmine-typeを大量に送ったらサーバが落ちてしまう問題の対応</h2>

<p><strong><a href="https://groups.google.com/d/msg/rubyonrails-security/9oLY_FCzvoc/w9oI9XxbFQAJ">CVE-2016-0751 Possible Object Leak and Denial of Service attack in Action Pack</a></strong></p>

<p>mime-typeをglobal cacheしていたため、大量な不正アクセスでメモリを圧迫してサービス停止しないようにするための対策。</p>

<p>ちなみに「mime-type」とはデータの種類を表すコードのことで、画像の <code>image/jpeg</code> やHTMLの <code>text/html</code> などがある。</p>

<h2>allow_destroy: false が効かないバグの修正</h2>

<p><strong><a href="https://groups.google.com/forum/#!msg/rubyonrails-security/cawsWcQ6c8g/tegZtYdbFQAJ">[CVE-2015-7577] Nested attributes rejection proc bypass in Active Record</a></strong></p>

<p><code>accepts_nested_attributes_for</code> をつけて親子クラスを一括で登録、更新する際に <code>allow_destroy: false</code>(削除を許可しない)を設定したにもかかわらず、
proc の <code>:reject_if</code> が優先されて削除される不具合があったのを修正。</p>

<h2>renderにパラメータを渡した場合にアプリ外のファイルが参照できる不具合の対応</h2>

<p><strong><a href="https://groups.google.com/forum/#!msg/rubyonrails-security/335P1DcLG00/OfB9_LhbFQAJ">[CVE-2016-0752] Possible Information Leak Vulnerability in Action View</a></strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">index</span>
</span><span class='line'>  <span class="n">render</span> <span class="n">params</span><span class="o">[</span><span class="ss">:id</span><span class="o">]</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p></p>

<p>上記の様にパラメータを渡した場合に、アプリ外のファイルが参照できてしまう不具合があったので対策。この修正は難しい&#8230;追い切れない&#8230;.orz&#8230;</p>

<h2>Strong Parameterを使わないモデルへのデータの受け渡しでValidationを通すようにする</h2>

<p><strong><a href="https://groups.google.com/forum/#!msg/rubyonrails-security/6jQVC1geukQ/8oYETcxbFQAJ">[CVE-2016-0753] Possible Input Validation Circumvention in Active Model</a></strong></p>

<p>Strong Parameterを使わずに、ActiveRecord等を使う場合に、</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">SomeModel</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="n">unverified_user_input</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>により、Validationを通さずに値が保存できてしまうバグの対応。</p>

<h2>routesに :controller があるとメモリリークするバグの回避</h2>

<p><strong><a href="https://groups.google.com/forum/#!msg/rubyonrails-security/dthJ5wL69JE/YzPnFelbFQAJ">CVE-2015-7581 Object leak vulnerability for wildcard controller routes in Action Pack</a></strong></p>

<p>めっちゃ勉強になります</p>

<h2>rails-html-sanitizerの重要なセキュリティフィックス</h2>

<p>rails-html-sanitizerの重要なセキュリティフィックスが発生しました。</p>

<ul>
<li><strong><a href="https://groups.google.com/d/msg/rubyonrails-security/uh--W4TDwmI/JbvSRpdbFQAJ">CVE-2015-7578 Possible XSS vulnerability in rails-html-sanitizer</a></strong></li>
<li><strong><a href="https://groups.google.com/d/msg/rubyonrails-security/OU9ugTZcbjc/PjEP46pbFQAJ">CVE-2015-7579 XSS vulnerability in rails-html-sanitizer</a></strong></li>
<li><strong><a href="https://groups.google.com/d/msg/rubyonrails-security/uh--W4TDwmI/m_CVZtdbFQAJ">CVE-2015-7580 Possible XSS vulnerability in rails-html-sanitizer</a></strong></li>
</ul>


<script async src="http://morizyun.github.io//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<!-- square -->


<p><ins class="adsbygoogle" style="display:inline-block;width:336px;height:280px" data-ad-client="ca-pub-4186413323075068" data-ad-slot="5059873392"></ins></p>

<script>
    (adsbygoogle = window.adsbygoogle || []).push({});
</script>


<script async src="http://morizyun.github.io//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<!-- square -->


<p><ins class="adsbygoogle" style="display:inline-block;width:336px;height:280px" data-ad-client="ca-pub-4186413323075068" data-ad-slot="5059873392"></ins></p>

<script>
    (adsbygoogle = window.adsbygoogle || []).push({});
</script>


<h2>rails-html-sanitizer 1.0.2 => 1.0.3の差分</h2>

<p>rails-html-sanitizer 1.0.2 => 1.0.3にバージョンアップされた差分はこちら。</p>

<ul>
<li><strong><a href="https://github.com/rails/rails-html-sanitizer/compare/v1.0.2...v1.0.3">Comparing v1.0.2&#8230;v1.0.3 · rails/rails-html-sanitizer</a></strong></li>
</ul>


<p>これにより、<code>rails-html-sanitizer</code> のフィルターがより厳格化される。</p>

<h2>rails 4.2.5.0 => 4.2.5.1 の差分</h2>

<ul>
<li><strong><a href="https://github.com/rails/rails/compare/v4.2.5...v4.2.5.1">Comparing v4.2.5&#8230;v4.2.5.1 · rails/rails</a></strong></li>
</ul>


<h2>4.2.5.1 で RSpec のパフォーマンスが悪くなる？</h2>

<ul>
<li><strong><a href="https://github.com/rspec/rspec-rails/issues/1532">Undefined Method <code>cache</code> in Tests for Rails 4.2.5.1 · Issue #1532 · rspec/rspec-rails - GitHub</a></strong></li>
</ul>


<p>4.2.5.1にした場合、RSpecで上記のエラーがでるようになったそうですが、こちらは対応/Closeされました。
その結果として、RSpecのパフォーマンスが落ちている(処理が遅くなった)人が出ているようです。</p>

<ul>
<li><strong><a href="https://github.com/rspec/rspec-rails/issues/1537">Performance Regression in 3.4.1 · Issue #1537 · rspec/rspec-rails</a></strong></li>
</ul>


<p>本番への適用はもう少しだけ様子を見たほうが良さそうです。</p>

<h2>あとがき</h2>

<p>y_yagiさんのブログ「<strong><a href="http://y-yagi.hatenablog.com/">なるようになるブログ</a></strong>」めっちゃ勉強になる。</p>

<h2>Special Thanks</h2>

<ul>
<li><strong><a href="http://y-yagi.hatenablog.com/entry/2016/01/27/063153">rails commit log流し読み(2016/01/26) - なるようになるブログ</a></strong></li>
<li><strong><a href="http://qiita.com/hmuronaka/items/818c421dc632e3efb7a6">Rails4 - 複数の子レコードを作成・更新する. accepts_nested_attributes_for - Qiita</a></strong></li>
<li><strong><a href="http://qiita.com/umanoda/items/3ceff00aae2309e4f9ba">RubyのGCと仲良くしたい〜WeakRefオブジェクトを削除するぞ編〜 - Qiita</a></strong></li>
<li><strong><a href="http://www.softantenna.com/wp/software/rails-4-2-5-1-released/">「Rails 5.0.0.beta1.1 / 4.2.5.1 / 4.1.14.1 / 3.2.22.1」がリリース – 重要なセキュリティ修正を含む</a></strong></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[redis-rails RailsのセッションをRedisで管理]]></title>
    <link href="http://morizyun.github.io/blog/redis-rails-session-ruby/"/>
    <updated>2016-01-24T23:55:00+09:00</updated>
    <id>http://morizyun.github.io/blog/redis-rails-session-ruby</id>
    <content type="html"><![CDATA[<p><a href="http://www.amazon.co.jp/gp/product/B00ITFOFLS/ref=as_li_qf_sp_asin_il?ie=UTF8&camp=247&creative=1211&creativeASIN=B00ITFOFLS&linkCode=as2&tag=morizyun00-22"><img border="0" src="http://ws.assoc-amazon.jp/widgets/q?_encoding=UTF8&ASIN=B00ITFOFLS&Format=_SL160_&ID=AsinImage&MarketPlace=JP&ServiceVersion=20070822&WS=1&tag=morizyun00-22" width="150" style="float: left; margin: 0 20px 20px 0;" ></a><img src="http://www.assoc-amazon.jp/e/ir?t=morizyun00-22&l=as2&o=9&a=B00ITFOFLS" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" />
サーバーサイドでのセッション管理はセキュリティを向上させたり、通信で無用なCookieを送らない等の意味でメリットがあります。
今回は『<strong><a href="https://github.com/redis-store/redis-rails">redis-store/redis-rails - GitHub</a></strong>』を使う手順のメモです！</p>

<!-- more -->


<br style="clear:both;"/>


<h2>サーバーサイド/クライアントでのセッション管理のPros/Cons</h2>

<p>セッションに関する説明は以下のサイトがおすすめです。注意点としては次の2点と考えられます。</p>

<ul>
<li><strong><a href="http://qiita.com/jkr_2255/items/075d1d518ae7a98141b3">セッション管理の要注意点 - Qiita</a></strong></li>
<li><strong><a href="http://railsguides.jp/security.html">Rails セキュリティガイド | Rails ガイド</a></strong></li>
</ul>


<script async src="http://morizyun.github.io//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<!-- square -->


<p><ins class="adsbygoogle" style="display:inline-block;width:336px;height:280px" data-ad-client="ca-pub-4186413323075068" data-ad-slot="5059873392"></ins></p>

<script>
    (adsbygoogle = window.adsbygoogle || []).push({});
</script>


<script async src="http://morizyun.github.io//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<!-- square -->


<p><ins class="adsbygoogle" style="display:inline-block;width:336px;height:280px" data-ad-client="ca-pub-4186413323075068" data-ad-slot="5059873392"></ins></p>

<script>
    (adsbygoogle = window.adsbygoogle || []).push({});
</script>




<pre>
- セッションの基礎
  - Webアプリでは、接続ごとに固有の識別子(セッションID)を割り当て、一時的なidを割り振る
  - セッションは他のCookieと合わせて通信のたびにやり取りされる
  - Cookieのサイズは4 KBと厳密に定められている

- セッションにおけるセキュリティのリスク
  - 他人のセッションを取得すると他人に一時的になりすましてログインができてしまう
  - セッション/Cookieにデータを保持するとクライアント側でデータを復元出来てしまう

- サーバーサイドでセッションを管理するメリット
  - 通信時にやりとりされるCookieの通信量を減らす

- Rails固有の話
  - Railsではセッションidは、32バイトのMD5ハッシュ値である

- セキュリティ強度を上げるための対策
  - Cookieのsecure属性とSSL => HTTPSでの通信でのみ使い、暗号化
  - Cookieのhttponly属性 => JavaScriptから読み書きさせない
</pre>


<h2>開発環境の準備</h2>

<p>Mac等でのRedisの導入については、拙著
『<strong><a href="http://morizyun.github.io/blog/redis-mac-centos-rails/">CentOS/Mac OSXへのRedis導入手順 - memcacheライクなKey-Value方式と、永続化対応のインメモリDB</a></strong>』
がおすすめです。</p>

<h2>Gemインストール</h2>

<p>Gemfileに以下を追加して、<code>bundle install</code>を実行。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># Gemfile</span>
</span><span class='line'><span class="n">gem</span> <span class="s2">&quot;redis-rails&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<h2>設定の修正</h2>

<p>まずはキャッシュの保存先をRedisに設定。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># config/application.rb</span>
</span><span class='line'><span class="c1"># /cache はアプリ名や、Rails．env等の環境情報をいれてもいいかも</span>
</span><span class='line'><span class="n">config</span><span class="o">.</span><span class="n">cache_store</span> <span class="o">=</span> <span class="ss">:redis_store</span><span class="p">,</span> <span class="s2">&quot;redis://localhost:6379/0/cache&quot;</span><span class="p">,</span> <span class="p">{</span> <span class="n">expires_in</span><span class="p">:</span> <span class="mi">90</span><span class="o">.</span><span class="n">minutes</span> <span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># ちなみに環境変数に入れてしまうのもおすすめです</span>
</span><span class='line'><span class="c1"># config.cache_store = :redis_store, ENV[&#39;REDIS_URL&#39;], { expires_in: 90.minutes }</span>
</span></code></pre></td></tr></table></div></figure>


<p>続いてバックエンドのセッションの保存先を設定。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># config/initializers/session_store.rb</span>
</span><span class='line'><span class="no">MyApplication</span><span class="o">::</span><span class="no">Application</span><span class="o">.</span><span class="n">config</span><span class="o">.</span><span class="n">session_store</span> <span class="ss">:redis_store</span><span class="p">,</span> <span class="n">servers</span><span class="p">:</span> <span class="s2">&quot;redis://localhost:6379/0/cache&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># 環境変数で設定する場合</span>
</span><span class='line'><span class="c1">#MyApplication::Application.config.session_store :redis_store, servers: ENV[&#39;REDIS_URL&#39;]</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Special Thanks</h2>

<ul>
<li><a href="http://qiita.com/Kta-M/items/b4852c849d408e7445c6">RailsのセッションストアとしてRedisを使う(Mac/EC2:AmazonLinux) - Qiita</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Dokku プライベートなherokuを作ってRailsアプリをデプロイ[DegitalOclean]]]></title>
    <link href="http://morizyun.github.io/blog/dokku-postgresql-rails-degitalocean/"/>
    <updated>2016-01-24T19:30:00+09:00</updated>
    <id>http://morizyun.github.io/blog/dokku-postgresql-rails-degitalocean</id>
    <content type="html"><![CDATA[<p><a href="http://www.amazon.co.jp/gp/product/B00C2ONQIU/ref=as_li_qf_sp_asin_il?ie=UTF8&camp=247&creative=1211&creativeASIN=B00C2ONQIU&linkCode=as2&tag=morizyun00-22"><img border="0" src="http://ws.assoc-amazon.jp/widgets/q?_encoding=UTF8&ASIN=B00C2ONQIU&Format=_SL160_&ID=AsinImage&MarketPlace=JP&ServiceVersion=20070822&WS=1&tag=morizyun00-22" width="150" style="float: left; margin: 0 20px 20px 0;" ></a><img src="http://www.assoc-amazon.jp/e/ir?t=morizyun00-22&l=as2&o=9&a=B00C2ONQIU" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" />
herokuライクなプライベートなPaaSを作るためのOSS『<strong><a href="https://github.com/dokku/dokku">dokku/dokku - GitHub</a></strong>』の紹介です。
このDokkuの環境は、「<strong><a href="https://www.digitalocean.com/?refcode=0da417edaeee">DegitalOclean</a></strong>」だと画面から数クリックで作成できるので、
今回は、DegitalOcleanとセットで手順を紹介します。</p>

<p>Dukkuを使うメリットは次の通りです。</p>

<ul>
<li>Heroku ライクにgitにpushしたら、BuildPack的なものを使ってRailsやNode.js, Pythonなどのアプリを展開できる</li>
<li>Dokkuは、PosgreSQLやRedis、ElasticSearchなどのプラグインを数コマンドで使える</li>
</ul>


<p>まだ簡単なアプリをBuildしただけですが、特にハマることもなく安定して使えています！</p>

<!-- more -->


<br style="clear:both;"/>


<script async src="http://morizyun.github.io//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<!-- square -->


<p><ins class="adsbygoogle" style="display:inline-block;width:336px;height:280px" data-ad-client="ca-pub-4186413323075068" data-ad-slot="5059873392"></ins></p>

<script>
    (adsbygoogle = window.adsbygoogle || []).push({});
</script>


<h2>Dokkuを使うモチベーション</h2>

<p>今回Dokkuを使おうと思ったモチベーションはこちら。</p>

<pre>
- 趣味アプリでは、できるだけアプリだけに集中したい
- PosgreSQLやRedis、ElasticSearchなどのプラグインを数コマンドで使えるようになる
- Herokuの無料版の制約を気にせずにアプリ開発したい
  - 1時間以上アクセスしないとスリープになる
  - 6時間/1日はスリープ状態にしないといけない
  - 一定時間以上連続するプロセスがkillされる(はず)
- VPSやクラウドだとミドルウェアの環境構築や、デプロイのセッティングに時間がかかる
</pre>


<p>Herokuはただ乗りフリーライダーの理論ですので、基本ごめんなさいですm(<em> </em>)m
一方で個人の趣味開発は、限られた時間との勝負なのでより効率的な開発手法を模索していて今回
『<strong><a href="https://github.com/dokku/dokku">dokku/dokku - GitHub</a></strong>』を使った方法をトライすることにしました！</p>

<h2>画面からDokkuのDropletを作成</h2>

<p>「<strong><a href="https://www.digitalocean.com/?refcode=0da417edaeee">DegitalOclean</a></strong>」にログインして、Dropletを作成します。
「One-click App」 => 「Dokku v0.4.10 on 14.04」を選んでDropletを作成してください。</p>

<p><img src="https://farm2.staticflickr.com/1475/24142129302_aebd0c8997_c.jpg" width="800" height="701"></p>

<h2>ドメインの設定です。</h2>

<p>自分のDropletを作成して、IP(例 <code>123.123.123.123</code>) にブラウザでアクセス。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>open 123.123.123.123</span></code></pre></td></tr></table></div></figure>


<p>以下を登録してください</p>

<pre>
- 自分のSSHキー
- Custom Domain
- アプリごとのVirtual Host名の利用(onにしていいかも)
</pre>


<p><img src="https://farm2.staticflickr.com/1536/23625078373_5f346892a0.jpg" width="500" height="435" alt="スクリーンショット 2016-01-08 22.43.36"></p>

<p>Custom Domainを登録したら、自分のdomain側の設定を修正して、<code>123.123.123.123</code> を見に行くようにしてください。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>apps.yourdomain.com   A 123.123.123.123
</span><span class='line'>*.apps.yourdomain.com A 123.123.123.123</span></code></pre></td></tr></table></div></figure>


<h2>サーバに入ってpostgresqlのプラグインをインストール</h2>

<p>公式チュートリアルに従って、『<strong><a href="https://github.com/dokku/dokku-postgres">dokku/dokku-postgres - GitHub</a></strong>』をインストールします。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># ssh でサーバにログイン
</span><span class='line'>ssh root@123.123.123.123
</span><span class='line'>
</span><span class='line'># dokku の postgresql プラグインをインストール
</span><span class='line'>$ dokku plugin:install https://github.com/dokku/dokku-postgres.git
</span><span class='line'>
</span><span class='line'># PostgreSQL の 今回のアプリ用のDB を作成
</span><span class='line'>$ dokku postgres:create dokku_sample_db
</span><span class='line'>
</span><span class='line'># dokkuのアプリケーションを作成
</span><span class='line'>$ dokku apps:create dokku_sample_app
</span><span class='line'>
</span><span class='line'># DBをアプリケーションとをひも付け
</span><span class='line'>dokku postgres:link dokku_sample_db dokku_sample_app</span></code></pre></td></tr></table></div></figure>


<p>ちなみに、Dokkuで使えるPluginの一覧はこちら『<strong><a href="https://github.com/dokku/dokku/blob/master/docs/plugins.md">dokku/plugins.md - Dokku</a></strong>』。</p>

<h2>日本語環境の設定</h2>

<p><code>language-pack-ja</code>をインストールして日本語パッケージを入れましょう。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># ssh でサーバにログイン
</span><span class='line'>ssh root@123.123.123.123
</span><span class='line'>
</span><span class='line'># apt-get を最新の状態にして language-pack-ja をインストール
</span><span class='line'>sudo apt-get update && sudo apt-get install language-pack-ja</span></code></pre></td></tr></table></div></figure>


<h2>スワップ領域の設定</h2>

<p>安定動作のためにスワップ領域を設定しましょう。
設定の仕方は、拙著『<strong><a href="http://morizyun.github.io/blog/linux-swap-memory-space/">Ubuntu/CentOS サーバのスワップ領域の割り当て</a></strong>』がおすすめです。</p>

<script async src="http://morizyun.github.io//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<!-- square -->


<p><ins class="adsbygoogle" style="display:inline-block;width:336px;height:280px" data-ad-client="ca-pub-4186413323075068" data-ad-slot="5059873392"></ins></p>

<script>
    (adsbygoogle = window.adsbygoogle || []).push({});
</script>


<h2>Rails アプリを作成</h2>

<p>ローカルに戻ってサンプルのRailsアプリを作成します。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># Railsアプリの作成
</span><span class='line'>rails new dokku_sample_app --database=postgresql --skip-test-unit --skip-bundle -m https://raw.github.com/morizyun/rails4_template/master/app_template.rb
</span><span class='line'>
</span><span class='line'># アプリのフォルダに移動
</span><span class='line'>cd dokku_sample_app
</span><span class='line'>
</span><span class='line'># Bookでscaffold
</span><span class='line'>rails g scaffold book title:string auther:string price:float</span></code></pre></td></tr></table></div></figure>


<p>Rubyのバージョンを指定します。2016/2/25時点では <code>2.2.3</code> まで対応しているようです。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># Gemfile</span>
</span><span class='line'><span class="n">ruby</span> <span class="s1">&#39;2.2.3&#39;</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># .ruby-version</span>
</span><span class='line'><span class="mi">2</span><span class="o">.</span><span class="mi">2</span><span class="o">.</span><span class="mi">3</span>
</span></code></pre></td></tr></table></div></figure>


<p>routesにrootを追加します。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># config/routes.rb</span>
</span><span class='line'><span class="no">Rails</span><span class="o">.</span><span class="n">application</span><span class="o">.</span><span class="n">routes</span><span class="o">.</span><span class="n">draw</span> <span class="k">do</span>
</span><span class='line'>  <span class="c1"># ↓ を追加</span>
</span><span class='line'>  <span class="n">root</span> <span class="s1">&#39;books#index&#39;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>.gitignore</code> から <code>config/secrets.yml</code> を削除。そして、git にコミット。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># gitに登録</span>
</span><span class='line'><span class="n">git</span> <span class="n">add</span> <span class="o">.</span> <span class="o">-</span><span class="n">A</span> <span class="o">&amp;&amp;</span> <span class="n">git</span> <span class="n">commit</span> <span class="o">-</span><span class="n">m</span> <span class="s1">&#39;first commit&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># git のremote サーバを追加</span>
</span><span class='line'><span class="n">git</span> <span class="n">remote</span> <span class="n">add</span> <span class="n">dokku</span> <span class="n">dokku</span><span class="vi">@apps</span><span class="o">.</span><span class="n">yourdomain</span><span class="o">.</span><span class="n">com</span><span class="ss">:dokku_sample_app</span>
</span></code></pre></td></tr></table></div></figure>


<h2>ローカルからの実行系</h2>

<p>ローカルでのコマンド入力を簡単にしてくれる
「<strong><a href="https://github.com/SebastianSzturo/dokku-cli">SebastianSzturo/dokku-cli</a></strong>」
を使いつつデプロイします！</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># gitの情報を読んで、herokutoolbelt</span>
</span><span class='line'><span class="n">gem</span> <span class="n">install</span> <span class="n">dokku</span><span class="o">-</span><span class="n">cli</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># secret keyをセット</span>
</span><span class='line'><span class="n">bundle</span> <span class="nb">exec</span> <span class="n">rake</span> <span class="n">secret</span>
</span><span class='line'><span class="n">dokku</span> <span class="n">config</span><span class="ss">:set</span> <span class="no">SECRET_KEY_BASE</span><span class="o">=</span><span class="s2">&quot;上で生成された文字列&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># サーバにdeploy</span>
</span><span class='line'><span class="n">git</span> <span class="n">push</span> <span class="n">dokku</span> <span class="n">master</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># ブラウザで表示</span>
</span><span class='line'><span class="n">dokku</span> <span class="nb">open</span>
</span></code></pre></td></tr></table></div></figure>


<p>Railsで作成した画面が表示されれば成功です！</p>

<p><img src="https://farm2.staticflickr.com/1675/24168218261_30651ecd62.jpg" width="500" height="294" alt="スクリーンショット 2016-01-08 22.52.38"></p>

<h2>dokku-cliのコマンド</h2>

<p>以下の様なことができます。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># アプリ配下でコマンドを実行</span>
</span><span class='line'><span class="n">dokku</span> <span class="n">run</span> <span class="o">&lt;</span><span class="n">cmd</span><span class="o">&gt;</span>   <span class="c1"># Run a one-off command in the environment of the app</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># よく使いそうなコマンド</span>
</span><span class='line'><span class="n">dokku</span> <span class="n">ssh</span>                                       <span class="c1"># Start an SSH session as root user</span>
</span><span class='line'><span class="n">dokku</span> <span class="n">logs</span> <span class="o">[-</span><span class="n">t</span><span class="o">]</span>                                 <span class="c1"># Display logs for the app (-t follows)</span>
</span><span class='line'><span class="n">dokku</span> <span class="n">help</span> <span class="o">[</span><span class="no">COMMAND</span><span class="o">]</span>                            <span class="c1"># Describe available commands or one specific command</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># 設定変更系のコマンド</span>
</span><span class='line'><span class="n">dokku</span> <span class="n">config</span>                                    <span class="c1"># Display the app&#39;s environment variables</span>
</span><span class='line'><span class="n">dokku</span> <span class="n">config</span><span class="ss">:get</span> <span class="no">KEY</span>                            <span class="c1"># Display an environment variable value</span>
</span><span class='line'><span class="n">dokku</span> <span class="n">config</span><span class="ss">:set</span> <span class="no">KEY1</span><span class="o">=</span><span class="no">VALUE1</span> <span class="o">[</span><span class="no">KEY2</span><span class="o">=</span><span class="no">VALUE2</span> <span class="o">.</span><span class="n">.</span><span class="o">.]</span>  <span class="c1"># Set one or more environment variables</span>
</span><span class='line'><span class="n">dokku</span> <span class="n">config</span><span class="ss">:set:file</span> <span class="o">&lt;</span><span class="n">path</span><span class="o">/</span><span class="n">to</span><span class="o">/</span><span class="n">file</span><span class="o">&gt;</span>            <span class="c1"># Set one or more environment variables from file</span>
</span><span class='line'><span class="n">dokku</span> <span class="n">config</span><span class="ss">:unset</span> <span class="no">KEY1</span> <span class="o">[</span><span class="no">KEY2</span> <span class="o">.</span><span class="n">.</span><span class="o">.]</span>              <span class="c1"># Unset one or more environment variables</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># プロセス/コンテナ系のコマンド</span>
</span><span class='line'><span class="n">dokku</span> <span class="n">ps</span>           <span class="c1"># List processes running in app container(s)</span>
</span><span class='line'><span class="n">dokku</span> <span class="n">ps</span><span class="ss">:rebuild</span>   <span class="c1"># Rebuild the app</span>
</span><span class='line'><span class="n">dokku</span> <span class="n">ps</span><span class="ss">:restart</span>   <span class="c1"># Restart the app container</span>
</span><span class='line'><span class="n">dokku</span> <span class="n">ps</span><span class="ss">:start</span>     <span class="c1"># Start the app container</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># その他便利コマンド</span>
</span><span class='line'><span class="n">dokku</span> <span class="n">nginx</span><span class="ss">:build</span>                               <span class="c1"># (Re)builds nginx config for the app</span>
</span><span class='line'><span class="n">dokku</span> <span class="nb">open</span>                                      <span class="c1"># Open the app in your default browser</span>
</span><span class='line'><span class="n">dokku</span> <span class="n">url</span>                                       <span class="c1"># Show the first URL for the app</span>
</span><span class='line'><span class="n">dokku</span> <span class="n">urls</span>                                      <span class="c1"># Show all URLs for the app</span>
</span></code></pre></td></tr></table></div></figure>


<h2>DokkuのミドルウェアPlugin</h2>

<p>PostgreSQLだけでなく、RedisやElasticsearch等のPluginも数コマンドで使うことができるようになります。
公式サポートされているものだけでも次のようなものがあります。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">CouchDB</span> <span class="p">(</span><span class="n">beta</span><span class="p">)</span>
</span><span class='line'><span class="no">Elasticsearch</span> <span class="p">(</span><span class="n">beta</span><span class="p">)</span>
</span><span class='line'><span class="no">MariaDB</span> <span class="p">(</span><span class="n">beta</span><span class="p">)</span>
</span><span class='line'><span class="no">Memcached</span> <span class="p">(</span><span class="n">beta</span><span class="p">)</span>
</span><span class='line'><span class="no">Mongo</span> <span class="p">(</span><span class="n">beta</span><span class="p">)</span>
</span><span class='line'><span class="no">MySQL</span> <span class="p">(</span><span class="n">beta</span><span class="p">)</span>
</span><span class='line'><span class="no">Nats</span> <span class="p">(</span><span class="n">beta</span><span class="p">)</span>
</span><span class='line'><span class="no">Postgres</span> <span class="p">(</span><span class="n">beta</span><span class="p">)</span>
</span><span class='line'><span class="no">RabbitMQ</span> <span class="p">(</span><span class="n">beta</span><span class="p">)</span>
</span><span class='line'><span class="no">Redis</span> <span class="p">(</span><span class="n">beta</span><span class="p">)</span>
</span><span class='line'><span class="no">RethinkDB</span> <span class="p">(</span><span class="n">beta</span><span class="p">)</span>
</span><span class='line'><span class="no">Copy</span> <span class="no">Files</span> <span class="n">to</span> <span class="no">Image</span>
</span><span class='line'><span class="no">HTTP</span> <span class="no">Auth</span> <span class="p">(</span><span class="n">beta</span><span class="p">)</span>
</span><span class='line'><span class="no">Let</span><span class="err">&#39;</span><span class="n">s</span> <span class="no">Encrypt</span> <span class="p">(</span><span class="n">beta</span><span class="p">)</span>
</span><span class='line'><span class="no">Maintenance</span> <span class="n">mode</span> <span class="p">(</span><span class="n">beta</span><span class="p">)</span>
</span><span class='line'><span class="no">Redirect</span> <span class="p">(</span><span class="n">beta</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>また公式サポートされているPlugin以外にもコミュニティや個人が様々なPluginを提供しています。
詳しくは、『<a href="https://github.com/dokku/dokku/blob/master/docs/plugins.md">dokku/plugins.md - GitHub</a>**』を見てみてください。</p>

<h2>Redis のインストール</h2>

<p>Dokku PluginとしてRedisを入れてみました！</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># ssh でサーバにログイン</span>
</span><span class='line'><span class="n">ssh</span> <span class="n">root</span><span class="err">@</span><span class="mi">123</span><span class="o">.</span><span class="mi">123</span><span class="o">.</span><span class="mi">123</span><span class="o">.</span><span class="mi">123</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># redis plugin をインストール</span>
</span><span class='line'><span class="n">dokku</span> <span class="n">plugin</span><span class="ss">:install</span> <span class="n">https</span><span class="ss">:/</span><span class="o">/</span><span class="n">github</span><span class="o">.</span><span class="n">com</span><span class="o">/</span><span class="n">dokku</span><span class="o">/</span><span class="n">dokku</span><span class="o">-</span><span class="n">redis</span><span class="o">.</span><span class="n">git</span> <span class="n">redis</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># 新しいRedisのサービスを立ち上げ</span>
</span><span class='line'><span class="n">dokku</span> <span class="n">redis</span><span class="ss">:create</span> <span class="n">dokku_sample_redis</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># Dokku =&gt; Redis をひも付け</span>
</span><span class='line'><span class="n">dokku</span> <span class="n">redis</span><span class="ss">:link</span> <span class="n">dokku_sample_redis</span> <span class="n">dokku_sample_app</span>
</span></code></pre></td></tr></table></div></figure>


<p>これで、アプリ側のconfigに以下が設定されるようになります。</p>

<p><code>REDIS_URL: redis://dokku-redis-dokku_sample_redis:6379/0</code></p>

<p>上記のサービスを使えば、RailsのアプリからRedisが使えるようになります！</p>

<h2>感想</h2>

<p>まだ、簡単なアプリをデプロイしただけなので、もう少し色々試した上でですが、今のところの感触はかなりありな気がします＾＾</p>

<h2>Special Thank</h2>

<ul>
<li><strong><a href="http://dokku.viewdocs.io/dokku/application-deployment/">Dokku - The smallest PaaS implementation you&#8217;ve ever seen</a></strong></li>
<li><strong><a href="http://blog.mochromatic.com/2014/12/17/setting-up-dokku-on-digital-ocean/">Setting up Dokku on Digital Ocean</a></strong></li>
<li><strong><a href="http://donpottinger.net/blog/2014/11/17/bye-bye-heroku-hello-dokku.html">Bye Bye Heroku, Hello Dokku: Migrating a Rails App from Heroku to Dokku (Part 1) | by @donpottinger</a></strong></li>
<li><strong><a href="http://donpottinger.net/blog/2014/11/22/bye-bye-heroku-hello-dokku-part-2.html">Bye Bye Heroku, Hello Dokku: Migrating a Rails App from Heroku to Dokku (Part 2) | by @donpottinger</a></strong></li>
<li><strong><a href="http://www.rubyfleebie.com/how-to-use-dokku-on-digitalocean-and-deploy-rails-applications-like-a-pro/">Deploy your Rails applications like a pro with Dokku and DigialOcean | Ruby Fleebie</a></strong></li>
</ul>


<h2>変更来歴</h2>

<p>(2016/01/24 19:30) Redisの設定方法を追記</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ubuntu/CentOS サーバのスワップ領域の割り当て]]></title>
    <link href="http://morizyun.github.io/blog/linux-swap-memory-space/"/>
    <updated>2016-01-24T19:25:00+09:00</updated>
    <id>http://morizyun.github.io/blog/linux-swap-memory-space</id>
    <content type="html"><![CDATA[<p><a href="http://www.amazon.co.jp/gp/product/4774163775/ref=as_li_qf_sp_asin_il?ie=UTF8&camp=247&creative=1211&creativeASIN=4774163775&linkCode=as2&tag=morizyun00-22"><img border="0" src="http://ws.assoc-amazon.jp/widgets/q?_encoding=UTF8&ASIN=4774163775&Format=_SL160_&ID=AsinImage&MarketPlace=JP&ServiceVersion=20070822&WS=1&tag=morizyun00-22" width="150" style="float: left; margin: 0 20px 20px 0;" ></a><img src="http://www.assoc-amazon.jp/e/ir?t=morizyun00-22&l=as2&o=9&a=4774163775" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" />Linuxでスワップメモリを作成する手順です。先日作ったAWSのmicroインスタンス(ubuntu)のスワップメモリが設定されていなくって、unicornやrakeタスクがKillされまくって半泣き状態だったので、二度と忘れず設定するためのメモです！</p>

<!-- more -->


<br style="clear:both;"/>


<script async src="http://morizyun.github.io//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<!-- square -->


<p><ins class="adsbygoogle" style="display:inline-block;width:336px;height:280px" data-ad-client="ca-pub-4186413323075068" data-ad-slot="5059873392"></ins></p>

<script>
    (adsbygoogle = window.adsbygoogle || []).push({});
</script>


<h2>スワップメモリの確認方法</h2>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>cat /proc/swaps
</span><span class='line'><span class="c"># こんなかんじで出ます↓</span>
</span><span class='line'><span class="c"># Filename        Type    Size  Used  Priority</span>
</span></code></pre></td></tr></table></div></figure>


<h1>スワップ領域の作成</h1>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># 管理者権限になる</span>
</span><span class='line'>sudo su -
</span><span class='line'>
</span><span class='line'><span class="c"># スワップ用フォルダの作成</span>
</span><span class='line'>mkdir /var/swap
</span><span class='line'>
</span><span class='line'><span class="c"># 2Gのスワップ用のファイル作成</span>
</span><span class='line'>dd <span class="k">if</span><span class="o">=</span>/dev/zero <span class="nv">of</span><span class="o">=</span>/var/swap/swap0 <span class="nv">bs</span><span class="o">=</span>1M <span class="nv">count</span><span class="o">=</span>2048
</span><span class='line'>
</span><span class='line'><span class="c"># パーミッションの設定</span>
</span><span class='line'>chmod 600 /var/swap/swap0
</span><span class='line'>
</span><span class='line'><span class="c"># スワップ割り当て</span>
</span><span class='line'>mkswap /var/swap/swap0
</span><span class='line'>swapon /var/swap/swap0
</span><span class='line'>
</span><span class='line'><span class="c"># 起動時に自動でスワップが割り当てられるように設定</span>
</span><span class='line'><span class="nb">echo</span> <span class="s1">&#39;/var/swap/swap0 swap swap defaults 0 0&#39;</span> &gt;&gt; /etc/fstab
</span></code></pre></td></tr></table></div></figure>


<h2>スワップ割り当て結果の確認</h2>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>cat /proc/swaps
</span><span class='line'><span class="c"># Filename        Type    Size  Used  Priority</span>
</span><span class='line'><span class="c"># /var/swap/swap0                         file    2097148 211176  -1</span>
</span></code></pre></td></tr></table></div></figure>




<script async src="http://morizyun.github.io//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<!-- square -->


<p><ins class="adsbygoogle" style="display:inline-block;width:336px;height:280px" data-ad-client="ca-pub-4186413323075068" data-ad-slot="5059873392"></ins></p>

<script>
    (adsbygoogle = window.adsbygoogle || []).push({});
</script>


<h2>Speical Thanks</h2>

<p><strong><a href="http://www.marthaxmartha.com/2013/05/26/9963/">Ubuntu スワップファイルの追加方法</a></strong></p>

<p><strong><a href="http://blueeyesblue.cocolog-nifty.com/technote/2010/03/swap-ad70.html">メモリとSwap領域の確認: BlueEyesBlue</a></strong></p>

<h2>変更来歴</h2>

<p>(2016/01/24 19:25) 各種動作確認</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Arproxy ActiveRecordが発行したSQLを加工できるGem]]></title>
    <link href="http://morizyun.github.io/blog/brakeman-rails-security-checker.1/"/>
    <updated>2016-01-19T23:40:00+09:00</updated>
    <id>http://morizyun.github.io/blog/brakeman-rails-security-checker.1</id>
    <content type="html"><![CDATA[<p><a href="http://www.amazon.co.jp/gp/product/B00SF6JN4U/ref=as_li_qf_sp_asin_il?ie=UTF8&camp=247&creative=1211&creativeASIN=B00SF6JN4U&linkCode=as2&tag=morizyun00-22"><img border="0" src="http://ws.assoc-amazon.jp/widgets/q?_encoding=UTF8&ASIN=B00SF6JN4U&Format=_SL160_&ID=AsinImage&MarketPlace=JP&ServiceVersion=20070822&WS=1&tag=morizyun00-22" width="150" style="float: left; margin: 0 20px 20px 0;" ></a><img src="http://www.assoc-amazon.jp/e/ir?t=morizyun00-22&l=as2&o=9&a=B00SF6JN4U" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" />
『<strong><a href="https://github.com/cookpad/arproxy">cookpad/arproxy - GitHub</a></strong>』は、
Arproxy ActiveRecordが発行したSQLを加工できるGemです。
Slow Queryを調査したり、SQLにコメントを付与したり、SQLをReadonlyに制限したりできます！</p>

<!-- more -->


<br style="clear:both;"/>


<script async src="http://morizyun.github.io//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<!-- square -->


<p><ins class="adsbygoogle" style="display:inline-block;width:336px;height:280px" data-ad-client="ca-pub-4186413323075068" data-ad-slot="5059873392"></ins></p>

<script>
    (adsbygoogle = window.adsbygoogle || []).push({});
</script>


<script async src="http://morizyun.github.io//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<!-- square -->


<p><ins class="adsbygoogle" style="display:inline-block;width:336px;height:280px" data-ad-client="ca-pub-4186413323075068" data-ad-slot="5059873392"></ins></p>

<script>
    (adsbygoogle = window.adsbygoogle || []).push({});
</script>


<h2>Gemインストール</h2>

<p>Gemfileに以下を追加して、<code>bundle install</code>を実行。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># Gemfile</span>
</span><span class='line'><span class="n">group</span> <span class="ss">:development</span> <span class="k">do</span>
</span><span class='line'>  <span class="c1"># ActiveRecordのSQLを加工</span>
</span><span class='line'>  <span class="n">gem</span> <span class="s1">&#39;arproxy&#39;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h2>SQLをログに出力</h2>

<p>以下のようになSQLを実行する部分をProxyします。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">+-------------------------+</span>                       <span class="o">+------------------+</span>
</span><span class='line'><span class="o">|</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span><span class="c1">#find |--execute(sql, name)--&gt;| Database Adapter |</span>
</span><span class='line'><span class="o">+-------------------------+</span>                       <span class="o">+------------------+</span>
</span></code></pre></td></tr></table></div></figure>


<p>SQLをログに出力するサンプルはこちら。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">QueryTracer</span> <span class="o">&lt;</span> <span class="no">Arproxy</span><span class="o">::</span><span class="no">Base</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">execute</span><span class="p">(</span><span class="n">sql</span><span class="p">,</span> <span class="nb">name</span><span class="o">=</span><span class="kp">nil</span><span class="p">)</span>
</span><span class='line'>    <span class="no">Rails</span><span class="o">.</span><span class="n">logger</span><span class="o">.</span><span class="n">debug</span> <span class="n">sql</span>
</span><span class='line'>    <span class="no">Rails</span><span class="o">.</span><span class="n">logger</span><span class="o">.</span><span class="n">debug</span> <span class="nb">caller</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="s2">&quot;</span><span class="se">\n</span><span class="s2">&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="k">super</span><span class="p">(</span><span class="n">sql</span><span class="p">,</span> <span class="nb">name</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="no">Arproxy</span><span class="o">.</span><span class="n">configure</span> <span class="k">do</span> <span class="o">|</span><span class="n">config</span><span class="o">|</span>
</span><span class='line'>  <span class="n">config</span><span class="o">.</span><span class="n">adapter</span> <span class="o">=</span> <span class="s2">&quot;mysql2&quot;</span> <span class="c1"># A DB Apdapter name which is used in your database.yml</span>
</span><span class='line'>  <span class="n">config</span><span class="o">.</span><span class="n">use</span> <span class="no">QueryTracer</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'><span class="no">Arproxy</span><span class="o">.</span><span class="n">enable!</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Slow Queryのログを出力</h2>

<p>Slow Queryのログを出力する場合はこちら。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">SlowQueryLogger</span> <span class="o">&lt;</span> <span class="no">Arproxy</span><span class="o">::</span><span class="no">Base</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">initialize</span><span class="p">(</span><span class="n">slow_ms</span><span class="p">)</span>
</span><span class='line'>    <span class="vi">@slow_ms</span> <span class="o">=</span> <span class="n">slow_ms</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">execute</span><span class="p">(</span><span class="n">sql</span><span class="p">,</span> <span class="nb">name</span><span class="o">=</span><span class="kp">nil</span><span class="p">)</span>
</span><span class='line'>    <span class="n">result</span> <span class="o">=</span> <span class="kp">nil</span>
</span><span class='line'>    <span class="n">ms</span> <span class="o">=</span> <span class="no">Benchmark</span><span class="o">.</span><span class="n">ms</span> <span class="p">{</span> <span class="n">result</span> <span class="o">=</span> <span class="k">super</span><span class="p">(</span><span class="n">sql</span><span class="p">,</span> <span class="nb">name</span><span class="p">)</span> <span class="p">}</span>
</span><span class='line'>    <span class="k">if</span> <span class="n">ms</span> <span class="o">&gt;=</span> <span class="vi">@slow_ms</span>
</span><span class='line'>      <span class="no">Rails</span><span class="o">.</span><span class="n">logger</span><span class="o">.</span><span class="n">info</span> <span class="s2">&quot;Slow(</span><span class="si">#{</span><span class="n">ms</span><span class="o">.</span><span class="n">to_i</span><span class="si">}</span><span class="s2">ms): </span><span class="si">#{</span><span class="n">sql</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>    <span class="n">result</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="no">Arproxy</span><span class="o">.</span><span class="n">configure</span> <span class="k">do</span> <span class="o">|</span><span class="n">config</span><span class="o">|</span>
</span><span class='line'>  <span class="n">config</span><span class="o">.</span><span class="n">use</span> <span class="no">SlowQueryLogger</span><span class="p">,</span> <span class="mi">1000</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h2>SQLにコメントを差し込む</h2>

<p>SQLにコメントを差し込む場合はこちら。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">CommentAdder</span> <span class="o">&lt;</span> <span class="no">Arproxy</span><span class="o">::</span><span class="no">Base</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">execute</span><span class="p">(</span><span class="n">sql</span><span class="p">,</span> <span class="nb">name</span><span class="o">=</span><span class="kp">nil</span><span class="p">)</span>
</span><span class='line'>    <span class="n">sql</span> <span class="o">+=</span> <span class="s2">&quot; /*this_is_comment*/&quot;</span>
</span><span class='line'>    <span class="k">super</span><span class="p">(</span><span class="n">sql</span><span class="p">,</span> <span class="nb">name</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>これは面白いかも！</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Brakeman Railsのセキュリティチェックを行うためのGem]]></title>
    <link href="http://morizyun.github.io/blog/brakeman-rails-security-checker/"/>
    <updated>2016-01-18T23:55:00+09:00</updated>
    <id>http://morizyun.github.io/blog/brakeman-rails-security-checker</id>
    <content type="html"><![CDATA[<p><a href="http://www.amazon.co.jp/gp/product/B00SF6JN4K/ref=as_li_qf_sp_asin_il?ie=UTF8&camp=247&creative=1211&creativeASIN=B00SF6JN4K&linkCode=as2&tag=morizyun00-22"><img border="0" src="http://ws.assoc-amazon.jp/widgets/q?_encoding=UTF8&ASIN=B00SF6JN4K&Format=_SL160_&ID=AsinImage&MarketPlace=JP&ServiceVersion=20070822&WS=1&tag=morizyun00-22" width="150" style="float: left; margin: 0 20px 20px 0;" ></a><img src="http://www.assoc-amazon.jp/e/ir?t=morizyun00-22&l=as2&o=9&a=B00SF6JN4K" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" />
『<strong><a href="https://github.com/presidentbeef/brakeman">presidentbeef/brakeman - GitHub</a></strong>』は、
Railsのセキュリティの問題点等をコマンド1つでチェックしてくれるGemです。
企業等のサイト開発などでも気軽に使えるので是非試してみてください。</p>

<!-- more -->


<br style="clear:both;"/>


<script async src="http://morizyun.github.io//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<!-- square -->


<p><ins class="adsbygoogle" style="display:inline-block;width:336px;height:280px" data-ad-client="ca-pub-4186413323075068" data-ad-slot="5059873392"></ins></p>

<script>
    (adsbygoogle = window.adsbygoogle || []).push({});
</script>


<script async src="http://morizyun.github.io//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<!-- square -->


<p><ins class="adsbygoogle" style="display:inline-block;width:336px;height:280px" data-ad-client="ca-pub-4186413323075068" data-ad-slot="5059873392"></ins></p>

<script>
    (adsbygoogle = window.adsbygoogle || []).push({});
</script>


<h2>サンプル</h2>

<p>こんな感じでコマンド一つでアプリのセキュリティをチェックしてくれます。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>bundle <span class="nb">exec </span>brakeman
</span><span class='line'>
</span><span class='line'>+BRAKEMAN REPORT+
</span><span class='line'>
</span><span class='line'>Application path: /path/to/rails_app
</span><span class='line'>Rails version: 4.2.5
</span><span class='line'>Brakeman version: 3.1.4
</span><span class='line'>Started at 2016-01-18 23:46:28 +0900
</span><span class='line'>Duration: 0.805318 seconds
</span><span class='line'>Checks run: BasicAuth, ContentTag, CreateWith, CrossSiteScripting, DefaultRoutes, Deserialize, DetailedExceptions, DigestDoS, EscapeFunction, Evaluation, Execute, FileAccess, FileDisclosure, FilterSkipping, ForgerySetting, HeaderDoS, I18nXSS, JRubyXML, JSONEncoding, JSONParsing, LinkTo, LinkToHref, MailTo, MassAssignment, ModelAttrAccessible, ModelAttributes, ModelSerialize, NestedAttributes, NumberToCurrency, QuoteTableName, Redirect, RegexDoS, Render, RenderDoS, RenderInline, ResponseSplitting, SQL, SQLCVEs, SSLVerify, SafeBufferManipulation, SanitizeMethods, SelectTag, SelectVulnerability, Send, SendFile, SessionManipulation, SessionSettings, SimpleFormat, SingleQuotes, SkipBeforeFilter, StripTags, SymbolDoSCVE, TranslateBug, UnsafeReflection, ValidationRegex, WithoutProtection, XMLDoS, YAMLParsing
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>+SUMMARY+
</span><span class='line'>
</span><span class='line'>+-------------------+-------+
</span><span class='line'>| Scanned/Reported  | Total |
</span><span class='line'>+-------------------+-------+
</span><span class='line'>| Controllers       | 6     |
</span><span class='line'>| Models            | 5     |
</span><span class='line'>| Templates         | 26    |
</span><span class='line'>| Errors            | 0     |
</span><span class='line'>| Security Warnings | 0 <span class="o">(</span>0<span class="o">)</span> |
</span><span class='line'>+-------------------+-------+
</span></code></pre></td></tr></table></div></figure>


<p>結果はファイルやjsonで出力できますし、JenkinsなどのCIなどと連携して出力させる事もできます。</p>

<p>ちなみに、『<strong><a href="http://brakemanscanner.org/docs/jenkins/">Jenkinsのプラグイン</a></strong>』はこちらです。</p>

<p><a href="http://brakemanscanner.org/docs/jenkins/" target="_blank">
  <img src="http://brakemanscanner.org/images/brakeman_trend_graph.png" />
</a></p>

<h2>Gemインストール</h2>

<p>Gemfileに以下を追加して、<code>bundle install</code>を実行。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># Gemfile</span>
</span><span class='line'><span class="n">group</span> <span class="ss">:development</span> <span class="k">do</span>
</span><span class='line'>  <span class="c1"># セキュリティチェック</span>
</span><span class='line'>  <span class="n">gem</span> <span class="s1">&#39;brakeman&#39;</span><span class="p">,</span> <span class="nb">require</span><span class="p">:</span> <span class="kp">false</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h2>application.js の変更</h2>

<p>あとは以下のコマンドを実行するだけ。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>bundle <span class="nb">exec </span>brakeman
</span></code></pre></td></tr></table></div></figure>


<p>これで安心して仕事を進められそうです！</p>

<h2>Special Thanks</h2>

<ul>
<li><strong><a href="http://qiita.com/joker1007/items/be5dc3f3b1e93132a4f7">俺がGitHubでスターを付けたリポジトリ一覧 - Qiita</a></strong></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[xray-rails Railsのviewがどこに表示されているかをわかりやすくする]]></title>
    <link href="http://morizyun.github.io/blog/xray-rails-view-checker-ui-bone/"/>
    <updated>2016-01-17T19:50:00+09:00</updated>
    <id>http://morizyun.github.io/blog/xray-rails-view-checker-ui-bone</id>
    <content type="html"><![CDATA[<p><a href="http://www.amazon.co.jp/gp/product/B00WJQCVPU/ref=as_li_qf_sp_asin_il?ie=UTF8&camp=247&creative=1211&creativeASIN=B00WJQCVPU&linkCode=as2&tag=morizyun00-22"><img border="0" src="http://ws.assoc-amazon.jp/widgets/q?_encoding=UTF8&ASIN=B00WJQCVPU&Format=_SL160_&ID=AsinImage&MarketPlace=JP&ServiceVersion=20070822&WS=1&tag=morizyun00-22" width="150" style="float: left; margin: 0 20px 20px 0;" ></a><img src="http://www.assoc-amazon.jp/e/ir?t=morizyun00-22&l=as2&o=9&a=B00WJQCVPU" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" />
『<strong><a href="https://github.com/brentd/xray-rails">brentd/xray-rails - GitHub</a></strong>』RailsのテンプレートやBackboneのviewが画面上のどこに表示されているかを視覚的に表示してくれるGemです。</p>

<p>Railsの開発時に便利なのでぜひ使ってみてください。</p>

<!-- more -->


<br style="clear:both;"/>


<script async src="http://morizyun.github.io//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<!-- square -->


<p><ins class="adsbygoogle" style="display:inline-block;width:336px;height:280px" data-ad-client="ca-pub-4186413323075068" data-ad-slot="5059873392"></ins></p>

<script>
    (adsbygoogle = window.adsbygoogle || []).push({});
</script>


<script async src="http://morizyun.github.io//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<!-- square -->


<p><ins class="adsbygoogle" style="display:inline-block;width:336px;height:280px" data-ad-client="ca-pub-4186413323075068" data-ad-slot="5059873392"></ins></p>

<script>
    (adsbygoogle = window.adsbygoogle || []).push({});
</script>


<h2>サンプル</h2>

<p><img src="http://f.cl.ly/items/1A0o3y1y3Q13103V3F1l/xray-rails-large.gif" /></p>

<h2>Gemインストール</h2>

<p>Gemfileに以下を追加して、<code>bundle install</code>を実行。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># Gemfile</span>
</span><span class='line'><span class="n">group</span> <span class="ss">:development</span> <span class="k">do</span>
</span><span class='line'>  <span class="c1"># viewの構造を表示 (cmd+shift+x)</span>
</span><span class='line'>  <span class="n">gem</span> <span class="s1">&#39;xray-rails&#39;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h2>キャッシュクリア</h2>

<p>一旦キャッシュを削除</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>rm -rf tmp/cache/assets
</span></code></pre></td></tr></table></div></figure>


<h2>application.js の変更</h2>

<p>あとは以下を追加するだけ。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="c1">// application.js</span>
</span><span class='line'><span class="c1">//= require jquery</span>
</span><span class='line'><span class="c1">//= require xray</span>
</span><span class='line'><span class="p">...</span>
</span><span class='line'><span class="c1">// 以下、backboneを使っている場合のみ</span>
</span><span class='line'><span class="c1">//= require backbone</span>
</span><span class='line'><span class="c1">//= require xray-backbone</span>
</span></code></pre></td></tr></table></div></figure>


<p>これは開発捗りそう♪</p>

<h2>Special Thanks</h2>

<ul>
<li><strong><a href="http://qiita.com/joker1007/items/be5dc3f3b1e93132a4f7">俺がGitHubでスターを付けたリポジトリ一覧 - Qiita</a></strong></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[「minimum-omniauth-scaffold」 Facebook/Twitter/GitHubログインを高速実装！]]></title>
    <link href="http://morizyun.github.io/blog/minimum-omniauth-scaffold/"/>
    <updated>2016-01-17T19:40:00+09:00</updated>
    <id>http://morizyun.github.io/blog/minimum-omniauth-scaffold</id>
    <content type="html"><![CDATA[<p><a href="http://www.amazon.co.jp/gp/product/4839926689/ref=as_li_qf_sp_asin_il?ie=UTF8&camp=247&creative=1211&creativeASIN=4839926689&linkCode=as2&tag=morizyun00-22"><img border="0" src="http://ws.assoc-amazon.jp/widgets/q?_encoding=UTF8&ASIN=4839926689&Format=_SL160_&ID=AsinImage&MarketPlace=JP&ServiceVersion=20070822&WS=1&tag=morizyun00-22" width="150" style="float: left; margin: 0 20px 20px 0;" ></a><img src="http://www.assoc-amazon.jp/e/ir?t=morizyun00-22&l=as2&o=9&a=4839926689" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" />プロダクトを作る時にFacebookやTwitter、GitHubのログイン機能を組み込むのはかなり普通に必要になってきました。そんな時にすごく便利なのが、この「<strong><a href="https://github.com/shu0115/minimum-omniauth-scaffold">minimum-omniauth-scaffold</a></strong>」です。</p>

<p>実際にハッカソンの中で初めて使いましたが、10〜20分で簡単に実装できてしました。
以下の環境で実行できました！</p>

<pre>
Rails 4.2.5
Ruby 2.3.0
</pre>




<!-- more -->


<br style="clear:both;"/>


<script async src="http://morizyun.github.io//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<!-- square -->


<p><ins class="adsbygoogle" style="display:inline-block;width:336px;height:280px" data-ad-client="ca-pub-4186413323075068" data-ad-slot="5059873392"></ins></p>

<script>
    (adsbygoogle = window.adsbygoogle || []).push({});
</script>


<h2>Gemのインストール</h2>

<p><code>Gemfile</code>に以下を追加して、コンソールで<code>bundle</code>を実行してください。</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># Facebook/Twitter/GitHubログイン機能</span>
</span><span class='line'><span class="n">gem</span> <span class="s1">&#39;minimum-omniauth-scaffold&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>ちなみにこちらのgemは、Ruby2.0+、Rails4.0+環境用とのことです。</p>

<h2>OmniAuth用のScaffold</h2>

<p>以下のコマンドを実行して、OmniAuth用のScaffoldを作成。</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>rails g minimum:omniauth:scaffold
</span></code></pre></td></tr></table></div></figure>


<h2>Facebook/Twitter/GitHubでアプリを作成してキーを登録</h2>

<h3>Facebook</h3>

<p><strong><a href="https://developers.facebook.com/apps">Facebook Developers - App</a></strong>でアプリを作成して、App IDとアプリのシークレットキーを取得。<br/>
※ 必須マークが無いが 「Callback URL」も入力必要</p>

<h3>Twitter</h3>

<p><strong><a href="https://apps.twitter.com/">Twitter Developers</a></strong>でアプリを作成して、キーを取得。<br/>
※　「新しいアプリを作成」作成後「Facebookでログインするウェブサイト」に「http://0.0.0.0:3000/」を入力</p>

<h3>GitHub</h3>

<p><strong><a href="https://github.com/settings/applications/new">GitHub Register a new OAuth application</a></strong>でアプリを登録してキーを取得。
※ Main URL／Callback URL：「http://0.0.0.0:3000/」</p>

<h3>config/settings.local.yml</h3>

<p><code>config/settings.local.yml</code>に上で取得した情報を登録。</p>

<h3>本番用の環境変数の設定</h3>

<p>キー情報などはgitリポジトリに含めないほうがいいです。ということでHerokuを使って環境変数にキー情報を登録するのはこちら。</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># Twitter</span>
</span><span class='line'>heroku config:set <span class="nv">TWITTER_KEY</span><span class="o">=</span>xxxxxxxxxx <span class="nv">TWITTER_SECRET</span><span class="o">=</span>xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
</span><span class='line'>
</span><span class='line'><span class="c"># Facebook</span>
</span><span class='line'>heroku config:set <span class="nv">FACEBOOK_APP_ID</span><span class="o">=</span>xxxxxxxxxx <span class="nv">FACEBOOK_APP_SECRET</span><span class="o">=</span>xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
</span><span class='line'>
</span><span class='line'><span class="c"># GitHub</span>
</span><span class='line'>heroku config:set <span class="nv">GITHUB_CLIENT_ID</span><span class="o">=</span>xxxxxxxxxx <span class="nv">GITHUB_SECRET</span><span class="o">=</span>xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
</span></code></pre></td></tr></table></div></figure>


<h3>認証用のテーブルを作成</h3>

<p>マイグレーションコマンドを実行して、認証に必要なテーブルを作成。</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>rake db:migrate
</span></code></pre></td></tr></table></div></figure>


<p>と、たったこれだけのコマンドでログイン認証に必要な機能をひと通り実装できてしまいます！</p>

<p>継続的に開発を続けてこられている作者の<strong><a href="https://twitter.com/shu_0115">@shu0115</a></strong>さんには感謝感謝です＾＾</p>

<script async src="http://morizyun.github.io//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<!-- square -->


<p><ins class="adsbygoogle" style="display:inline-block;width:336px;height:280px" data-ad-client="ca-pub-4186413323075068" data-ad-slot="5059873392"></ins></p>

<script>
    (adsbygoogle = window.adsbygoogle || []).push({});
</script>


<h2>Special Thanks</h2>

<p><strong><a href="https://github.com/shu0115/minimum-omniauth-scaffold">shu0115/minimum-omniauth-scaffold</a></strong></p>

<p><strong><a href="http://qiita.com/shu_0115/items/6f5f0c210e9999da66be">Ruby 2.0.0-p247 + Rails 4.0.0 + minimum-omniauth-scaffold - Qiita [キータ]</a></strong></p>

<h2>変更来歴</h2>

<p>(2016/01/17 19:40) 記述修正</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[自分の仕事に対する心構えや、取り組み方@2016]]></title>
    <link href="http://morizyun.github.io/blog/myself-work-principle/"/>
    <updated>2016-01-14T23:55:00+09:00</updated>
    <id>http://morizyun.github.io/blog/myself-work-principle</id>
    <content type="html"><![CDATA[<p><a href="http://www.amazon.co.jp/gp/product/B00NQ3QONK/ref=as_li_qf_sp_asin_il?ie=UTF8&camp=247&creative=1211&creativeASIN=B00NQ3QONK&linkCode=as2&tag=morizyun00-22"><img border="0" src="http://ws.assoc-amazon.jp/widgets/q?_encoding=UTF8&ASIN=B00NQ3QONK&Format=_SL160_&ID=AsinImage&MarketPlace=JP&ServiceVersion=20070822&WS=1&tag=morizyun00-22" width="150" style="float: left; margin: 0 20px 20px 0;" ></a><img src="http://www.assoc-amazon.jp/e/ir?t=morizyun00-22&l=as2&o=9&a=B00NQ3QONK" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" />
『<strong><a href="http://blog.kengo-toda.jp/entry/2015/03/22/215005">7年働いた時点での私の仕事の極意</a></strong>』に感銘を受けて、自分の仕事に対する心構えや、取り組み方、考え方を言語化したくて書きました。
オレオレ・ポエムですが、良ければぜひ。</p>

<!-- more -->


<br style="clear:both;"/>


<script async src="http://morizyun.github.io//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<!-- square -->


<p><ins class="adsbygoogle" style="display:inline-block;width:336px;height:280px" data-ad-client="ca-pub-4186413323075068" data-ad-slot="5059873392"></ins></p>

<script>
    (adsbygoogle = window.adsbygoogle || []).push({});
</script>


<h2>自ら率先して良くしよう</h2>

<p>僕は攻殻機動隊の草薙素子が言った「<strong>世の中に不満があるなら自分を変えろ。それが嫌なら耳と目を閉じ、口をつぐんで孤独に暮らせ</strong>」
というセリフが好きだ。世の中や他人に対する不満をいうのではなく、自ら率先して行動して「よりよくなるために変化」を生み出すことを重視したい。
そのために、なによりも『<strong>実行すること</strong>』を大切に行動をしていく。</p>

<h2>誠実な手段で結果を目指そう</h2>

<p>正しく問題を見極めて、問題を解決することに全力を注ぐ。大切なのは「<strong>誠実な手段で結果を手に入れる</strong>」ことだ。
僕らは社会の一員であり、手段は私欲にとらわれたり、ルールを犯すことは許されない。誠実な手段で、ベストな結果を得ることが大切だ。</p>

<h2>自分を組織に最適化する</h2>

<p>1人でできる仕事には限界がある。組織で仕事をするのなら、その組織で最も最適な『<strong>役割</strong>』を探求して、自分を組織に最適化することが大切だ。
ただし、それは自分の専門性や趣味嗜好を捨てるということではない。自分の専門性は大切なアイデンティティだし、何より仕事を楽しくするはずだ。
自分の専門性を組織にフィットさせることが『<strong>役割</strong>』を見つけることを常に意識したい。</p>

<h2>マネージメント = 給与を上げること</h2>

<p>僕の最も尊敬する上司は自分の仕事は、『<strong>自分のチームメンバーの給料を上げること</strong>』だと言っていた。僕はこの言葉の宝物だと思っています。
チームメンバーの給与を上げるために、その人の成果を正しく伝え、その人のスキルアップを手助けすることが僕にとって最も大切なことだと考える。</p>

<h2>組織の生産性を上げる</h2>

<p>『<strong><a href="http://www.4gamer.net/games/999/G999905/20151225009/">【岩田 聡氏 追悼企画】岩田さんは最後の最後まで“問題解決”に取り組んだエンジニアだった。「ゲーマーはもっと経営者を目指すべき！」特別編</a></strong>』には感動して涙が出た。岩田 聡さんはエンジニアとして最も尊敬する人だ。</p>

<p>「私の名刺には社長と書いてありますが、頭の中はゲーム開発者です。心はゲーマーです。」という言葉はあまりにも有名だと思う。
岩田さんは経営者としてもエンジニアとしても超一流だったと思う。特にこの記事にある組織の生産性を上げるために、メールの導入、ネットワークベースの
バージョン管理システムを導入したり、ライブラリやコンポーネントを導入する。挙句には、最も難易度の高い部分のプログラムを自分がやる等々、
組織全体のプロダクティビティを最も大切にする事に誰よりも努力している点は何よりも見習うべき点だと感じた。</p>

<h2>個人の問題解決能力を高める</h2>

<p>先ほどの岩田聡さんの記事は、根底には岩田聡さん個人の能力が高かったからこそ実現できたエピソードだと思う。
個人として高いプロダクティビティを発揮することは、周りを動かし、人をリードしていくために重要な能力だと思う。</p>

<p>もう一点、絶対に忘れてはならない原則として、エンジニアの本質的な能力は「<strong>真の問題が何なのかを見極め、解決策を考える</strong>」ことだと感じている。
エンジニアとしてのエゴを捨て「問題解決」に重きを置き、極力コードを書く量を減らすことに努めていきたい。</p>

<br style="clear:both;"/>


<script async src="http://morizyun.github.io//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<!-- square -->


<p><ins class="adsbygoogle" style="display:inline-block;width:336px;height:280px" data-ad-client="ca-pub-4186413323075068" data-ad-slot="5059873392"></ins></p>

<script>
    (adsbygoogle = window.adsbygoogle || []).push({});
</script>


<h2>Special Thanks</h2>

<ul>
<li><a href="http://laughy.jp/1436844043122196337">岩田聡元任天堂社長の名言がかっこよすぎる！【天才の定義とは】 | LAUGHY [ラフィ]</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[aws-sdk-rails AWS SESを使ってRails4.2からメールを送付する]]></title>
    <link href="http://morizyun.github.io/blog/aws-ses-rails-action-mailer/"/>
    <updated>2016-01-13T20:50:00+09:00</updated>
    <id>http://morizyun.github.io/blog/aws-ses-rails-action-mailer</id>
    <content type="html"><![CDATA[<p><a href="http://www.amazon.co.jp/gp/product/4774176737/ref=as_li_qf_sp_asin_il?ie=UTF8&camp=247&creative=1211&creativeASIN=4774176737&linkCode=as2&tag=morizyun00-22"><img border="0" src="http://ws.assoc-amazon.jp/widgets/q?_encoding=UTF8&ASIN=4774176737&Format=_SL160_&ID=AsinImage&MarketPlace=JP&ServiceVersion=20070822&WS=1&tag=morizyun00-22" width="150" style="float: left; margin: 0 20px 20px 0;" ></a><img src="http://www.assoc-amazon.jp/e/ir?t=morizyun00-22&l=as2&o=9&a=4774176737" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /> AWS SESから
からRailsでメールを送付する手順の紹介です。『<strong><a href="https://github.com/aws/aws-sdk-rails">aws/aws-sdk-rails - GitHub</a></strong>』を使います。簡単ですが、今後忘れないためのメモ記事です。</p>

<!-- more -->


<br style="clear:both;"/>


<script async src="http://morizyun.github.io//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<!-- square -->


<p><ins class="adsbygoogle" style="display:inline-block;width:336px;height:280px" data-ad-client="ca-pub-4186413323075068" data-ad-slot="5059873392"></ins></p>

<script>
    (adsbygoogle = window.adsbygoogle || []).push({});
</script>


<h2>Gemのインストール</h2>

<p><code>Gemfile</code>に以下を追加して、コンソールで<code>bundle</code>を実行してください。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># AWS SDK</span>
</span><span class='line'><span class="n">gem</span> <span class="s1">&#39;aws-sdk-rails&#39;</span>
</span><span class='line'><span class="n">gem</span> <span class="s1">&#39;figaro&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<h2>SESのコンソールからドメインを登録</h2>

<p><strong><a href="https://console.aws.amazon.com/ses/home">SES Management Console</a></strong> から以下を設定。</p>

<ul>
<li>送付するメールのドメインを登録 (DNSの設定等々)</li>
<li>本番で利用する場合は配信制限を解除 (フォームから申請)</li>
</ul>


<h2>IAMユーザーの作成</h2>

<p><strong><a href="https://console.aws.amazon.com/iam/home">IAM Management Console</a></strong> から以下を設定。</p>

<ul>
<li>送付するためのIAMユーザーを作成</li>
<li>ACCESS KEY と SECRET KEY を発行</li>
<li>IAMユーザーののアクセス許可(管理ポリシーをアタッチメント)</li>
</ul>


<script async src="http://morizyun.github.io//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<!-- square -->


<p><ins class="adsbygoogle" style="display:inline-block;width:336px;height:280px" data-ad-client="ca-pub-4186413323075068" data-ad-slot="5059873392"></ins></p>

<script>
    (adsbygoogle = window.adsbygoogle || []).push({});
</script>


<h2>ACCESS KEY と SECRET KEYを登録</h2>

<p>環境変数として読み込むデータの設定ファイルを作成。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">bundle</span> <span class="nb">exec</span> <span class="n">figaro</span> <span class="n">install</span>
</span></code></pre></td></tr></table></div></figure>


<p>ACCESS KEY と SECRET KEYを環境変数に登録。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># config/application.yml</span>
</span><span class='line'><span class="no">AWS_ACCESS_KEY_ID</span><span class="p">:</span> <span class="n">xxxx</span>
</span><span class='line'><span class="no">AWS_SECRET_ACCESS_KEY</span><span class="p">:</span> <span class="n">xxxx</span>
</span></code></pre></td></tr></table></div></figure>


<h2>AWS SESのリージョンを設定</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># config/initializers/aws_ses.rb</span>
</span><span class='line'><span class="no">Aws</span><span class="o">::</span><span class="no">Rails</span><span class="o">.</span><span class="n">add_action_mailer_delivery_method</span><span class="p">(</span><span class="ss">:aws_sdk</span><span class="p">,</span> <span class="p">{</span> <span class="n">region</span><span class="p">:</span> <span class="s1">&#39;us-east-1&#39;</span> <span class="p">})</span>
</span></code></pre></td></tr></table></div></figure>


<h2>あとはメールを送付するだけ</h2>

<p>「<strong><a href="http://morizyun.github.io/blog/action-mailer-rails-mail/">ActionMailer Railsアプリからメールを送信</a></strong>」とかを見つつメールを送付してみてください。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="err">$</span> <span class="n">rails</span> <span class="n">c</span>
</span><span class='line'><span class="no">Loading</span> <span class="n">development</span> <span class="n">environment</span> <span class="p">(</span><span class="no">Rails</span> <span class="mi">4</span><span class="o">.</span><span class="mi">2</span><span class="o">.</span><span class="mi">5</span><span class="p">)</span>
</span><span class='line'><span class="o">[</span><span class="mi">1</span><span class="o">]</span> <span class="n">pry</span><span class="p">(</span><span class="n">main</span><span class="p">)</span><span class="o">&gt;</span> <span class="no">Message</span><span class="o">.</span><span class="n">hello</span><span class="p">(</span><span class="s2">&quot;taro&quot;</span><span class="p">)</span><span class="o">.</span><span class="n">deliver_now</span>
</span><span class='line'>  <span class="no">Rendered</span> <span class="n">message</span><span class="o">/</span><span class="n">hello</span><span class="o">.</span><span class="n">html</span><span class="o">.</span><span class="n">slim</span> <span class="p">(</span><span class="mi">9</span><span class="o">.</span><span class="mi">9</span><span class="n">ms</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="no">Message</span><span class="c1">#hello: processed outbound mail in 311.3ms</span>
</span><span class='line'><span class="o">[</span><span class="no">Aws</span><span class="o">::</span><span class="no">SES</span><span class="o">::</span><span class="no">Client</span> <span class="mi">200</span> <span class="mi">1</span><span class="o">.</span><span class="mi">143329</span> <span class="mi">0</span> <span class="n">retries</span><span class="o">]</span> <span class="n">send_raw_email</span><span class="p">(</span><span class="n">raw_message</span><span class="p">:{</span><span class="n">data</span><span class="ss">:&quot;Date: Wed, 13 Jan 2016 20:52:31 +0900</span><span class="se">\r\n</span><span class="ss">From: xxxx</span><span class="se">\r\n</span><span class="ss">To: xxx</span><span class="se">\r\n</span><span class="ss">Message-ID: xxxx</span><span class="se">\r\n</span><span class="ss">Subject: Mail from Message</span><span class="se">\r\n</span><span class="ss">Mime-Version: 1.0</span><span class="se">\r\n</span><span class="ss">Content-Type: text/html;</span><span class="se">\r\n</span><span class="ss"> charset=UTF-8</span><span class="se">\r\n</span><span class="ss">Content-Transfer-Encoding: 7bit</span><span class="se">\r\n\r\n</span><span class="ss">There is taro&amp;#39;s body.&quot;</span><span class="p">},</span><span class="n">destinations</span><span class="p">:</span><span class="o">[</span><span class="s2">&quot;xxxx&quot;</span><span class="o">]</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="no">Sent</span> <span class="n">mail</span> <span class="n">to</span> <span class="n">xxxx</span> <span class="p">(</span><span class="mi">1173</span><span class="o">.</span><span class="mi">3</span><span class="n">ms</span><span class="p">)</span>
</span><span class='line'><span class="no">Date</span><span class="p">:</span> <span class="no">Wed</span><span class="p">,</span> <span class="mi">13</span> <span class="no">Jan</span> <span class="mi">2016</span> <span class="mi">20</span><span class="p">:</span><span class="mi">52</span><span class="p">:</span><span class="mi">31</span> <span class="o">+</span><span class="mi">0900</span>
</span><span class='line'><span class="no">From</span><span class="p">:</span> <span class="n">xxxx</span>
</span><span class='line'><span class="no">To</span><span class="p">:</span> <span class="n">xxxx</span>
</span><span class='line'><span class="no">Message</span><span class="o">-</span><span class="no">ID</span><span class="p">:</span> <span class="n">xxxx</span>
</span><span class='line'><span class="no">Subject</span><span class="p">:</span> <span class="no">Mail</span> <span class="n">from</span> <span class="no">Message</span>
</span><span class='line'><span class="no">Mime</span><span class="o">-</span><span class="no">Version</span><span class="p">:</span> <span class="mi">1</span><span class="o">.</span><span class="mi">0</span>
</span><span class='line'><span class="no">Content</span><span class="o">-</span><span class="no">Type</span><span class="p">:</span> <span class="n">text</span><span class="o">/</span><span class="n">html</span><span class="p">;</span>
</span><span class='line'> <span class="n">charset</span><span class="o">=</span><span class="no">UTF</span><span class="o">-</span><span class="mi">8</span>
</span><span class='line'><span class="no">Content</span><span class="o">-</span><span class="no">Transfer</span><span class="o">-</span><span class="no">Encoding</span><span class="p">:</span> <span class="mi">7</span><span class="n">bit</span>
</span><span class='line'>
</span><span class='line'><span class="no">There</span> <span class="n">is</span> <span class="n">taro</span><span class="o">&amp;</span><span class="c1">#39;s body.</span>
</span><span class='line'><span class="o">=&gt;</span> <span class="c1">#&lt;Mail::Message:xxxx, Multipart: false, Headers: &lt;Date: Wed, 13 Jan 2016 20:52:31 +0900&gt;, &lt;From: xxxx&gt;, &lt;To: xxxx&gt;, &lt;Message-ID: xxxx&gt;, &lt;Subject: Mail from Message&gt;, &lt;Mime-Version: 1.0&gt;, &lt;Content-Type: text/html&gt;, &lt;Content-Transfer-Encoding: 7bit&gt;&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>かなり簡単だった！</p>

<h2>Special Thanks</h2>

<ul>
<li><a href="http://qiita.com/sparkgene/items/fac6f74d044e2a73720e">Rails ＋ AWS SDK for Ruby V2でSESが使いたい - Qiita</a></li>
<li><a href="http://qiita.com/Vexus2/items/d47bc075bb33157dc88e">Rails - Amazon SES + Resque + ResqueMailerでメールを非同期配信 - Qiita</a></li>
<li><a href="https://ruby.awsblog.com/post/Tx18J68KPIUWMOX/Announcing-the-aws-sdk-rails-Gem">Announcing the aws-sdk-rails Gem - AWS Developer Blog - Ruby</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Cells4 - Ruby/Rails でView components を実現する[Rails4.2]]]></title>
    <link href="http://morizyun.github.io/blog/cells4-rails-partial-compornents-framework/"/>
    <updated>2016-01-12T23:50:00+09:00</updated>
    <id>http://morizyun.github.io/blog/cells4-rails-partial-compornents-framework</id>
    <content type="html"><![CDATA[<p><a href="http://www.amazon.co.jp/gp/product/4774178020/ref=as_li_qf_sp_asin_il?ie=UTF8&camp=247&creative=1211&creativeASIN=4774178020&linkCode=as2&tag=morizyun00-22"><img border="0" src="http://ws.assoc-amazon.jp/widgets/q?_encoding=UTF8&ASIN=4774178020&Format=_SL160_&ID=AsinImage&MarketPlace=JP&ServiceVersion=20070822&WS=1&tag=morizyun00-22" width="150" style="float: left; margin: 0 20px 20px 0;" ></a><img src="http://www.assoc-amazon.jp/e/ir?t=morizyun00-22&l=as2&o=9&a=4774178020" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /> Railsの部分テンプレートに付随するロジックをコントローラから分離するためのView Componentsを実現する『<strong><a href="https://github.com/apotonick/cells">apotonick/cells - GitHub</a></strong>』の紹介です。</p>

<!-- more -->


<br style="clear:both;"/>


<script async src="http://morizyun.github.io//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<!-- square -->


<p><ins class="adsbygoogle" style="display:inline-block;width:336px;height:280px" data-ad-client="ca-pub-4186413323075068" data-ad-slot="5059873392"></ins></p>

<script>
    (adsbygoogle = window.adsbygoogle || []).push({});
</script>


<h2>Gemのインストール</h2>

<p><code>Gemfile</code>に以下を追加して、コンソールで<code>bundle</code>を実行してください。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># 部分テンプレートのロジック分離</span>
</span><span class='line'><span class="n">gem</span> <span class="s1">&#39;cells&#39;</span><span class="p">,</span> <span class="s2">&quot;~&gt; 4.0.0&quot;</span>
</span><span class='line'><span class="n">gem</span> <span class="s2">&quot;cells-slim&quot;</span> <span class="c1"># cells-erb, cells-haml</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Cellsのファイルの生成</h2>

<p><code>comment</code> に対する</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># book の scaffold</span>
</span><span class='line'>rails g scaffold book title:string author:string price:integer
</span><span class='line'>  <span class="o">(</span>省略<span class="o">)</span>
</span><span class='line'>
</span><span class='line'><span class="c"># book の show スタイルを作成</span>
</span><span class='line'>rails g cell book show
</span><span class='line'>      create  app/cells/book_cell.rb
</span><span class='line'>      create  app/cells/book/show.slim
</span></code></pre></td></tr></table></div></figure>


<h2>Cellsのrenderについて</h2>

<p>部分テンプレートとして表示させたい箇所に以下を記述します。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># app/views/books/index.html.slim</span>
</span><span class='line'>table
</span><span class='line'>  thead
</span><span class='line'>    tr
</span><span class='line'>      th title
</span><span class='line'>      th author
</span><span class='line'>      th price
</span><span class='line'>      th action
</span><span class='line'>  tbody
</span><span class='line'>    -# 今回はここで @books をまとめて渡しています
</span><span class='line'>    -# パラメータとかも渡せます。cell style を指定する事もできます<span class="o">(</span>省略するとshow<span class="o">)</span>
</span><span class='line'>    <span class="o">=</span> cell<span class="o">(</span><span class="s1">&#39;book&#39;</span>, collection: @books<span class="o">)</span>
</span><span class='line'>    <span class="c"># =&gt; - @books.each do |book|</span>
</span><span class='line'>    <span class="c"># =&gt;   = cell(&#39;book&#39;, book) と同義です</span>
</span></code></pre></td></tr></table></div></figure>


<p>これで <code>book_cell.rb</code> に対して <code>@books</code> を一括で渡しています。</p>

<script async src="http://morizyun.github.io//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<!-- square -->


<p><ins class="adsbygoogle" style="display:inline-block;width:336px;height:280px" data-ad-client="ca-pub-4186413323075068" data-ad-slot="5059873392"></ins></p>

<script>
    (adsbygoogle = window.adsbygoogle || []).push({});
</script>


<h2>Cell::ViewModel について</h2>

<p>続いて 先ほど渡された <code>@books</code> の中の <code>book</code> を受け取って処理する部分です。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># app/cells/book_cell.rb</span>
</span><span class='line'><span class="k">class</span> <span class="nc">BookCell</span> <span class="o">&lt;</span> <span class="no">Cell</span><span class="o">::</span><span class="no">ViewModel</span>
</span><span class='line'>  <span class="kp">include</span> <span class="no">Cell</span><span class="o">::</span><span class="no">Slim</span> <span class="c1"># erb /haml に変更可能</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1"># キャッシュする時間を設定できます</span>
</span><span class='line'>  <span class="n">cache</span> <span class="ss">:show</span><span class="p">,</span> <span class="n">expires_in</span><span class="p">:</span> <span class="mi">10</span><span class="o">.</span><span class="n">minutes</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1"># 呼び出しできるフィールドを指定</span>
</span><span class='line'>  <span class="n">property</span> <span class="ss">:title</span><span class="p">,</span> <span class="ss">:author</span><span class="p">,</span> <span class="ss">:price</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">show</span>
</span><span class='line'>    <span class="n">render</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>イメージ的には <code>active_decorator</code> のようなプレゼンテーション層に近いイメージです。</p>

<h2>CellのView</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># app/cells/book/show.slim</span>
</span><span class='line'><span class="n">tr</span>
</span><span class='line'>  <span class="n">td</span> <span class="o">=</span> <span class="n">title</span>
</span><span class='line'>  <span class="n">td</span> <span class="o">=</span> <span class="n">author</span>
</span><span class='line'>  <span class="n">td</span> <span class="o">=</span> <span class="n">price</span>
</span><span class='line'>  <span class="n">td</span>
</span><span class='line'>    <span class="o">=</span> <span class="n">link_to</span> <span class="s1">&#39;Show&#39;</span><span class="p">,</span> <span class="n">model</span>
</span><span class='line'>    <span class="o">=</span> <span class="s1">&#39; / &#39;</span>
</span><span class='line'>    <span class="o">=</span> <span class="n">link_to</span> <span class="s1">&#39;Edit&#39;</span><span class="p">,</span> <span class="n">edit_book_path</span><span class="p">(</span><span class="n">model</span><span class="p">)</span>
</span><span class='line'>    <span class="o">=</span> <span class="s1">&#39; / &#39;</span>
</span><span class='line'>    <span class="o">=</span> <span class="n">link_to</span> <span class="s1">&#39;Destroy&#39;</span><span class="p">,</span> <span class="n">model</span><span class="p">,</span> <span class="n">data</span><span class="p">:</span> <span class="p">{</span><span class="ss">:confirm</span> <span class="o">=&gt;</span> <span class="s1">&#39;Are you sure?&#39;</span><span class="p">},</span> <span class="ss">:method</span> <span class="o">=&gt;</span> <span class="ss">:delete</span>
</span></code></pre></td></tr></table></div></figure>


<p>こんな感じで表示できました。</p>

<p><img src="https://farm2.staticflickr.com/1711/23708723064_a1db0517a6.jpg" width="500" height="235" alt="スクリーンショット 2016-01-13 0.06.56"></p>

<p>設計思想を完全には把握できていないですが、以下の説明がしっくりきました。</p>

<pre>
- ViewModelは、UI要素と結合しないプレゼンテーション・ロジックを担当
- Viewは、UI要素に結合したプレゼンテーション・ロジックを担当
</pre>


<h2>Helperメソッドを使いたい場合</h2>

<p>Helperメソッドを使いたい場合は、コントローラ的メソッドの部分に以下を記述。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># app/cells/book_cell.rb</span>
</span><span class='line'><span class="k">class</span> <span class="nc">BookCell</span> <span class="o">&lt;</span> <span class="no">Cell</span><span class="o">::</span><span class="no">ViewModel</span>
</span><span class='line'>  <span class="kp">include</span> <span class="no">ActionView</span><span class="o">::</span><span class="no">Helpers</span><span class="o">::</span><span class="no">UrlHelper</span>
</span><span class='line'>  <span class="kp">include</span> <span class="no">ActionView</span><span class="o">::</span><span class="no">Helpers</span><span class="o">::</span><span class="no">CaptureHelper</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">author_link</span>
</span><span class='line'>    <span class="n">content_tag</span> <span class="ss">:div</span><span class="p">,</span> <span class="n">link_to</span><span class="p">(</span><span class="n">model</span><span class="o">.</span><span class="n">author</span><span class="p">,</span> <span class="n">model</span><span class="o">.</span><span class="n">author_url</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>適切に使いこなせれば、UI Component単位で処理を切り分けられそうです！</p>

<h2>公式サイト</h2>

<p>CellsのGitHubはこちら。英語ですがわかりやすいのでオススメです。</p>

<p><a href="https://github.com/apotonick/cells" class="button big primary" title="apotonick/cells · GitHub">apotonick/cells · GitHub</a></p>

<h2>Trailblazer framework</h2>

<p>Cellsは、Trailblazer frameworkのコンポーネントの一つとしても使われています。</p>

<ul>
<li><a href="http://qiita.com/kbaba1001/items/e265ad1e40f238931468">Ruby - Rails のアーキテクチャ設計を考える - Qiita</a></li>
<li><a href="http://trailblazer.to/">Trailblazer: A High-Level Architecture For The Web</a></li>
</ul>


<p>Trailblazerは、チームの学習コストや今後のRailsの進化の方向性によっても導入すべきかは悩ましい&#8230;</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ActiveModelを使って、Classにバリデーションなどの便利機能を追加 [Rails4.2]]]></title>
    <link href="http://morizyun.github.io/blog/activemodel-rails-basic-usage/"/>
    <updated>2016-01-11T21:10:00+09:00</updated>
    <id>http://morizyun.github.io/blog/activemodel-rails-basic-usage</id>
    <content type="html"><![CDATA[<p><a href="http://www.amazon.co.jp/gp/product/B00NM7VROQ/ref=as_li_qf_sp_asin_il?ie=UTF8&camp=247&creative=1211&creativeASIN=B00NM7VROQ&linkCode=as2&tag=morizyun00-22"><img border="0" src="http://ws.assoc-amazon.jp/widgets/q?_encoding=UTF8&ASIN=B00NM7VROQ&Format=_SL160_&ID=AsinImage&MarketPlace=JP&ServiceVersion=20070822&WS=1&tag=morizyun00-22" width="150" style="float: left; margin: 0 20px 20px 0;" ></a><img src="http://www.assoc-amazon.jp/e/ir?t=morizyun00-22&l=as2&o=9&a=B00NM7VROQ" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" />
RailsのModelで便利に使っているバリデーションなどの機能をオブジェクトに追加する際には、<code>include ActiveModel::Model</code> がお手軽で便利ですよというお話です。
ちょっとボケて失念してしまっていたので、念のためメモです。</p>

<!-- more -->


<br style="clear:both;"/>


<script async src="http://morizyun.github.io//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<!-- square -->


<p><ins class="adsbygoogle" style="display:inline-block;width:336px;height:280px" data-ad-client="ca-pub-4186413323075068" data-ad-slot="5059873392"></ins></p>

<script>
    (adsbygoogle = window.adsbygoogle || []).push({});
</script>


<h2>できること</h2>

<p>この <code>include ActiveModel::Model</code> でできることはこちら。</p>

<ul>
<li><code>Hoge.new({fuga: pugi})</code> みたいなイニシャライズができる</li>
<li>attributeのバリデーションを作れる</li>
<li><code>form_for</code> などで使える</li>
</ul>


<h2>実装例</h2>

<p>オブジェクトの実装はこちら。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># app/forms/non_model.rb</span>
</span><span class='line'><span class="k">class</span> <span class="nc">Form</span><span class="o">::</span><span class="no">NonModel</span>
</span><span class='line'>  <span class="c1"># ------------------------------------------------------------------</span>
</span><span class='line'>  <span class="c1"># Modules</span>
</span><span class='line'>  <span class="c1"># ------------------------------------------------------------------</span>
</span><span class='line'>  <span class="kp">include</span> <span class="no">ActiveModel</span><span class="o">::</span><span class="no">Model</span> <span class="c1"># Modelの便利機能とか</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1"># ------------------------------------------------------------------</span>
</span><span class='line'>  <span class="c1"># Attributes</span>
</span><span class='line'>  <span class="c1"># ------------------------------------------------------------------</span>
</span><span class='line'>  <span class="kp">attr_accessor</span> <span class="ss">:foo</span><span class="p">,</span> <span class="ss">:bar</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1"># ------------------------------------------------------------------</span>
</span><span class='line'>  <span class="c1"># Validations</span>
</span><span class='line'>  <span class="c1"># ------------------------------------------------------------------</span>
</span><span class='line'>  <span class="n">validates</span> <span class="ss">:foo</span><span class="p">,</span> <span class="n">presence</span><span class="p">:</span> <span class="kp">true</span>
</span><span class='line'>  <span class="n">validates</span> <span class="ss">:bar</span><span class="p">,</span> <span class="n">presence</span><span class="p">:</span> <span class="kp">true</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>オブジェクトを使う際はこちら。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># バリデーションOKのオブジェクト</span>
</span><span class='line'><span class="n">vaiid_form</span> <span class="o">=</span> <span class="no">Form</span><span class="o">::</span><span class="no">NonModel</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="n">foo</span><span class="p">:</span> <span class="s1">&#39;foooo&#39;</span><span class="p">,</span> <span class="n">bar</span><span class="p">:</span> <span class="s1">&#39;baaaan!&#39;</span><span class="p">)</span>
</span><span class='line'><span class="n">vaiid_form</span><span class="o">.</span><span class="n">valid?</span> <span class="c1">#=&gt; true</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># バリデーションNGのオブジェクト</span>
</span><span class='line'><span class="n">invalid_form</span> <span class="o">=</span> <span class="no">Form</span><span class="o">::</span><span class="no">NonModel</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="n">foo</span><span class="p">:</span> <span class="s1">&#39;foooo&#39;</span><span class="p">)</span>
</span><span class='line'><span class="n">invalid_form</span><span class="o">.</span><span class="n">valid?</span> <span class="c1">#=&gt; false</span>
</span><span class='line'><span class="n">invalid_form</span><span class="o">.</span><span class="n">errors</span> <span class="c1">#=&gt; #&lt;ActiveModel::Errors:0x007fe6bb19df58 @base=#&lt;Form::NonModel:0x007fe6beec6038 @errors=#&lt;ActiveModel::Errors:0x007fe6bb19df58 ...&gt;, @foo=&quot;foooo&quot;, @validation_context=nil&gt;, @messages={:bar=&gt;[&quot;を入力してください。&quot;]}&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>地味だけど、便利です。Fat Modelを避けるために、責務に応じたオブジェクトを作る際に適用範囲は広いです。</p>

<script async src="http://morizyun.github.io//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<!-- square -->


<p><ins class="adsbygoogle" style="display:inline-block;width:336px;height:280px" data-ad-client="ca-pub-4186413323075068" data-ad-slot="5059873392"></ins></p>

<script>
    (adsbygoogle = window.adsbygoogle || []).push({});
</script>


<h2>あどがき</h2>

<p>「<strong><a href="http://qiita.com/kbaba1001/items/e265ad1e40f238931468">Ruby - Rails のアーキテクチャ設計を考える - Qiita</a></strong>」も勉強になる。
チームへの導入コスト等も考えつつ、検討していきたい！</p>

<h2>Special Thanks</h2>

<ul>
<li><a href="http://tanihiro.hatenablog.com/entry/2014/01/09/193720">【ruby】ActiveModelを使ってDBと関係ないFormを作成する【Rails】 - tanihiro.log</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rails 4.2 + Bootstrap の Application template 1コマンドで！[Ruby 2.3]]]></title>
    <link href="http://morizyun.github.io/blog/rails4-application-templates-heroku/"/>
    <updated>2016-01-11T09:20:00+09:00</updated>
    <id>http://morizyun.github.io/blog/rails4-application-templates-heroku</id>
    <content type="html"><![CDATA[<p><a href="http://www.amazon.co.jp/gp/product/4839953554/ref=as_li_qf_sp_asin_il?ie=UTF8&camp=247&creative=1211&creativeASIN=4839953554&linkCode=as2&tag=morizyun00-22"><img border="0" src="http://ws.assoc-amazon.jp/widgets/q?_encoding=UTF8&ASIN=4839953554&Format=_SL160_&ID=AsinImage&MarketPlace=JP&ServiceVersion=20070822&WS=1&tag=morizyun00-22" width="150" style="float: left; margin: 0 20px 20px 0;" ></a><img src="http://www.assoc-amazon.jp/e/ir?t=morizyun00-22&l=as2&o=9&a=4839953554" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" />
Application templateとは、Railsプロジェクトの時に必要になる定形の作業をスクリプトっぽく記述することが出来る仕組みです。
週末に簡単なアプリ作ったり、ハッカソンとか出場して1秒でも節約がしたい人におすすめの仕組みです。</p>

<p>今回いつも使っている<code>rails_template</code>をアップデートしてみました！</p>

<p><strong><a href="https://github.com/morizyun/rails4_template">morizyun/rails4_template</a></strong></p>

<p>もしよければこちらをForkして頂いて、自分好みにカスタマイズしてみてください＾＾</p>

<p><strong>(2016/01/11 9:20) Rails 4.2 x Ruby 2.3の動作確認。記事をリファクタリング。slim => faml/haml-railsに変更</strong></p>

<!-- more -->


<br style="clear:both;"/>


<script async src="http://morizyun.github.io//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<!-- square -->


<p><ins class="adsbygoogle" style="display:inline-block;width:336px;height:280px" data-ad-client="ca-pub-4186413323075068" data-ad-slot="5059873392"></ins></p>

<script>
    (adsbygoogle = window.adsbygoogle || []).push({});
</script>


<h2>事前準備</h2>

<p>まずは、手元のRubyとRailsを最新にしてください。</p>

<p>homebrew経由のrbenvのアップデート手順は、『<strong><a href="http://morizyun.github.io/blog/rbenv-update-brew-new-ruby-version/">rbenv を update して最新のRuby バージョンをインストール</a></strong>』をご参照ください。</p>

<p>次に<code>rails</code>もアップデートします。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># railsのインストール</span>
</span><span class='line'><span class="nv">$ </span>gem install rails
</span><span class='line'>
</span><span class='line'><span class="c"># インストール済ならアップデート</span>
</span><span class='line'><span class="nv">$ </span>gem update rails
</span></code></pre></td></tr></table></div></figure>


<p>あと、gitignoreの生成ツール『<strong><a href="https://github.com/simonwhitaker/gibo">simonwhitaker/gibo</a></strong>』を使って<code>.gitignore</code>を生成していますので良ければぜひ！</p>

<p>Macな人は以下のコマンドを実行するだけでインストールできるので、めっちゃお勧めです。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>brew install gibo
</span></code></pre></td></tr></table></div></figure>


<h2>Application Templateの使い方</h2>

<p>使い方は以下のコマンドを実行するだけ。<br/>
(アプリ名の<code>test_app</code>はハイフンNGっす[修正トライ中&#8230;])</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># PostgreSQL</span>
</span><span class='line'><span class="nv">$ </span>rails new test_app --database<span class="o">=</span>postgresql --skip-test-unit --skip-bundle -m https://raw.github.com/morizyun/rails4_template/master/app_template.rb
</span><span class='line'>
</span><span class='line'><span class="c"># MySQL</span>
</span><span class='line'><span class="nv">$ </span>rails new test_app --database<span class="o">=</span>mysql --skip-test-unit --skip-bundle -m https://raw.github.com/morizyun/rails4_template/master/app_template.rb
</span></code></pre></td></tr></table></div></figure>


<p>とするとモダンなRailsをtemplateの手順に従って構築していきます！</p>

<p>ちなみに使っているGemや実際にやっているコマンドなどは以下のリンクを参照してください。</p>

<p><strong><a href="https://github.com/morizyun/rails4_template/blob/master/app_template.rb">rails4_template/app_template.rb - morizyun/rails4_template</a></strong></p>

<script async src="http://morizyun.github.io//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<!-- square -->


<p><ins class="adsbygoogle" style="display:inline-block;width:336px;height:280px" data-ad-client="ca-pub-4186413323075068" data-ad-slot="5059873392"></ins></p>

<script>
    (adsbygoogle = window.adsbygoogle || []).push({});
</script>


<h2>Application Templateをカスタマイズする</h2>

<p>ここからは、Application Templateを変更する際に参考になりそうなサイトさんの一覧です。</p>

<p>まずは、Ruby on Rails Guidの説明。</p>

<p><a href="http://guides.rubyonrails.org/rails_application_templates.html"><img title="Now Capturing..." src="http://capture.heartrails.com/400x300/cool?http://guides.rubyonrails.org/rails_application_templates.html" alt="http://guides.rubyonrails.org/rails_application_templates.html" width="400" height="300" /></a></p>

<p>あとは、GitHubのApplication Templateを物色するのもあり。</p>

<p><a href="https://github.com/search?q=rails%20template&source=c"><img title="Now Capturing..." src="http://capture.heartrails.com/400x300/cool?https://github.com/search?q=rails%20template&source=c" alt="https://github.com/search?q=rails%20template&source=c" width="400" height="300" /></a></p>

<p>日本語の説明的にはこちらのQiitaの記事を拝見してモチベーションが上がりました！</p>

<p><a href="http://qiita.com/tachiba/items/26b2e9dc271bd8e6907d"><img title="Now Capturing..." src="http://capture.heartrails.com/400x300/cool?http://qiita.com/tachiba/items/26b2e9dc271bd8e6907d" alt="http://qiita.com/tachiba/items/26b2e9dc271bd8e6907d" width="400" height="300" /></a></p>

<p>あとはこちらのスライドもApplication Templateの良さをわかり易く説明して頂いてます！かなり参考人させていただきました。</p>

<iframe src="http://www.slideshare.net/slideshow/embed_code/27829933" width="597" height="486" frameborder="0" marginwidth="0" marginheight="0" scrolling="no" style="border:1px solid #CCC;border-width:1px 1px 0;margin-bottom:5px" allowfullscreen> </iframe>


<h2>今回の公開物</h2>

<p>多分ただでさえ、僕個人の環境でしか動かない可能性が高いのに、さらに変更しまくっているので、動かない時も多いかと思います。
でも、公開してツッコミをもらって、templateをしっかり成長させれば、汎用的なRailsアプリ作成の省力化に貢献できると信じています。</p>

<p><strong><a href="https://github.com/morizyun/rails4_template">morizyun/rails4_template</a></strong></p>

<p><a href="https://github.com/morizyun/rails4_template"><img title="Now Capturing..." src="http://capture.heartrails.com/400x300/cool?https://github.com/morizyun/rails4_template" alt="https://github.com/morizyun/rails4_template" width="400" height="300" /></a></p>

<h2>変更来歴</h2>

<p>(2014-01/04 09:40) giboの説明を追加<br/>
(2014-01/04 11:35) Redisを超簡単セットアップを追加<br/>
(2015-01-03 10:40) haml => slimに変更とか<br/>
(2016-01-11 09:20) Rails 4.2 x Ruby 2.3の動作確認。記事をリファクタリング。slim => faml/haml-railsに変更<br/></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[kaminariをBootstrap3、Rails4.2環境で使う！[Ruby 2.3]]]></title>
    <link href="http://morizyun.github.io/blog/kaminari-gem-paginator-rails/"/>
    <updated>2016-01-11T09:10:00+09:00</updated>
    <id>http://morizyun.github.io/blog/kaminari-gem-paginator-rails</id>
    <content type="html"><![CDATA[<p><a href="http://www.amazon.co.jp/gp/product/4048916599/ref=as_li_qf_sp_asin_il?ie=UTF8&camp=247&creative=1211&creativeASIN=4048916599&linkCode=as2&tag=morizyun00-22"><img border="0" src="http://ws.assoc-amazon.jp/widgets/q?_encoding=UTF8&ASIN=4048916599&Format=_SL160_&ID=AsinImage&MarketPlace=JP&ServiceVersion=20070822&WS=1&tag=morizyun00-22" width="150" style="float: left; margin: 0 20px 20px 0;" ></a><img src="http://www.assoc-amazon.jp/e/ir?t=morizyun00-22&l=as2&o=9&a=4048916599" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" />
Rails 4でも不動の人気を誇るページネーター「<strong><a href="https://github.com/amatsuda/kaminari#customizing-the-pagination-helper">amatsuda/kaminari</a></strong>」を
Bootstrap3、Rails4環境で使うための導入手順です。びっくりするくらい簡単に導入できちゃいますよ！</p>

<p><strong>(2016/01/11) Rails 4.2 x Ruby 2.3の動作確認。記事をリファクタリング</strong></p>

<!-- more -->


<br style="clear:both;"/>


<h2>まえおき</h2>

<p>この記事は、Bootstrap環境を構築済の前提で話を進めます。もし、Bootstrap環境の構築からスタートしたい場合は、
拙著『<strong><a href="http://morizyun.github.io/blog/rails4-application-templates-heroku/">Rails 4.2 + Bootstrap の Application template 1コマンドでモダンRailsが！</a></strong>』をご参照頂ければ幸甚です！</p>

<h2>Gemインストール</h2>

<p>Gemfileに以下を追加して、<code>bundle install</code>を実行。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># Gemfile</span>
</span><span class='line'><span class="c1"># Pagenation</span>
</span><span class='line'><span class="n">gem</span> <span class="s1">&#39;kaminari&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<h2>kaminari configの設定</h2>

<p>kaminariのconfig(設定)ファイルを生成。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>rails g kaminari:config
</span></code></pre></td></tr></table></div></figure>


<p><code>config/initializers/kaminari_config.rb</code>を構築するサイトに合わせて各種パラメータを調整。
パラメータの詳細は『 <strong><a href="https://github.com/amatsuda/kaminari#general-configuration-options">amatsuda/kaminari | GitHub</a></strong>』を参照。</p>

<h2>Controller/Viewへの設置</h2>

<p>Controllerでページネーションをするための変数を追加。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="vi">@users</span> <span class="o">=</span> <span class="no">User</span><span class="o">.</span><span class="n">order</span><span class="p">(</span><span class="ss">:name</span><span class="p">)</span><span class="o">.</span><span class="n">page</span><span class="p">(</span><span class="n">params</span><span class="o">[</span><span class="ss">:page</span><span class="o">]</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>Viewでページネーションを表示したい場所に以下のコードを追加。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='haml'><span class='line'><span class="p">=</span> <span class="n">paginate</span> <span class="vi">@users</span>
</span></code></pre></td></tr></table></div></figure>


<h2>ベージネーションViewのテンプレート取得</h2>

<p>次のコマンドを実行すると <code>/app/view/kaminari/</code> フォルダにBootstrap用のViewを生成してくれます。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>rails g kaminari:views bootstrap3
</span></code></pre></td></tr></table></div></figure>


<h2>ページネーターの表示カスタマイズ</h2>

<p>ページネーションの文言(prevやnextなど)の変更程度であれば、i18nの日本語設定ファイルに以下の内容を追加するだけで解決します。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># conifg/locales/ja.yml</span>
</span><span class='line'><span class="n">ja</span><span class="p">:</span>
</span><span class='line'>  <span class="n">views</span><span class="p">:</span>
</span><span class='line'>    <span class="n">pagination</span><span class="p">:</span>
</span><span class='line'>      <span class="n">first</span><span class="p">:</span> <span class="s2">&quot;&amp;laquo;&quot;</span>
</span><span class='line'>      <span class="n">last</span><span class="p">:</span> <span class="s2">&quot;&amp;raquo;&quot;</span>
</span><span class='line'>      <span class="n">previous</span><span class="p">:</span> <span class="s2">&quot;&amp;lsaquo;&quot;</span>
</span><span class='line'>      <span class="k">next</span><span class="p">:</span> <span class="s2">&quot;&amp;rsaquo;&quot;</span>
</span><span class='line'>      <span class="n">truncate</span><span class="p">:</span> <span class="s2">&quot;...&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>上は英語部分を外して、記号を残した場合の例です。これだけでもシンプルでわかりやすいですよ！</p>

<p><img src="http://farm9.staticflickr.com/8477/8250145044_9193f27280_n.jpg" width="320" height="42" alt="fpu_tmp_1354804296.8519_d61bda"></p>

<script async src="http://morizyun.github.io//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<!-- square -->


<p><ins class="adsbygoogle" style="display:inline-block;width:336px;height:280px" data-ad-client="ca-pub-4186413323075068" data-ad-slot="5059873392"></ins></p>

<script>
    (adsbygoogle = window.adsbygoogle || []).push({});
</script>


<h2>ルーティングの設定</h2>

<p>ルーティングを以下の様に変更します。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># config/routes.rb</span>
</span><span class='line'><span class="n">resources</span> <span class="ss">:users</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">get</span> <span class="s1">&#39;page/:page&#39;</span><span class="p">,</span> <span class="ss">:action</span> <span class="o">=&gt;</span> <span class="ss">:index</span><span class="p">,</span> <span class="ss">:on</span> <span class="o">=&gt;</span> <span class="ss">:collection</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>このルーティングのメリットは次の通り。</p>

<pre>
* SEO的に良い、ユーザーフレンドリーである
* params pageがURLセグメントの一部 => RailsのPageキャシュが有効に
</pre>


<h2>表示確認</h2>

<p>ブラウザで表示を確認します。以下は今回作ったサンプルページネーションです。</p>

<p><img src="http://farm9.staticflickr.com/8340/8244955784_4b2ae33c4a_n.jpg" width="320" height="44" alt="fpu_tmp_1354636719.4462_910632"></p>

<h2>(補足) プレゼンターのGem Draperと共存させる場合</h2>

<p>kaminariとプレゼンターのDraperを使う場合は、Draperがうまくkaminariのメソッドを呼び出せない場合があります。<br/></p>

<p>その場合は、<code>config/initializers/draper.rb</code>を作成して以下を記入しておくとエラーを回避できます。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">Draper</span><span class="o">::</span><span class="no">CollectionDecorator</span><span class="o">.</span><span class="n">delegate</span> <span class="ss">:current_page</span><span class="p">,</span> <span class="ss">:total_pages</span><span class="p">,</span> <span class="ss">:limit_value</span><span class="p">,</span> <span class="ss">:total_count</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong><a href="https://github.com/drapergem/draper/issues/401">Kaminari vs Draper · Issue #401 · drapergem/draper</a></strong></p>

<script async src="http://morizyun.github.io//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<!-- square -->


<p><ins class="adsbygoogle" style="display:inline-block;width:336px;height:280px" data-ad-client="ca-pub-4186413323075068" data-ad-slot="5059873392"></ins></p>

<script>
    (adsbygoogle = window.adsbygoogle || []).push({});
</script>


<h2>Special Thanks</h2>

<p><strong><a href="https://github.com/amatsuda/kaminari#customizing-the-pagination-helper">amatsuda/kaminari | GitHub</a></strong></p>

<p><strong><a href="https://github.com/amatsuda/kaminari/wiki/Kaminari-recipes">Kaminari recipes | amatsuda/kaminari | GitHub wiki</a></strong></p>

<p><strong><a href="http://d.hatena.ne.jp/CortYuming/20131027/p1">ささっと Rails4 + Bootstrap3 + kaminari でゲストブック作成してみるメモ - 牌語備忘録 - pygo</a></strong></p>

<h2>変更来歴</h2>

<p>(2013/04/18 23:35) 補足: プレゼンターDraperと共存させる場合を追加<br/>
(2013/12/23 20:15) Bootstrap3、Rails4に対応<br/>
(2015/12/20 18:30) コマンドを修正<br/>
(2016/01/11 09:10) Rails 4.2 x Ruby 2.3の動作確認。記事をリファクタリング<br/></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Wheneverは導入が超簡単なcrontab管理ライブラリGemです！[Rails4.2 x Ruby2.3]]]></title>
    <link href="http://morizyun.github.io/blog/whenever-gem-rails-ruby-capistrano/"/>
    <updated>2016-01-10T14:45:00+09:00</updated>
    <id>http://morizyun.github.io/blog/whenever-gem-rails-ruby-capistrano</id>
    <content type="html"><![CDATA[<p><a href="http://www.amazon.co.jp/gp/product/B016QEE30G/ref=as_li_qf_sp_asin_il?ie=UTF8&camp=247&creative=1211&creativeASIN=B016QEE30G&linkCode=as2&tag=morizyun00-22"><img border="0" src="http://ws.assoc-amazon.jp/widgets/q?_encoding=UTF8&ASIN=B016QEE30G&Format=_SL160_&ID=AsinImage&MarketPlace=JP&ServiceVersion=20070822&WS=1&tag=morizyun00-22" width="150" style="float: left; margin: 0 20px 20px 0;" ></a><img src="http://www.assoc-amazon.jp/e/ir?t=morizyun00-22&l=as2&o=9&a=B016QEE30G" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" />wheneverはcrontab管理ライブラリです。導入はすごく簡単ですし、RailsやCapistranoとの連携もスムーズで楽ちんです！定期実行するような処理がある場合はぜひご検討ください！</p>

<p><a href="https://github.com/javan/whenever" title="javan/whenever · GitHub" class="button big primary">javan/whenever · GitHub</a></p>

<p><strong>(2016/01/10) Rails 4.2 x Ruby 2.3の動作確認。記事をリファクタリング</strong></p>

<!-- more -->


<br style="clear:both;"/>


<script async src="http://morizyun.github.io//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<!-- square -->


<p><ins class="adsbygoogle" style="display:inline-block;width:336px;height:280px" data-ad-client="ca-pub-4186413323075068" data-ad-slot="5059873392"></ins></p>

<script>
    (adsbygoogle = window.adsbygoogle || []).push({});
</script>


<h2>Gemのインストール</h2>

<p>いつもどおり<code>Gemfile</code>に以下を追加して、<code>bundle install</code>を実行してください。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># Gemfile</span>
</span><span class='line'><span class="c1"># crontab管理</span>
</span><span class='line'><span class="n">gem</span> <span class="s1">&#39;whenever&#39;</span><span class="p">,</span> <span class="nb">require</span><span class="p">:</span> <span class="kp">false</span>
</span></code></pre></td></tr></table></div></figure>


<h2>whenever設定ファイルschedule.rbを作成</h2>

<p>以下のコマンドを実行してconfig/schedule.rb</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>bundle <span class="nb">exec </span>wheneverize .
</span><span class='line'>&gt; <span class="o">[</span>add<span class="o">]</span> writing <span class="sb">`</span>./config/schedule.rb<span class="err">&#39;</span>
</span><span class='line'>&gt; <span class="o">[</span><span class="k">done</span><span class="o">]</span> wheneverized! <span class="c">#&lt;= 成功</span>
</span></code></pre></td></tr></table></div></figure>


<h2>wheneverのコマンドの解説</h2>

<p>wheneverでは以下の4つをスケジューリングできます。</p>

<pre>
command: bashコマンド実行
rake: rakeタスク実行
runner: Rails内のメソッド実行
script: scriptの実行
</pre>


<h2>設定の具体例</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># config/schedule.rb</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># 出力先のログファイルの指定</span>
</span><span class='line'><span class="n">set</span> <span class="ss">:output</span><span class="p">,</span> <span class="s1">&#39;log/crontab.log&#39;</span>
</span><span class='line'><span class="c1"># ジョブの実行環境の指定</span>
</span><span class='line'><span class="n">set</span> <span class="ss">:environment</span><span class="p">,</span> <span class="ss">:production</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># 3時間毎に実行するスケジューリング</span>
</span><span class='line'><span class="n">every</span> <span class="mi">3</span><span class="o">.</span><span class="n">hours</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">runner</span> <span class="s1">&#39;MyModel.some_process&#39;</span>
</span><span class='line'>  <span class="n">rake</span> <span class="s1">&#39;my:rake:task&#39;</span>
</span><span class='line'>  <span class="n">command</span> <span class="s1">&#39;/usr/bin/my_great_command&#39;</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># 毎日 am4:30のスケジューリング</span>
</span><span class='line'><span class="n">every</span> <span class="mi">1</span><span class="o">.</span><span class="n">day</span><span class="p">,</span> <span class="n">at</span><span class="p">:</span> <span class="s1">&#39;4:30 am&#39;</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">runner</span> <span class="s1">&#39;MyModel.task_to_run_at_four_thirty_in_the_morning&#39;</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># 一時間毎のスケジューリング</span>
</span><span class='line'><span class="n">every</span> <span class="ss">:hour</span> <span class="k">do</span> <span class="c1"># Many shortcuts available: :hour, :day, :month, :year, :reboot</span>
</span><span class='line'>  <span class="n">runner</span> <span class="s1">&#39;SomeModel.ladeeda&#39;</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># 日曜日のpm12時にスケジューリング</span>
</span><span class='line'><span class="n">every</span> <span class="ss">:sunday</span><span class="p">,</span> <span class="n">at</span><span class="p">:</span> <span class="s1">&#39;12pm&#39;</span> <span class="k">do</span> <span class="c1"># Use any day of the week or :weekend, :weekday</span>
</span><span class='line'>  <span class="n">runner</span> <span class="s1">&#39;Task.do_something_great&#39;</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># crontab型の設定「分」「時」「日」「月」「曜日」</span>
</span><span class='line'><span class="c1"># 毎月27日〜31日まで0:00に実行</span>
</span><span class='line'><span class="n">every</span> <span class="s1">&#39;0 0 27-31 * * &#39;</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">command</span> <span class="s1">&#39;echo &#39;</span><span class="n">you</span> <span class="n">can</span> <span class="n">use</span> <span class="n">raw</span> <span class="n">cron</span> <span class="n">syntax</span> <span class="n">too</span><span class="s1">&#39;&#39;</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># 6-24時まで3時間おきに実行</span>
</span><span class='line'><span class="n">work_hour_per_two</span> <span class="o">=</span> <span class="p">(</span><span class="mi">6</span><span class="o">.</span><span class="n">.</span><span class="mi">24</span><span class="p">)</span><span class="o">.</span><span class="n">select</span><span class="p">{</span> <span class="o">|</span><span class="n">_</span><span class="o">|</span> <span class="n">_</span><span class="o">%</span><span class="mi">3</span> <span class="o">==</span> <span class="mi">0</span> <span class="p">}</span><span class="o">.</span><span class="n">map</span> <span class="p">{</span><span class="o">|</span><span class="n">_</span><span class="o">|</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="n">_</span><span class="si">}</span><span class="s2">:00&quot;</span> <span class="p">}</span>
</span><span class='line'><span class="n">every</span> <span class="mi">1</span><span class="o">.</span><span class="n">day</span><span class="p">,</span> <span class="n">at</span><span class="p">:</span> <span class="n">work_hour_per_two</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">rake</span> <span class="s1">&#39;my:rake:task&#39;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>




<script async src="http://morizyun.github.io//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<!-- square -->


<p><ins class="adsbygoogle" style="display:inline-block;width:336px;height:280px" data-ad-client="ca-pub-4186413323075068" data-ad-slot="5059873392"></ins></p>

<script>
    (adsbygoogle = window.adsbygoogle || []).push({});
</script>


<h2>Corntabへの設定</h2>

<p>crontab に設定する際のコマンドは以下のとおり。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># wheneverの設定更新</span>
</span><span class='line'><span class="nv">RAILS_ENV</span><span class="o">=</span>development bundle <span class="nb">exec </span>whenever --update-crontab
</span><span class='line'>
</span><span class='line'><span class="c"># crontabの設定削除</span>
</span><span class='line'><span class="nv">RAILS_ENV</span><span class="o">=</span>development bundle <span class="nb">exec </span>whenever --clear-crontab
</span></code></pre></td></tr></table></div></figure>


<p>詳しい設定方法はGitHubの公式ページへ。</p>

<p><a href="https://github.com/javan/whenever" title="javan/whenever · GitHub" class="button big primary">javan/whenever · GitHub</a></p>

<h2>Capistranoとの連携</h2>

<p>Capistranoについての詳しい記事は、『<strong><a href="http://morizyun.github.io/blog/capistrano3-rails-deploy-multi-rbenv/">Capistrano 3系でRails4.1のデプロイ</a></strong>』です。興味があれば是非ご一読下さい。</p>

<h3>capistrano/wheneverの基本的な連携</h3>

<p>wheneverの特徴の一つとして、Deployプロセスの自動化をしてくれるGem Capistranoと簡単に連携できる点があります。</p>

<p>設定方法は、まず以下を<code>Capfile</code>に追記。</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>require <span class="s1">&#39;whenever/capistrano&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>続いて、<code>config/deploy.rb</code>に以下を追記。</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">set</span> :whenever_identifier, -&gt;<span class="o">{</span> <span class="s2">&quot;#{fetch(:application)}_#{fetch(:stage)}&quot;</span> <span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>あとは<code>cap deploy</code>のたびにcrontabをアプデートしてくれます。</p>

<h2>capistrano/wheneverで環境ごとに設定を変更したい場合</h2>

<p>以下の記事を見ながら設定すれば出来る気がします<sup>^</sup></p>

<ul>
<li><strong><a href="http://qiita.com/zaru/items/348c126a205a2e48b4d6">Rails - Wheneverで環境ごとにschedule内容を変更する</a></strong></li>
<li><strong><a href="https://github.com/javan/whenever/wiki/Setting-variables-on-the-fly">Setting variables on the fly · javan/whenever Wiki</a></strong></li>
</ul>


<h2>Special Thanks</h2>

<p><a href="http://higelog.brassworks.jp/?p=1554">CapistranoでWhenever | ひげろぐ</a></p>

<p><a href="http://www.logiclogic.jp/blog/tech/backend/124/">capistrano+wheneverで簡単cron管理-logiclogic&#8217;s blog | logiclogic&#8217;s blog</a></p>

<h2>変更来歴</h2>

<p>(12/12/24 xx:xx) 新規作成<br/>
(13/01/07 18:35) 「補足：別ファイルにローカルタスク用の設定を書く」を追加<br/>
(13/01/08 23:50) 「補足：複数環境でwheneverを使いたい場合&#8230;」を修正<br/>
(14/04/23 22:20) Rails4.1対応、全面書き直し！<br/>
(14/07/10 20:15) 環境ごとにcronの設定を切り替える方法を追記<br/>
(14/11/02 15:25) capistranoで環境ごとに処理を振り分ける方法がrvmのパスが変わってうまく動かなくなったので一度削除<br/>
(15/11/15 17:15) wheneverコマンドの記述を追加<br/>
(16/01/10 14:40) bundle exec を追加。Rails 4.2 x Ruby 2.3.0 動作確認<br/></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ActionMailer Railsアプリからメールを送信[Rails4.2 x Ruby2.3]]]></title>
    <link href="http://morizyun.github.io/blog/action-mailer-rails-mail/"/>
    <updated>2016-01-10T14:15:00+09:00</updated>
    <id>http://morizyun.github.io/blog/action-mailer-rails-mail</id>
    <content type="html"><![CDATA[<p><a href="http://www.amazon.co.jp/gp/product/4873113946/ref=as_li_qf_sp_asin_il?ie=UTF8&camp=247&creative=1211&creativeASIN=4873113946&linkCode=as2&tag=morizyun00-22"><img border="0" src="http://ws.assoc-amazon.jp/widgets/q?_encoding=UTF8&ASIN=4873113946&Format=_SL160_&ID=AsinImage&MarketPlace=JP&ServiceVersion=20070822&WS=1&tag=morizyun00-22" width="150" style="float: left; margin: 0 20px 20px 0;" ></a><img src="http://www.assoc-amazon.jp/e/ir?t=morizyun00-22&l=as2&o=9&a=4873113946" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" />Railsにはメールを送信してくれるActionMailerという機能が標準で組み込まれています。
この機能を使えば、メールを送信するタイプのWebアプリを簡単に構築出来ます。
今回はActionMailerの基本的な設定の使い方を説明します。</p>

<p><strong>(2016/01/10) Rails 4.2 x Ruby 2.3の動作確認。記事をリファクタリング</strong></p>

<!-- more -->


<br style="clear:both;"/>


<script async src="http://morizyun.github.io//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<!-- square -->


<p><ins class="adsbygoogle" style="display:inline-block;width:336px;height:280px" data-ad-client="ca-pub-4186413323075068" data-ad-slot="5059873392"></ins></p>

<script>
    (adsbygoogle = window.adsbygoogle || []).push({});
</script>


<h2>環境設定</h2>

<p>Development環境で、メール送信に関するエラーをログに出力するようにします。<br/></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># config/environments/development.rb</span>
</span><span class='line'><span class="n">config</span><span class="o">.</span><span class="n">action_mailer</span><span class="o">.</span><span class="n">raise_delivery_errors</span> <span class="o">=</span> <span class="kp">true</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>TestApp::Application.configure</code>内にメール送信用の設定をして下さい。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># config/environments/development.rb</span>
</span><span class='line'><span class="c1"># ↓ 以下を追加</span>
</span><span class='line'><span class="n">config</span><span class="o">.</span><span class="n">action_mailer</span><span class="o">.</span><span class="n">default_url_options</span> <span class="o">=</span> <span class="p">{</span> <span class="n">host</span><span class="p">:</span> <span class="s2">&quot;localhost&quot;</span><span class="p">,</span> <span class="n">port</span><span class="p">:</span> <span class="mi">3000</span> <span class="p">}</span>
</span><span class='line'><span class="n">config</span><span class="o">.</span><span class="n">action_mailer</span><span class="o">.</span><span class="n">delivery_method</span> <span class="o">=</span> <span class="ss">:smtp</span>
</span><span class='line'><span class="n">config</span><span class="o">.</span><span class="n">action_mailer</span><span class="o">.</span><span class="n">smtp_settings</span> <span class="o">=</span> <span class="p">{</span>
</span><span class='line'>  <span class="n">address</span><span class="p">:</span> <span class="s2">&quot;SMTPのメールサーバ&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="n">port</span><span class="p">:</span> <span class="mi">587</span><span class="p">,</span>
</span><span class='line'>  <span class="n">domain</span><span class="p">:</span> <span class="s1">&#39;送付するドメイン&#39;</span><span class="p">,</span>
</span><span class='line'>  <span class="n">user_name</span><span class="p">:</span> <span class="s2">&quot;メールサーバ認証用ユーザー&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="n">password</span><span class="p">:</span> <span class="s2">&quot;メールサーバ認証用パスワード&quot;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>ここの設定情報等はサンプルです。以下のようなサービスを設定して、送付情報をセットするといいと思います！</p>

<ul>
<li><strong><a href="https://aws.amazon.com/jp/ses/">Amazon Simple Email Service（クラウドベースのメールサービス） | AWS</a></strong></li>
<li><strong><a href="https://mandrill.com/">Transactional Email from MailChimp - Mandrill</a></strong></li>
</ul>


<h2>ActionMailerのクラスを生成</h2>

<p>以下のコマンドで、ActionMailerのクラスを生成できます。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>rails g mailer message hello
</span><span class='line'>      create  app/mailers/message.rb
</span><span class='line'>      create  app/mailers/application_mailer.rb
</span><span class='line'>      invoke  haml
</span><span class='line'>      create    app/views/message
</span><span class='line'>      create    app/views/message/hello.text.haml
</span><span class='line'>      invoke  rspec
</span><span class='line'>      create    spec/mailers/message_spec.rb
</span><span class='line'>      create    spec/fixtures/message/hello
</span><span class='line'>      create    spec/mailers/previews/message_preview.rb
</span></code></pre></td></tr></table></div></figure>




<script async src="http://morizyun.github.io//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<!-- square -->


<p><ins class="adsbygoogle" style="display:inline-block;width:336px;height:280px" data-ad-client="ca-pub-4186413323075068" data-ad-slot="5059873392"></ins></p>

<script>
    (adsbygoogle = window.adsbygoogle || []).push({});
</script>


<h2>ActionMailerのクラスの編集</h2>

<p>次にActionMailerでメールを送信してみます。</p>

<p>まずは、メインのメソッドを作成します。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># app/mailers/message.rb</span>
</span><span class='line'><span class="k">class</span> <span class="nc">Message</span> <span class="o">&lt;</span> <span class="no">ActionMailer</span><span class="o">::</span><span class="no">Base</span>
</span><span class='line'>  <span class="c1"># デフォルトでの送信元のアドレス</span>
</span><span class='line'>  <span class="n">default</span> <span class="n">from</span><span class="p">:</span> <span class="s2">&quot;from@example.com&quot;</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">hello</span><span class="p">(</span><span class="nb">name</span><span class="p">)</span>
</span><span class='line'>    <span class="vi">@name</span> <span class="o">=</span> <span class="nb">name</span>
</span><span class='line'>    <span class="n">mail</span><span class="p">(</span>
</span><span class='line'>      <span class="n">to</span><span class="p">:</span>      <span class="s1">&#39;to@example.net&#39;</span><span class="p">,</span>
</span><span class='line'>      <span class="n">subject</span><span class="p">:</span> <span class="s1">&#39;Mail from Message&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="p">)</span> <span class="k">do</span> <span class="o">|</span><span class="nb">format</span><span class="o">|</span>
</span><span class='line'>      <span class="nb">format</span><span class="o">.</span><span class="n">html</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>メール用のViewを編集します。ファイル名を変えれば、html形式だけではなく、text形式でも利用可能です。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='haml'><span class='line'><span class="cp">-# app/views/message/hello.html.haml</span>
</span><span class='line'><span class="p">=</span> <span class="s2">&quot;There is </span><span class="si">#{</span><span class="vi">@name</span><span class="si">}</span><span class="s2">&#39;s body.&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>コマンドラインからメールを送信してみます。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># Rails console に入る</span>
</span><span class='line'><span class="nv">$ </span>rails c
</span><span class='line'>
</span><span class='line'><span class="c"># メール送信</span>
</span><span class='line'>Message.hello.deliver
</span></code></pre></td></tr></table></div></figure>


<p>これでメールが、Messageクラスの『to@example.org』に送信されていれば、メール送信成功です。</p>

<h2>補足：ActionMailerのView内でHelperメソッドを使う場合</h2>

<p>ActionMailerのView内でhelperメソッドを使いたい場合は、<code>add_template_helper(ApplicationHelper)</code>を追加すればつかえるようになるそうです。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># app/mailers/message.rb</span>
</span><span class='line'><span class="k">class</span> <span class="nc">Message</span> <span class="o">&lt;</span> <span class="no">ActionMailer</span><span class="o">::</span><span class="no">Base</span>
</span><span class='line'>  <span class="n">add_template_helper</span><span class="p">(</span><span class="no">ApplicationHelper</span><span class="p">)</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Special Thanks</h2>

<ul>
<li><strong><a href="http://blog.scimpr.com/2012/09/15/rails%E3%81%A7%E3%83%A1%E3%83%BC%E3%83%AB%E9%80%81%E4%BF%A1%E3%82%92%E3%83%86%E3%82%B9%E3%83%88%EF%BD%9Eactionmailer/">Railsでメール送信をテスト～ActionMailer | Scimpr Blog</a></strong></li>
<li><strong><a href="http://qiita.com/items/688d383dc831c8b9a7f9">Rubyでメールを送る #Ruby #mail #ActionMailer - Qiita</a></strong></li>
<li><strong><a href="http://d.hatena.ne.jp/babie/20100807/1281141307">Rails 3.0 でメールの送信に Gmail を使う - LazyLoadLife</a></strong></li>
<li><strong><a href="http://stackoverflow.com/questions/1416978/how-to-use-my-view-helpers-in-my-actionmailer-views">ruby on rails - How to use my view helpers in my ActionMailer views? - Stack Overflow</a></strong></li>
</ul>


<h2>変更来歴</h2>

<ul>
<li>2013/02/13 20:55 新規作成<br/></li>
<li>2013/03/02 13:20 『補足：ActionMailerのView内でHelperメソッドを使う場合』を追記<br/></li>
<li>2016/01/10 14:15 最新の状況に合わせて内容をリファクタリング<br/></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[figaro HerokuやDokkuの環境変数の管理に便利！]]></title>
    <link href="http://morizyun.github.io/blog/figaro-config-heroku-dokku-rails-ruby/"/>
    <updated>2016-01-09T23:55:00+09:00</updated>
    <id>http://morizyun.github.io/blog/figaro-config-heroku-dokku-rails-ruby</id>
    <content type="html"><![CDATA[<p><a href="http://www.amazon.co.jp/gp/product/B00NXMTLHK/ref=as_li_qf_sp_asin_il?ie=UTF8&camp=247&creative=1211&creativeASIN=B00NXMTLHK&linkCode=as2&tag=morizyun00-22"><img border="0" src="http://ws.assoc-amazon.jp/widgets/q?_encoding=UTF8&ASIN=B00NXMTLHK&Format=_SL160_&ID=AsinImage&MarketPlace=JP&ServiceVersion=20070822&WS=1&tag=morizyun00-22" width="150" style="float: left; margin: 0 20px 20px 0;" ></a><img src="http://www.assoc-amazon.jp/e/ir?t=morizyun00-22&l=as2&o=9&a=B00NXMTLHK" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" />
HerokuやDokkuで使う環境変数を管理するGem「<strong><a href="https://github.com/laserlemon/figaro">laserlemon/figaro</a></strong>」の紹介です。
モダンなWebアプリケーションの設計の指針とも言える「<strong><a href="http://12factor.net/ja/">Twelve-Factor App</a></strong>」を実現するのを手助けしてくれる素晴らしいGemです。</p>

<!-- more -->


<br style="clear:both;"/>


<script async src="http://morizyun.github.io//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<!-- square -->


<p><ins class="adsbygoogle" style="display:inline-block;width:336px;height:280px" data-ad-client="ca-pub-4186413323075068" data-ad-slot="5059873392"></ins></p>

<script>
    (adsbygoogle = window.adsbygoogle || []).push({});
</script>


<h2>Twelve-Factor App</h2>

<p>「<strong><a href="http://12factor.net/ja/">Twelve-Factor App</a></strong>」にある通り、次の設計指針のことです。
今回のFigaroは(3)の設定を環境変数に格納するためのものです。</p>

<pre>
(1) コードベース : バージョン管理されている1つのコードベースがあり、それにより複数の環境にデプロイできる
(2) 依存関係 : 依存関係を明示的に宣言し分離する
(3) 設定 : 設定を環境変数に格納する
(4) バックエンドサービス : バックエンドのサービスをアタッチされたリソースとして扱う
(5) ビルド、リリース、実行 : ビルド、リリース、実行の3つのステージをちゃんと分離する
(6) プロセス : アプリケーションを1つもしくは複数のステートレスなプロセスとして実行する
(7) ポートバインディング : ポートバインディングを通してサービスを公開する
(8) 並行性 : プロセスモデルによってスケールアウトする
(9) 廃棄容易性 : 高速な起動とグレースフルシャットダウンで堅牢性を最大化する
(10) 開発/本番一致 : 開発、ステージング、本番環境をできるだけ一致させた状態を保つ
(11) ログ : ログをイベントストリームとして扱う
(12) 管理プロセス : 管理タスクを1回限りのプロセスとして実行する
</pre>


<h2>Gemのインストール</h2>

<p><code>Gemfile</code>に以下を追加して、<code>bundle install</code>を実行してください。
下記は用途に合わせてどちらかをお使いください。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># 公式のものを使う場合(Dokku非対応の公式のものを使う場合はこちら)</span>
</span><span class='line'><span class="n">gem</span> <span class="s1">&#39;figaro&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># Dokku対応を行ったバージョンです(PR中なのでそのうち本体に取り込まれるかも)</span>
</span><span class='line'><span class="n">gem</span> <span class="s1">&#39;figaro&#39;</span><span class="p">,</span> <span class="n">github</span><span class="p">:</span> <span class="s1">&#39;morizyun/figaro&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<h2>設定方法</h2>

<p>以下の様に設定してください。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># config/application.yml</span>
</span><span class='line'>
</span><span class='line'><span class="n">pusher_app_id</span><span class="p">:</span> <span class="s2">&quot;2954&quot;</span>
</span><span class='line'><span class="n">pusher_key</span><span class="p">:</span> <span class="s2">&quot;7381a978f7dd7f9a1117&quot;</span>
</span><span class='line'><span class="n">pusher_secret</span><span class="p">:</span> <span class="s2">&quot;abdc3b896a0ffb85d373&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="nb">test</span><span class="p">:</span>
</span><span class='line'>  <span class="n">pusher_app_id</span><span class="p">:</span> <span class="s2">&quot;5112&quot;</span>
</span><span class='line'>  <span class="n">pusher_key</span><span class="p">:</span> <span class="s2">&quot;ad69caf9a44dcac1fb28&quot;</span>
</span><span class='line'>  <span class="n">pusher_secret</span><span class="p">:</span> <span class="s2">&quot;83ca7aa160fedaf3b350&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Railsアプリ側からは次のように扱います。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># config/initializers/pusher.rb</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># 一般的には以下の様に使います</span>
</span><span class='line'><span class="no">Pusher</span><span class="o">.</span><span class="n">app_id</span> <span class="o">=</span> <span class="no">ENV</span><span class="o">[</span><span class="s2">&quot;pusher_app_id&quot;</span><span class="o">]</span>
</span><span class='line'><span class="no">Pusher</span><span class="o">.</span><span class="n">key</span>    <span class="o">=</span> <span class="no">ENV</span><span class="o">[</span><span class="s2">&quot;pusher_key&quot;</span><span class="o">]</span>
</span><span class='line'><span class="no">Pusher</span><span class="o">.</span><span class="n">secret</span> <span class="o">=</span> <span class="no">ENV</span><span class="o">[</span><span class="s2">&quot;pusher_secret&quot;</span><span class="o">]</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># こんな風に Figaro.envで使うこともできます</span>
</span><span class='line'><span class="no">Figaro</span><span class="o">.</span><span class="n">env</span><span class="o">.</span><span class="n">pusher_app_id</span> <span class="c1"># =&gt; &quot;5112&quot;</span>
</span><span class='line'><span class="no">Figaro</span><span class="o">.</span><span class="n">env</span><span class="o">.</span><span class="n">pusher_app_id?</span> <span class="c1"># =&gt; true</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Herokuへの設定</h2>

<p>「<strong><a href="https://toolbelt.heroku.com/">Heroku Toolbelt</a></strong>」をインストールして、Herokuのアプリを作成し、
Railsアプリ側をデプロイする段階になったら、以下のコマンドで環境変数に設定を登録します。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># 手動で個別登録</span>
</span><span class='line'><span class="nv">$ </span>heroku config:set <span class="nv">google_analytics_key</span><span class="o">=</span>UA-35722661-5
</span><span class='line'>
</span><span class='line'><span class="c"># ファイルから一括登録</span>
</span><span class='line'><span class="nv">$ </span>figaro heroku:set -e production
</span><span class='line'>
</span><span class='line'><span class="c"># 使い方の詳細はこちら</span>
</span><span class='line'><span class="nv">$ </span>figaro <span class="nb">help </span>heroku:set
</span></code></pre></td></tr></table></div></figure>


<h2>Dokkuへの設定</h2>

<p>Dokkuの設定もほぼ同じです。<code>dokku-cli</code>をインストールして、gitリポジトリを設定したら、herokuとほぼ同じことを実行できます。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># dokku の git を登録</span>
</span><span class='line'><span class="nv">$ </span>git remote add dokku dokku@example-dokku-server.com:example-app
</span><span class='line'>
</span><span class='line'><span class="c"># dokku-cli をインストール</span>
</span><span class='line'><span class="nv">$ </span>gem install dokku-cli
</span><span class='line'>
</span><span class='line'><span class="c"># 手動で個別登録</span>
</span><span class='line'><span class="nv">$ </span>dokku config:set <span class="nv">google_analytics_key</span><span class="o">=</span>UA-35722661-5
</span><span class='line'>
</span><span class='line'><span class="c"># ファイルから一括登録</span>
</span><span class='line'><span class="nv">$ </span>figaro dokku:set -e production
</span><span class='line'>
</span><span class='line'><span class="c"># 使い方の詳細はこちら</span>
</span><span class='line'><span class="nv">$ </span>figaro <span class="nb">help </span>dokku:set
</span></code></pre></td></tr></table></div></figure>


<h2>おまけ</h2>

<p>正直 <code>Dokku</code> で使おうと思ったら、すでに拡張してくれている人がいたのでうほーいと思ったら、
Travis CIのRSpecがコケてて散々悩みながら、デバックしてたら夜中の2時でしたww</p>

<p><strong><a href="https://github.com/laserlemon/figaro/pull/227">Support dokku cli by morizyun · Pull Request #227 · laserlemon/figaro</a></strong></p>

<p><code>Pull Request</code> うまくいくといいなぁ</p>

<script async src="http://morizyun.github.io//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>


<!-- square -->


<p><ins class="adsbygoogle" style="display:inline-block;width:336px;height:280px" data-ad-client="ca-pub-4186413323075068" data-ad-slot="5059873392"></ins></p>

<script>
    (adsbygoogle = window.adsbygoogle || []).push({});
</script>


<h2>Special Thanks</h2>

<ul>
<li><strong><a href="http://xoyip.hatenablog.com/entry/2014/04/09/214405">Rails4.1のsecrets.ymlはfigaroと違うの？ - PILOG</a></strong></li>
</ul>

]]></content>
  </entry>
  
</feed>
